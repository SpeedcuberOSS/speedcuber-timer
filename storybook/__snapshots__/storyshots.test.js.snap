// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots AttemptCard default 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "alignSelf": undefined,
          "bottom": undefined,
          "end": undefined,
          "left": undefined,
          "position": undefined,
          "right": undefined,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.15,
          "shadowRadius": 3,
          "start": undefined,
          "top": undefined,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 1,
              "width": 0,
            },
            "shadowOpacity": 0.3,
            "shadowRadius": 1,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "backgroundColor": "rgba(247, 243, 249, 1)",
              "borderRadius": 6,
              "elevation": 1,
              "margin": 10,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexShrink": 1,
              }
            }
            testID="card"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "paddingLeft": 16,
                  },
                  Object {
                    "minHeight": 72,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "flexDirection": "column",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 16,
                        "fontWeight": "400",
                        "letterSpacing": 0.15,
                        "lineHeight": 24,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      Array [
                        Object {
                          "minHeight": 30,
                          "paddingRight": 16,
                        },
                        Object {
                          "marginBottom": 0,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  10.000
                </Text>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "letterSpacing": 0.25,
                        "lineHeight": 20,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      Array [
                        Object {
                          "marginVertical": 0,
                          "minHeight": 20,
                          "paddingRight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  9/20/2022, 8:37:46 PM
                </Text>
              </View>
              <View />
            </View>
            <View
              style={
                Array [
                  Object {
                    "paddingHorizontal": 16,
                  },
                  Object {
                    "paddingBottom": 16,
                  },
                  undefined,
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "rgba(28, 27, 31, 1)",
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 12,
                      "fontWeight": "400",
                      "letterSpacing": 0.4,
                      "lineHeight": 16,
                    },
                    Object {
                      "textAlign": "left",
                    },
                    Object {
                      "writingDirection": "ltr",
                    },
                    undefined,
                  ]
                }
              >
                R U
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
</RNCSafeAreaProvider>
`;

exports[`Storyshots AttemptDetails default 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      style={Object {}}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "marginVertical": 8,
              },
              undefined,
            ]
          }
          theme={
            Object {
              "animation": Object {
                "scale": 1,
              },
              "colors": Object {
                "backdrop": "rgba(50, 47, 55, 0.4)",
                "background": "rgba(255, 251, 254, 1)",
                "elevation": Object {
                  "level0": "transparent",
                  "level1": "rgb(247, 243, 249)",
                  "level2": "rgb(243, 237, 246)",
                  "level3": "rgb(238, 232, 244)",
                  "level4": "rgb(236, 230, 243)",
                  "level5": "rgb(233, 227, 241)",
                },
                "error": "rgba(179, 38, 30, 1)",
                "errorContainer": "rgba(249, 222, 220, 1)",
                "inverseOnSurface": "rgba(244, 239, 244, 1)",
                "inversePrimary": "rgba(208, 188, 255, 1)",
                "inverseSurface": "rgba(49, 48, 51, 1)",
                "onBackground": "rgba(28, 27, 31, 1)",
                "onError": "rgba(255, 255, 255, 1)",
                "onErrorContainer": "rgba(65, 14, 11, 1)",
                "onPrimary": "rgba(255, 255, 255, 1)",
                "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                "onSecondary": "rgba(255, 255, 255, 1)",
                "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                "onSurface": "rgba(28, 27, 31, 1)",
                "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                "onTertiary": "rgba(255, 255, 255, 1)",
                "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                "outline": "rgba(121, 116, 126, 1)",
                "outlineVariant": "rgba(202, 196, 208, 1)",
                "primary": "rgba(103, 80, 164, 1)",
                "primaryContainer": "rgba(234, 221, 255, 1)",
                "scrim": "rgba(0, 0, 0, 1)",
                "secondary": "#1B5E20",
                "secondaryContainer": "rgba(232, 222, 248, 1)",
                "shadow": "rgba(0, 0, 0, 1)",
                "surface": "rgba(255, 251, 254, 1)",
                "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                "surfaceVariant": "rgba(231, 224, 236, 1)",
                "tertiary": "rgba(125, 82, 96, 1)",
                "tertiaryContainer": "rgba(255, 216, 228, 1)",
              },
              "dark": false,
              "fonts": Object {
                "bodyLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "bodyMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "letterSpacing": 0.25,
                  "lineHeight": 20,
                },
                "bodySmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "400",
                  "letterSpacing": 0.4,
                  "lineHeight": 16,
                },
                "default": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                },
                "displayLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 57,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 64,
                },
                "displayMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 45,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 52,
                },
                "displaySmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 36,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 44,
                },
                "headlineLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 32,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 40,
                },
                "headlineMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 28,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 36,
                },
                "headlineSmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 24,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 32,
                },
                "labelLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                "labelMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "labelSmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "titleLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 22,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 28,
                },
                "titleMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "titleSmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
              },
              "isV3": true,
              "roundness": 2,
              "version": 3,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                false,
                false,
                Array [
                  Object {
                    "paddingRight": 24,
                    "paddingVertical": 8,
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginVertical": 6,
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    Object {
                      "alignSelf": "center",
                      "marginLeft": 16,
                      "marginRight": 0,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "paddingLeft": 16,
                    },
                    Object {
                      "flex": 1,
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      Array [
                        Object {
                          "fontSize": 16,
                        },
                        Object {
                          "color": "rgba(28, 27, 31, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  10.000
                </Text>
                <Text
                  numberOfLines={2}
                  onTextLayout={[Function]}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      Array [
                        Object {
                          "fontSize": 14,
                        },
                        Object {
                          "color": "rgba(73, 69, 79, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  9/20/2022, 8:37:46 PM
                </Text>
              </View>
            </View>
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                false,
                false,
                Array [
                  Object {
                    "paddingRight": 24,
                    "paddingVertical": 8,
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginVertical": 6,
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    Object {
                      "alignSelf": "center",
                      "marginLeft": 16,
                      "marginRight": 0,
                      "marginVertical": 0,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "paddingLeft": 16,
                    },
                    Object {
                      "flex": 1,
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={0}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      Array [
                        Object {
                          "fontSize": 16,
                        },
                        Object {
                          "color": "rgba(28, 27, 31, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  What a neat solve!
                </Text>
              </View>
            </View>
          </View>
          <View>
            <View
              style={
                Object {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "disabled": false,
                    "expanded": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    false,
                    Array [
                      Object {
                        "padding": 8,
                      },
                      Object {
                        "marginLeft": 10,
                      },
                    ],
                  ]
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <View
                    pointerEvents="box-none"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "WCAEvent",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "margin": 8,
                        },
                        Object {
                          "flex": 1,
                          "justifyContent": "center",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={0}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "textAlign": "left",
                          },
                          Object {
                            "color": "rgba(28, 27, 31, 1)",
                            "fontFamily": "Rubik-Regular",
                            "fontWeight": "400",
                            "letterSpacing": 0,
                          },
                          Object {
                            "writingDirection": "ltr",
                          },
                          Array [
                            Object {
                              "fontSize": 16,
                            },
                            Object {
                              "color": "rgba(28, 27, 31, 1)",
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      R U
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "margin": 8,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          Array [
                            Object {
                              "lineHeight": 24,
                              "transform": Array [
                                Object {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            Object {
                              "backgroundColor": "transparent",
                            },
                          ],
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      󰅀
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AttemptDetails with DNF 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      style={Object {}}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "marginVertical": 8,
              },
              undefined,
            ]
          }
          theme={
            Object {
              "animation": Object {
                "scale": 1,
              },
              "colors": Object {
                "backdrop": "rgba(50, 47, 55, 0.4)",
                "background": "rgba(255, 251, 254, 1)",
                "elevation": Object {
                  "level0": "transparent",
                  "level1": "rgb(247, 243, 249)",
                  "level2": "rgb(243, 237, 246)",
                  "level3": "rgb(238, 232, 244)",
                  "level4": "rgb(236, 230, 243)",
                  "level5": "rgb(233, 227, 241)",
                },
                "error": "rgba(179, 38, 30, 1)",
                "errorContainer": "rgba(249, 222, 220, 1)",
                "inverseOnSurface": "rgba(244, 239, 244, 1)",
                "inversePrimary": "rgba(208, 188, 255, 1)",
                "inverseSurface": "rgba(49, 48, 51, 1)",
                "onBackground": "rgba(28, 27, 31, 1)",
                "onError": "rgba(255, 255, 255, 1)",
                "onErrorContainer": "rgba(65, 14, 11, 1)",
                "onPrimary": "rgba(255, 255, 255, 1)",
                "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                "onSecondary": "rgba(255, 255, 255, 1)",
                "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                "onSurface": "rgba(28, 27, 31, 1)",
                "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                "onTertiary": "rgba(255, 255, 255, 1)",
                "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                "outline": "rgba(121, 116, 126, 1)",
                "outlineVariant": "rgba(202, 196, 208, 1)",
                "primary": "rgba(103, 80, 164, 1)",
                "primaryContainer": "rgba(234, 221, 255, 1)",
                "scrim": "rgba(0, 0, 0, 1)",
                "secondary": "#1B5E20",
                "secondaryContainer": "rgba(232, 222, 248, 1)",
                "shadow": "rgba(0, 0, 0, 1)",
                "surface": "rgba(255, 251, 254, 1)",
                "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                "surfaceVariant": "rgba(231, 224, 236, 1)",
                "tertiary": "rgba(125, 82, 96, 1)",
                "tertiaryContainer": "rgba(255, 216, 228, 1)",
              },
              "dark": false,
              "fonts": Object {
                "bodyLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "bodyMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "letterSpacing": 0.25,
                  "lineHeight": 20,
                },
                "bodySmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "400",
                  "letterSpacing": 0.4,
                  "lineHeight": 16,
                },
                "default": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                },
                "displayLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 57,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 64,
                },
                "displayMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 45,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 52,
                },
                "displaySmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 36,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 44,
                },
                "headlineLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 32,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 40,
                },
                "headlineMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 28,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 36,
                },
                "headlineSmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 24,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 32,
                },
                "labelLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                "labelMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "labelSmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "titleLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 22,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 28,
                },
                "titleMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "titleSmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
              },
              "isV3": true,
              "roundness": 2,
              "version": 3,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                false,
                false,
                Array [
                  Object {
                    "paddingRight": 24,
                    "paddingVertical": 8,
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginVertical": 6,
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    Object {
                      "alignSelf": "center",
                      "marginLeft": 16,
                      "marginRight": 0,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "paddingLeft": 16,
                    },
                    Object {
                      "flex": 1,
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      Array [
                        Object {
                          "fontSize": 16,
                        },
                        Object {
                          "color": "rgba(28, 27, 31, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  DNF
                </Text>
                <Text
                  numberOfLines={2}
                  onTextLayout={[Function]}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      Array [
                        Object {
                          "fontSize": 14,
                        },
                        Object {
                          "color": "rgba(73, 69, 79, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  9/20/2022, 8:37:46 PM
                </Text>
              </View>
            </View>
          </View>
          <View>
            <View
              style={
                Object {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "disabled": false,
                    "expanded": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    false,
                    Array [
                      Object {
                        "padding": 8,
                      },
                      Object {
                        "marginLeft": 10,
                      },
                    ],
                  ]
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <View
                    pointerEvents="box-none"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "WCAEvent",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "margin": 8,
                        },
                        Object {
                          "flex": 1,
                          "justifyContent": "center",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={0}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "textAlign": "left",
                          },
                          Object {
                            "color": "rgba(28, 27, 31, 1)",
                            "fontFamily": "Rubik-Regular",
                            "fontWeight": "400",
                            "letterSpacing": 0,
                          },
                          Object {
                            "writingDirection": "ltr",
                          },
                          Array [
                            Object {
                              "fontSize": 16,
                            },
                            Object {
                              "color": "rgba(28, 27, 31, 1)",
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      R U R' U'
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "margin": 8,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          Array [
                            Object {
                              "lineHeight": 24,
                              "transform": Array [
                                Object {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            Object {
                              "backgroundColor": "transparent",
                            },
                          ],
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      󰅀
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AttemptDetails with DNS 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      style={Object {}}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "marginVertical": 8,
              },
              undefined,
            ]
          }
          theme={
            Object {
              "animation": Object {
                "scale": 1,
              },
              "colors": Object {
                "backdrop": "rgba(50, 47, 55, 0.4)",
                "background": "rgba(255, 251, 254, 1)",
                "elevation": Object {
                  "level0": "transparent",
                  "level1": "rgb(247, 243, 249)",
                  "level2": "rgb(243, 237, 246)",
                  "level3": "rgb(238, 232, 244)",
                  "level4": "rgb(236, 230, 243)",
                  "level5": "rgb(233, 227, 241)",
                },
                "error": "rgba(179, 38, 30, 1)",
                "errorContainer": "rgba(249, 222, 220, 1)",
                "inverseOnSurface": "rgba(244, 239, 244, 1)",
                "inversePrimary": "rgba(208, 188, 255, 1)",
                "inverseSurface": "rgba(49, 48, 51, 1)",
                "onBackground": "rgba(28, 27, 31, 1)",
                "onError": "rgba(255, 255, 255, 1)",
                "onErrorContainer": "rgba(65, 14, 11, 1)",
                "onPrimary": "rgba(255, 255, 255, 1)",
                "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                "onSecondary": "rgba(255, 255, 255, 1)",
                "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                "onSurface": "rgba(28, 27, 31, 1)",
                "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                "onTertiary": "rgba(255, 255, 255, 1)",
                "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                "outline": "rgba(121, 116, 126, 1)",
                "outlineVariant": "rgba(202, 196, 208, 1)",
                "primary": "rgba(103, 80, 164, 1)",
                "primaryContainer": "rgba(234, 221, 255, 1)",
                "scrim": "rgba(0, 0, 0, 1)",
                "secondary": "#1B5E20",
                "secondaryContainer": "rgba(232, 222, 248, 1)",
                "shadow": "rgba(0, 0, 0, 1)",
                "surface": "rgba(255, 251, 254, 1)",
                "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                "surfaceVariant": "rgba(231, 224, 236, 1)",
                "tertiary": "rgba(125, 82, 96, 1)",
                "tertiaryContainer": "rgba(255, 216, 228, 1)",
              },
              "dark": false,
              "fonts": Object {
                "bodyLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "bodyMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "letterSpacing": 0.25,
                  "lineHeight": 20,
                },
                "bodySmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "400",
                  "letterSpacing": 0.4,
                  "lineHeight": 16,
                },
                "default": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                },
                "displayLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 57,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 64,
                },
                "displayMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 45,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 52,
                },
                "displaySmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 36,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 44,
                },
                "headlineLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 32,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 40,
                },
                "headlineMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 28,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 36,
                },
                "headlineSmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 24,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 32,
                },
                "labelLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                "labelMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "labelSmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "titleLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 22,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 28,
                },
                "titleMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "titleSmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
              },
              "isV3": true,
              "roundness": 2,
              "version": 3,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                false,
                false,
                Array [
                  Object {
                    "paddingRight": 24,
                    "paddingVertical": 8,
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginVertical": 6,
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    Object {
                      "alignSelf": "center",
                      "marginLeft": 16,
                      "marginRight": 0,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "paddingLeft": 16,
                    },
                    Object {
                      "flex": 1,
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      Array [
                        Object {
                          "fontSize": 16,
                        },
                        Object {
                          "color": "rgba(28, 27, 31, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  DNS
                </Text>
                <Text
                  numberOfLines={2}
                  onTextLayout={[Function]}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      Array [
                        Object {
                          "fontSize": 14,
                        },
                        Object {
                          "color": "rgba(73, 69, 79, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  9/20/2022, 8:37:46 PM
                </Text>
              </View>
            </View>
          </View>
          <View>
            <View
              style={
                Object {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "disabled": false,
                    "expanded": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    false,
                    Array [
                      Object {
                        "padding": 8,
                      },
                      Object {
                        "marginLeft": 10,
                      },
                    ],
                  ]
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <View
                    pointerEvents="box-none"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "WCAEvent",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "margin": 8,
                        },
                        Object {
                          "flex": 1,
                          "justifyContent": "center",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={0}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "textAlign": "left",
                          },
                          Object {
                            "color": "rgba(28, 27, 31, 1)",
                            "fontFamily": "Rubik-Regular",
                            "fontWeight": "400",
                            "letterSpacing": 0,
                          },
                          Object {
                            "writingDirection": "ltr",
                          },
                          Array [
                            Object {
                              "fontSize": 16,
                            },
                            Object {
                              "color": "rgba(28, 27, 31, 1)",
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      R U R' U'
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "margin": 8,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          Array [
                            Object {
                              "lineHeight": 24,
                              "transform": Array [
                                Object {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            Object {
                              "backgroundColor": "transparent",
                            },
                          ],
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      󰅀
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AttemptDetails with Infractions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      style={Object {}}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "marginVertical": 8,
              },
              undefined,
            ]
          }
          theme={
            Object {
              "animation": Object {
                "scale": 1,
              },
              "colors": Object {
                "backdrop": "rgba(50, 47, 55, 0.4)",
                "background": "rgba(255, 251, 254, 1)",
                "elevation": Object {
                  "level0": "transparent",
                  "level1": "rgb(247, 243, 249)",
                  "level2": "rgb(243, 237, 246)",
                  "level3": "rgb(238, 232, 244)",
                  "level4": "rgb(236, 230, 243)",
                  "level5": "rgb(233, 227, 241)",
                },
                "error": "rgba(179, 38, 30, 1)",
                "errorContainer": "rgba(249, 222, 220, 1)",
                "inverseOnSurface": "rgba(244, 239, 244, 1)",
                "inversePrimary": "rgba(208, 188, 255, 1)",
                "inverseSurface": "rgba(49, 48, 51, 1)",
                "onBackground": "rgba(28, 27, 31, 1)",
                "onError": "rgba(255, 255, 255, 1)",
                "onErrorContainer": "rgba(65, 14, 11, 1)",
                "onPrimary": "rgba(255, 255, 255, 1)",
                "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                "onSecondary": "rgba(255, 255, 255, 1)",
                "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                "onSurface": "rgba(28, 27, 31, 1)",
                "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                "onTertiary": "rgba(255, 255, 255, 1)",
                "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                "outline": "rgba(121, 116, 126, 1)",
                "outlineVariant": "rgba(202, 196, 208, 1)",
                "primary": "rgba(103, 80, 164, 1)",
                "primaryContainer": "rgba(234, 221, 255, 1)",
                "scrim": "rgba(0, 0, 0, 1)",
                "secondary": "#1B5E20",
                "secondaryContainer": "rgba(232, 222, 248, 1)",
                "shadow": "rgba(0, 0, 0, 1)",
                "surface": "rgba(255, 251, 254, 1)",
                "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                "surfaceVariant": "rgba(231, 224, 236, 1)",
                "tertiary": "rgba(125, 82, 96, 1)",
                "tertiaryContainer": "rgba(255, 216, 228, 1)",
              },
              "dark": false,
              "fonts": Object {
                "bodyLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "bodyMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "letterSpacing": 0.25,
                  "lineHeight": 20,
                },
                "bodySmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "400",
                  "letterSpacing": 0.4,
                  "lineHeight": 16,
                },
                "default": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                },
                "displayLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 57,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 64,
                },
                "displayMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 45,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 52,
                },
                "displaySmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 36,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 44,
                },
                "headlineLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 32,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 40,
                },
                "headlineMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 28,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 36,
                },
                "headlineSmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 24,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 32,
                },
                "labelLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                "labelMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "labelSmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "titleLarge": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 22,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 28,
                },
                "titleMedium": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "titleSmall": Object {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
              },
              "isV3": true,
              "roundness": 2,
              "version": 3,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                false,
                false,
                Array [
                  Object {
                    "paddingRight": 24,
                    "paddingVertical": 8,
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "marginVertical": 6,
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    Object {
                      "alignSelf": "center",
                      "marginLeft": 16,
                      "marginRight": 0,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      Object {
                        "fontFamily": "Entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "paddingLeft": 16,
                    },
                    Object {
                      "flex": 1,
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      Array [
                        Object {
                          "fontSize": 16,
                        },
                        Object {
                          "color": "rgba(28, 27, 31, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  12.000 (+2)
                </Text>
                <Text
                  numberOfLines={2}
                  onTextLayout={[Function]}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      Array [
                        Object {
                          "fontSize": 14,
                        },
                        Object {
                          "color": "rgba(73, 69, 79, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  9/20/2022, 8:37:46 PM
                </Text>
              </View>
            </View>
          </View>
          <View>
            <View
              style={
                Object {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "disabled": false,
                    "expanded": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    false,
                    Array [
                      Object {
                        "padding": 8,
                      },
                      Object {
                        "marginLeft": 10,
                      },
                    ],
                  ]
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <View
                    pointerEvents="box-none"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          undefined,
                          Object {
                            "fontFamily": "WCAEvent",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "margin": 8,
                        },
                        Object {
                          "flex": 1,
                          "justifyContent": "center",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={0}
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "textAlign": "left",
                          },
                          Object {
                            "color": "rgba(28, 27, 31, 1)",
                            "fontFamily": "Rubik-Regular",
                            "fontWeight": "400",
                            "letterSpacing": 0,
                          },
                          Object {
                            "writingDirection": "ltr",
                          },
                          Array [
                            Object {
                              "fontSize": 16,
                            },
                            Object {
                              "color": "rgba(28, 27, 31, 1)",
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      R U R' U'
                    </Text>
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "margin": 8,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          Array [
                            Object {
                              "lineHeight": 24,
                              "transform": Array [
                                Object {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            Object {
                              "backgroundColor": "transparent",
                            },
                          ],
                          Object {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      󰅀
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AttemptDetailsModal default 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "alignSelf": undefined,
          "bottom": undefined,
          "end": undefined,
          "left": undefined,
          "position": undefined,
          "right": undefined,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
          "start": undefined,
          "top": undefined,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 10,
              "borderStyle": "solid",
              "borderWidth": 0,
              "minWidth": 64,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                false,
                Object {
                  "borderRadius": 10,
                },
              ]
            }
            testID="button"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "rgba(28, 27, 31, 1)",
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 14,
                      "fontWeight": "500",
                      "letterSpacing": 0.1,
                      "lineHeight": 20,
                    },
                    Object {
                      "textAlign": "left",
                    },
                    Object {
                      "writingDirection": "ltr",
                    },
                    Array [
                      Object {
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      false,
                      Object {
                        "marginHorizontal": 12,
                      },
                      undefined,
                      false,
                      Object {
                        "color": "rgba(103, 80, 164, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Show Modal
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityLiveRegion="polite"
      accessibilityViewIsModal={true}
      collapsable={false}
      onAccessibilityEscape={[Function]}
      pointerEvents="auto"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="modal"
    >
      <View
        accessibilityLabel="Close modal"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        importantForAccessibility="no"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(50, 47, 55, 0.4)",
            "flex": 1,
            "opacity": 1,
          }
        }
        testID="modal-backdrop"
      />
      <View
        pointerEvents="box-none"
        style={
          Array [
            Object {
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "marginBottom": 0,
              "marginTop": 0,
            },
            undefined,
          ]
        }
        testID="modal-wrapper"
      >
        <View
          collapsable={false}
          style={
            Object {
              "alignSelf": undefined,
              "bottom": undefined,
              "end": undefined,
              "left": undefined,
              "position": undefined,
              "right": undefined,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.15,
              "shadowRadius": 3,
              "start": undefined,
              "top": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 1,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                  "borderRadius": 10,
                  "justifyContent": "center",
                  "margin": 20,
                  "maxHeight": 800.4,
                  "opacity": 1,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "alignSelf": undefined,
                    "bottom": undefined,
                    "end": undefined,
                    "left": undefined,
                    "position": undefined,
                    "right": undefined,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.15,
                    "shadowRadius": 6,
                    "start": undefined,
                    "top": undefined,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 2,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "rgb(243, 237, 246)",
                        "borderTopLeftRadius": 10,
                        "borderTopRightRadius": 10,
                        "maxHeight": 120.05999999999999,
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "rgba(28, 27, 31, 1)",
                            "fontFamily": "Rubik-Regular",
                            "fontSize": 16,
                            "fontWeight": "500",
                            "letterSpacing": 0.15,
                            "lineHeight": 24,
                          },
                          Object {
                            "textAlign": "left",
                          },
                          Object {
                            "writingDirection": "ltr",
                          },
                          Object {
                            "padding": 10,
                          },
                        ]
                      }
                    >
                      dialogs.attempt_details
                    </Text>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "stretch",
                    "maxHeight": 680.3399999999999,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "paddingBottom": 0,
                    }
                  }
                >
                  <RCTScrollView
                    style={Object {}}
                  >
                    <View>
                      <View
                        style={
                          Array [
                            Object {
                              "marginVertical": 8,
                            },
                            undefined,
                          ]
                        }
                        theme={
                          Object {
                            "animation": Object {
                              "scale": 1,
                            },
                            "colors": Object {
                              "backdrop": "rgba(50, 47, 55, 0.4)",
                              "background": "rgba(255, 251, 254, 1)",
                              "elevation": Object {
                                "level0": "transparent",
                                "level1": "rgb(247, 243, 249)",
                                "level2": "rgb(243, 237, 246)",
                                "level3": "rgb(238, 232, 244)",
                                "level4": "rgb(236, 230, 243)",
                                "level5": "rgb(233, 227, 241)",
                              },
                              "error": "rgba(179, 38, 30, 1)",
                              "errorContainer": "rgba(249, 222, 220, 1)",
                              "inverseOnSurface": "rgba(244, 239, 244, 1)",
                              "inversePrimary": "rgba(208, 188, 255, 1)",
                              "inverseSurface": "rgba(49, 48, 51, 1)",
                              "onBackground": "rgba(28, 27, 31, 1)",
                              "onError": "rgba(255, 255, 255, 1)",
                              "onErrorContainer": "rgba(65, 14, 11, 1)",
                              "onPrimary": "rgba(255, 255, 255, 1)",
                              "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                              "onSecondary": "rgba(255, 255, 255, 1)",
                              "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                              "onSurface": "rgba(28, 27, 31, 1)",
                              "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                              "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                              "onTertiary": "rgba(255, 255, 255, 1)",
                              "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                              "outline": "rgba(121, 116, 126, 1)",
                              "outlineVariant": "rgba(202, 196, 208, 1)",
                              "primary": "rgba(103, 80, 164, 1)",
                              "primaryContainer": "rgba(234, 221, 255, 1)",
                              "scrim": "rgba(0, 0, 0, 1)",
                              "secondary": "#1B5E20",
                              "secondaryContainer": "rgba(232, 222, 248, 1)",
                              "shadow": "rgba(0, 0, 0, 1)",
                              "surface": "rgba(255, 251, 254, 1)",
                              "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                              "surfaceVariant": "rgba(231, 224, 236, 1)",
                              "tertiary": "rgba(125, 82, 96, 1)",
                              "tertiaryContainer": "rgba(255, 216, 228, 1)",
                            },
                            "dark": false,
                            "fonts": Object {
                              "bodyLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 16,
                                "fontWeight": "400",
                                "letterSpacing": 0.15,
                                "lineHeight": 24,
                              },
                              "bodyMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "letterSpacing": 0.25,
                                "lineHeight": 20,
                              },
                              "bodySmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 12,
                                "fontWeight": "400",
                                "letterSpacing": 0.4,
                                "lineHeight": 16,
                              },
                              "default": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                              },
                              "displayLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 57,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 64,
                              },
                              "displayMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 45,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 52,
                              },
                              "displaySmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 36,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 44,
                              },
                              "headlineLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 32,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 40,
                              },
                              "headlineMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 28,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 36,
                              },
                              "headlineSmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 24,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 32,
                              },
                              "labelLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0.1,
                                "lineHeight": 20,
                              },
                              "labelMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 12,
                                "fontWeight": "500",
                                "letterSpacing": 0.5,
                                "lineHeight": 16,
                              },
                              "labelSmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 11,
                                "fontWeight": "500",
                                "letterSpacing": 0.5,
                                "lineHeight": 16,
                              },
                              "titleLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 22,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 28,
                              },
                              "titleMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 16,
                                "fontWeight": "500",
                                "letterSpacing": 0.15,
                                "lineHeight": 24,
                              },
                              "titleSmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0.1,
                                "lineHeight": 20,
                              },
                            },
                            "isV3": true,
                            "roundness": 2,
                            "version": 3,
                          }
                        }
                      >
                        <View
                          accessibilityState={
                            Object {
                              "disabled": true,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              false,
                              false,
                              Array [
                                Object {
                                  "paddingRight": 24,
                                  "paddingVertical": 8,
                                },
                                undefined,
                              ],
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flexDirection": "row",
                                "marginVertical": 6,
                              }
                            }
                          >
                            <View
                              pointerEvents="box-none"
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {
                                    "alignSelf": "center",
                                    "marginLeft": 16,
                                    "marginRight": 0,
                                  },
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "rgba(73, 69, 79, 1)",
                                      "fontSize": 24,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "Entypo",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "paddingLeft": 16,
                                  },
                                  Object {
                                    "flex": 1,
                                    "justifyContent": "center",
                                  },
                                ]
                              }
                            >
                              <Text
                                numberOfLines={1}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    Object {
                                      "color": "rgba(28, 27, 31, 1)",
                                      "fontFamily": "Rubik-Regular",
                                      "fontWeight": "400",
                                      "letterSpacing": 0,
                                    },
                                    Object {
                                      "writingDirection": "ltr",
                                    },
                                    Array [
                                      Object {
                                        "fontSize": 16,
                                      },
                                      Object {
                                        "color": "rgba(28, 27, 31, 1)",
                                      },
                                      undefined,
                                    ],
                                  ]
                                }
                              >
                                10.000
                              </Text>
                              <Text
                                numberOfLines={2}
                                onTextLayout={[Function]}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    Object {
                                      "color": "rgba(28, 27, 31, 1)",
                                      "fontFamily": "Rubik-Regular",
                                      "fontWeight": "400",
                                      "letterSpacing": 0,
                                    },
                                    Object {
                                      "writingDirection": "ltr",
                                    },
                                    Array [
                                      Object {
                                        "fontSize": 14,
                                      },
                                      Object {
                                        "color": "rgba(73, 69, 79, 1)",
                                      },
                                      undefined,
                                    ],
                                  ]
                                }
                              >
                                9/20/2022, 8:37:46 PM
                              </Text>
                            </View>
                          </View>
                        </View>
                        <View
                          accessibilityState={
                            Object {
                              "disabled": true,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              false,
                              false,
                              Array [
                                Object {
                                  "paddingRight": 24,
                                  "paddingVertical": 8,
                                },
                                undefined,
                              ],
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flexDirection": "row",
                                "marginVertical": 6,
                              }
                            }
                          >
                            <View
                              pointerEvents="box-none"
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {
                                    "alignSelf": "center",
                                    "marginLeft": 16,
                                    "marginRight": 0,
                                    "marginVertical": 0,
                                  },
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "rgba(73, 69, 79, 1)",
                                      "fontSize": 24,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "Material Icons",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "paddingLeft": 16,
                                  },
                                  Object {
                                    "flex": 1,
                                    "justifyContent": "center",
                                  },
                                ]
                              }
                            >
                              <Text
                                numberOfLines={0}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    Object {
                                      "color": "rgba(28, 27, 31, 1)",
                                      "fontFamily": "Rubik-Regular",
                                      "fontWeight": "400",
                                      "letterSpacing": 0,
                                    },
                                    Object {
                                      "writingDirection": "ltr",
                                    },
                                    Array [
                                      Object {
                                        "fontSize": 16,
                                      },
                                      Object {
                                        "color": "rgba(28, 27, 31, 1)",
                                      },
                                      undefined,
                                    ],
                                  ]
                                }
                              >
                                What a neat solve!
                              </Text>
                            </View>
                          </View>
                        </View>
                        <View>
                          <View
                            style={
                              Object {
                                "backgroundColor": "rgba(255, 251, 254, 1)",
                              }
                            }
                          >
                            <View
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                  "expanded": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  false,
                                  Array [
                                    Object {
                                      "padding": 8,
                                    },
                                    Object {
                                      "marginLeft": 10,
                                    },
                                  ],
                                ]
                              }
                            >
                              <View
                                pointerEvents="none"
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  }
                                }
                              >
                                <View
                                  pointerEvents="box-none"
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "justifyContent": "center",
                                      },
                                      undefined,
                                    ]
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    selectable={false}
                                    style={
                                      Array [
                                        Object {
                                          "color": "rgba(73, 69, 79, 1)",
                                          "fontSize": 24,
                                        },
                                        undefined,
                                        Object {
                                          "fontFamily": "WCAEvent",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        Object {},
                                      ]
                                    }
                                  >
                                    
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "margin": 8,
                                      },
                                      Object {
                                        "flex": 1,
                                        "justifyContent": "center",
                                      },
                                    ]
                                  }
                                >
                                  <Text
                                    numberOfLines={0}
                                    selectable={false}
                                    style={
                                      Array [
                                        Object {
                                          "textAlign": "left",
                                        },
                                        Object {
                                          "color": "rgba(28, 27, 31, 1)",
                                          "fontFamily": "Rubik-Regular",
                                          "fontWeight": "400",
                                          "letterSpacing": 0,
                                        },
                                        Object {
                                          "writingDirection": "ltr",
                                        },
                                        Array [
                                          Object {
                                            "fontSize": 16,
                                          },
                                          Object {
                                            "color": "rgba(28, 27, 31, 1)",
                                          },
                                          undefined,
                                        ],
                                      ]
                                    }
                                  >
                                    R U
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "margin": 8,
                                      },
                                      undefined,
                                    ]
                                  }
                                >
                                  <Text
                                    accessibilityElementsHidden={true}
                                    allowFontScaling={false}
                                    importantForAccessibility="no-hide-descendants"
                                    pointerEvents="none"
                                    selectable={false}
                                    style={
                                      Array [
                                        Object {
                                          "color": "rgba(73, 69, 79, 1)",
                                          "fontSize": 24,
                                        },
                                        Array [
                                          Object {
                                            "lineHeight": 24,
                                            "transform": Array [
                                              Object {
                                                "scaleX": 1,
                                              },
                                            ],
                                          },
                                          Object {
                                            "backgroundColor": "transparent",
                                          },
                                        ],
                                        Object {
                                          "fontFamily": "Material Design Icons",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        Object {},
                                      ]
                                    }
                                  >
                                    󰅀
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "borderBottomLeftRadius": 10,
                      "borderBottomRightRadius": 10,
                      "height": 15,
                      "marginTop": -15,
                      "opacity": 0.25,
                    },
                    Object {
                      "backgroundColor": "rgba(255, 251, 254, 1)",
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AttemptDetailsModal with DNF 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "alignSelf": undefined,
          "bottom": undefined,
          "end": undefined,
          "left": undefined,
          "position": undefined,
          "right": undefined,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
          "start": undefined,
          "top": undefined,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 10,
              "borderStyle": "solid",
              "borderWidth": 0,
              "minWidth": 64,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                false,
                Object {
                  "borderRadius": 10,
                },
              ]
            }
            testID="button"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "rgba(28, 27, 31, 1)",
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 14,
                      "fontWeight": "500",
                      "letterSpacing": 0.1,
                      "lineHeight": 20,
                    },
                    Object {
                      "textAlign": "left",
                    },
                    Object {
                      "writingDirection": "ltr",
                    },
                    Array [
                      Object {
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      false,
                      Object {
                        "marginHorizontal": 12,
                      },
                      undefined,
                      false,
                      Object {
                        "color": "rgba(103, 80, 164, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Show Modal
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityLiveRegion="polite"
      accessibilityViewIsModal={true}
      collapsable={false}
      onAccessibilityEscape={[Function]}
      pointerEvents="auto"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="modal"
    >
      <View
        accessibilityLabel="Close modal"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        importantForAccessibility="no"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(50, 47, 55, 0.4)",
            "flex": 1,
            "opacity": 1,
          }
        }
        testID="modal-backdrop"
      />
      <View
        pointerEvents="box-none"
        style={
          Array [
            Object {
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "marginBottom": 0,
              "marginTop": 0,
            },
            undefined,
          ]
        }
        testID="modal-wrapper"
      >
        <View
          collapsable={false}
          style={
            Object {
              "alignSelf": undefined,
              "bottom": undefined,
              "end": undefined,
              "left": undefined,
              "position": undefined,
              "right": undefined,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.15,
              "shadowRadius": 3,
              "start": undefined,
              "top": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 1,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                  "borderRadius": 10,
                  "justifyContent": "center",
                  "margin": 20,
                  "maxHeight": 800.4,
                  "opacity": 1,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "alignSelf": undefined,
                    "bottom": undefined,
                    "end": undefined,
                    "left": undefined,
                    "position": undefined,
                    "right": undefined,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.15,
                    "shadowRadius": 6,
                    "start": undefined,
                    "top": undefined,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 2,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "rgb(243, 237, 246)",
                        "borderTopLeftRadius": 10,
                        "borderTopRightRadius": 10,
                        "maxHeight": 120.05999999999999,
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "rgba(28, 27, 31, 1)",
                            "fontFamily": "Rubik-Regular",
                            "fontSize": 16,
                            "fontWeight": "500",
                            "letterSpacing": 0.15,
                            "lineHeight": 24,
                          },
                          Object {
                            "textAlign": "left",
                          },
                          Object {
                            "writingDirection": "ltr",
                          },
                          Object {
                            "padding": 10,
                          },
                        ]
                      }
                    >
                      dialogs.attempt_details
                    </Text>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "stretch",
                    "maxHeight": 680.3399999999999,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "paddingBottom": 0,
                    }
                  }
                >
                  <RCTScrollView
                    style={Object {}}
                  >
                    <View>
                      <View
                        style={
                          Array [
                            Object {
                              "marginVertical": 8,
                            },
                            undefined,
                          ]
                        }
                        theme={
                          Object {
                            "animation": Object {
                              "scale": 1,
                            },
                            "colors": Object {
                              "backdrop": "rgba(50, 47, 55, 0.4)",
                              "background": "rgba(255, 251, 254, 1)",
                              "elevation": Object {
                                "level0": "transparent",
                                "level1": "rgb(247, 243, 249)",
                                "level2": "rgb(243, 237, 246)",
                                "level3": "rgb(238, 232, 244)",
                                "level4": "rgb(236, 230, 243)",
                                "level5": "rgb(233, 227, 241)",
                              },
                              "error": "rgba(179, 38, 30, 1)",
                              "errorContainer": "rgba(249, 222, 220, 1)",
                              "inverseOnSurface": "rgba(244, 239, 244, 1)",
                              "inversePrimary": "rgba(208, 188, 255, 1)",
                              "inverseSurface": "rgba(49, 48, 51, 1)",
                              "onBackground": "rgba(28, 27, 31, 1)",
                              "onError": "rgba(255, 255, 255, 1)",
                              "onErrorContainer": "rgba(65, 14, 11, 1)",
                              "onPrimary": "rgba(255, 255, 255, 1)",
                              "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                              "onSecondary": "rgba(255, 255, 255, 1)",
                              "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                              "onSurface": "rgba(28, 27, 31, 1)",
                              "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                              "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                              "onTertiary": "rgba(255, 255, 255, 1)",
                              "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                              "outline": "rgba(121, 116, 126, 1)",
                              "outlineVariant": "rgba(202, 196, 208, 1)",
                              "primary": "rgba(103, 80, 164, 1)",
                              "primaryContainer": "rgba(234, 221, 255, 1)",
                              "scrim": "rgba(0, 0, 0, 1)",
                              "secondary": "#1B5E20",
                              "secondaryContainer": "rgba(232, 222, 248, 1)",
                              "shadow": "rgba(0, 0, 0, 1)",
                              "surface": "rgba(255, 251, 254, 1)",
                              "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                              "surfaceVariant": "rgba(231, 224, 236, 1)",
                              "tertiary": "rgba(125, 82, 96, 1)",
                              "tertiaryContainer": "rgba(255, 216, 228, 1)",
                            },
                            "dark": false,
                            "fonts": Object {
                              "bodyLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 16,
                                "fontWeight": "400",
                                "letterSpacing": 0.15,
                                "lineHeight": 24,
                              },
                              "bodyMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "letterSpacing": 0.25,
                                "lineHeight": 20,
                              },
                              "bodySmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 12,
                                "fontWeight": "400",
                                "letterSpacing": 0.4,
                                "lineHeight": 16,
                              },
                              "default": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                              },
                              "displayLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 57,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 64,
                              },
                              "displayMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 45,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 52,
                              },
                              "displaySmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 36,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 44,
                              },
                              "headlineLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 32,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 40,
                              },
                              "headlineMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 28,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 36,
                              },
                              "headlineSmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 24,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 32,
                              },
                              "labelLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0.1,
                                "lineHeight": 20,
                              },
                              "labelMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 12,
                                "fontWeight": "500",
                                "letterSpacing": 0.5,
                                "lineHeight": 16,
                              },
                              "labelSmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 11,
                                "fontWeight": "500",
                                "letterSpacing": 0.5,
                                "lineHeight": 16,
                              },
                              "titleLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 22,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 28,
                              },
                              "titleMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 16,
                                "fontWeight": "500",
                                "letterSpacing": 0.15,
                                "lineHeight": 24,
                              },
                              "titleSmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0.1,
                                "lineHeight": 20,
                              },
                            },
                            "isV3": true,
                            "roundness": 2,
                            "version": 3,
                          }
                        }
                      >
                        <View
                          accessibilityState={
                            Object {
                              "disabled": true,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              false,
                              false,
                              Array [
                                Object {
                                  "paddingRight": 24,
                                  "paddingVertical": 8,
                                },
                                undefined,
                              ],
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flexDirection": "row",
                                "marginVertical": 6,
                              }
                            }
                          >
                            <View
                              pointerEvents="box-none"
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {
                                    "alignSelf": "center",
                                    "marginLeft": 16,
                                    "marginRight": 0,
                                  },
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "rgba(73, 69, 79, 1)",
                                      "fontSize": 24,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "Entypo",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "paddingLeft": 16,
                                  },
                                  Object {
                                    "flex": 1,
                                    "justifyContent": "center",
                                  },
                                ]
                              }
                            >
                              <Text
                                numberOfLines={1}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    Object {
                                      "color": "rgba(28, 27, 31, 1)",
                                      "fontFamily": "Rubik-Regular",
                                      "fontWeight": "400",
                                      "letterSpacing": 0,
                                    },
                                    Object {
                                      "writingDirection": "ltr",
                                    },
                                    Array [
                                      Object {
                                        "fontSize": 16,
                                      },
                                      Object {
                                        "color": "rgba(28, 27, 31, 1)",
                                      },
                                      undefined,
                                    ],
                                  ]
                                }
                              >
                                DNF
                              </Text>
                              <Text
                                numberOfLines={2}
                                onTextLayout={[Function]}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    Object {
                                      "color": "rgba(28, 27, 31, 1)",
                                      "fontFamily": "Rubik-Regular",
                                      "fontWeight": "400",
                                      "letterSpacing": 0,
                                    },
                                    Object {
                                      "writingDirection": "ltr",
                                    },
                                    Array [
                                      Object {
                                        "fontSize": 14,
                                      },
                                      Object {
                                        "color": "rgba(73, 69, 79, 1)",
                                      },
                                      undefined,
                                    ],
                                  ]
                                }
                              >
                                9/20/2022, 8:37:46 PM
                              </Text>
                            </View>
                          </View>
                        </View>
                        <View>
                          <View
                            style={
                              Object {
                                "backgroundColor": "rgba(255, 251, 254, 1)",
                              }
                            }
                          >
                            <View
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                  "expanded": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  false,
                                  Array [
                                    Object {
                                      "padding": 8,
                                    },
                                    Object {
                                      "marginLeft": 10,
                                    },
                                  ],
                                ]
                              }
                            >
                              <View
                                pointerEvents="none"
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  }
                                }
                              >
                                <View
                                  pointerEvents="box-none"
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "justifyContent": "center",
                                      },
                                      undefined,
                                    ]
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    selectable={false}
                                    style={
                                      Array [
                                        Object {
                                          "color": "rgba(73, 69, 79, 1)",
                                          "fontSize": 24,
                                        },
                                        undefined,
                                        Object {
                                          "fontFamily": "WCAEvent",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        Object {},
                                      ]
                                    }
                                  >
                                    
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "margin": 8,
                                      },
                                      Object {
                                        "flex": 1,
                                        "justifyContent": "center",
                                      },
                                    ]
                                  }
                                >
                                  <Text
                                    numberOfLines={0}
                                    selectable={false}
                                    style={
                                      Array [
                                        Object {
                                          "textAlign": "left",
                                        },
                                        Object {
                                          "color": "rgba(28, 27, 31, 1)",
                                          "fontFamily": "Rubik-Regular",
                                          "fontWeight": "400",
                                          "letterSpacing": 0,
                                        },
                                        Object {
                                          "writingDirection": "ltr",
                                        },
                                        Array [
                                          Object {
                                            "fontSize": 16,
                                          },
                                          Object {
                                            "color": "rgba(28, 27, 31, 1)",
                                          },
                                          undefined,
                                        ],
                                      ]
                                    }
                                  >
                                    R U R' U'
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "margin": 8,
                                      },
                                      undefined,
                                    ]
                                  }
                                >
                                  <Text
                                    accessibilityElementsHidden={true}
                                    allowFontScaling={false}
                                    importantForAccessibility="no-hide-descendants"
                                    pointerEvents="none"
                                    selectable={false}
                                    style={
                                      Array [
                                        Object {
                                          "color": "rgba(73, 69, 79, 1)",
                                          "fontSize": 24,
                                        },
                                        Array [
                                          Object {
                                            "lineHeight": 24,
                                            "transform": Array [
                                              Object {
                                                "scaleX": 1,
                                              },
                                            ],
                                          },
                                          Object {
                                            "backgroundColor": "transparent",
                                          },
                                        ],
                                        Object {
                                          "fontFamily": "Material Design Icons",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        Object {},
                                      ]
                                    }
                                  >
                                    󰅀
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "borderBottomLeftRadius": 10,
                      "borderBottomRightRadius": 10,
                      "height": 15,
                      "marginTop": -15,
                      "opacity": 0.25,
                    },
                    Object {
                      "backgroundColor": "rgba(255, 251, 254, 1)",
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AttemptDetailsModal with DNS 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "alignSelf": undefined,
          "bottom": undefined,
          "end": undefined,
          "left": undefined,
          "position": undefined,
          "right": undefined,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
          "start": undefined,
          "top": undefined,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 10,
              "borderStyle": "solid",
              "borderWidth": 0,
              "minWidth": 64,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                false,
                Object {
                  "borderRadius": 10,
                },
              ]
            }
            testID="button"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "rgba(28, 27, 31, 1)",
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 14,
                      "fontWeight": "500",
                      "letterSpacing": 0.1,
                      "lineHeight": 20,
                    },
                    Object {
                      "textAlign": "left",
                    },
                    Object {
                      "writingDirection": "ltr",
                    },
                    Array [
                      Object {
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      false,
                      Object {
                        "marginHorizontal": 12,
                      },
                      undefined,
                      false,
                      Object {
                        "color": "rgba(103, 80, 164, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Show Modal
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityLiveRegion="polite"
      accessibilityViewIsModal={true}
      collapsable={false}
      onAccessibilityEscape={[Function]}
      pointerEvents="auto"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="modal"
    >
      <View
        accessibilityLabel="Close modal"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        importantForAccessibility="no"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(50, 47, 55, 0.4)",
            "flex": 1,
            "opacity": 1,
          }
        }
        testID="modal-backdrop"
      />
      <View
        pointerEvents="box-none"
        style={
          Array [
            Object {
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "marginBottom": 0,
              "marginTop": 0,
            },
            undefined,
          ]
        }
        testID="modal-wrapper"
      >
        <View
          collapsable={false}
          style={
            Object {
              "alignSelf": undefined,
              "bottom": undefined,
              "end": undefined,
              "left": undefined,
              "position": undefined,
              "right": undefined,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.15,
              "shadowRadius": 3,
              "start": undefined,
              "top": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 1,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                  "borderRadius": 10,
                  "justifyContent": "center",
                  "margin": 20,
                  "maxHeight": 800.4,
                  "opacity": 1,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "alignSelf": undefined,
                    "bottom": undefined,
                    "end": undefined,
                    "left": undefined,
                    "position": undefined,
                    "right": undefined,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.15,
                    "shadowRadius": 6,
                    "start": undefined,
                    "top": undefined,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 2,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "rgb(243, 237, 246)",
                        "borderTopLeftRadius": 10,
                        "borderTopRightRadius": 10,
                        "maxHeight": 120.05999999999999,
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "rgba(28, 27, 31, 1)",
                            "fontFamily": "Rubik-Regular",
                            "fontSize": 16,
                            "fontWeight": "500",
                            "letterSpacing": 0.15,
                            "lineHeight": 24,
                          },
                          Object {
                            "textAlign": "left",
                          },
                          Object {
                            "writingDirection": "ltr",
                          },
                          Object {
                            "padding": 10,
                          },
                        ]
                      }
                    >
                      dialogs.attempt_details
                    </Text>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "stretch",
                    "maxHeight": 680.3399999999999,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "paddingBottom": 0,
                    }
                  }
                >
                  <RCTScrollView
                    style={Object {}}
                  >
                    <View>
                      <View
                        style={
                          Array [
                            Object {
                              "marginVertical": 8,
                            },
                            undefined,
                          ]
                        }
                        theme={
                          Object {
                            "animation": Object {
                              "scale": 1,
                            },
                            "colors": Object {
                              "backdrop": "rgba(50, 47, 55, 0.4)",
                              "background": "rgba(255, 251, 254, 1)",
                              "elevation": Object {
                                "level0": "transparent",
                                "level1": "rgb(247, 243, 249)",
                                "level2": "rgb(243, 237, 246)",
                                "level3": "rgb(238, 232, 244)",
                                "level4": "rgb(236, 230, 243)",
                                "level5": "rgb(233, 227, 241)",
                              },
                              "error": "rgba(179, 38, 30, 1)",
                              "errorContainer": "rgba(249, 222, 220, 1)",
                              "inverseOnSurface": "rgba(244, 239, 244, 1)",
                              "inversePrimary": "rgba(208, 188, 255, 1)",
                              "inverseSurface": "rgba(49, 48, 51, 1)",
                              "onBackground": "rgba(28, 27, 31, 1)",
                              "onError": "rgba(255, 255, 255, 1)",
                              "onErrorContainer": "rgba(65, 14, 11, 1)",
                              "onPrimary": "rgba(255, 255, 255, 1)",
                              "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                              "onSecondary": "rgba(255, 255, 255, 1)",
                              "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                              "onSurface": "rgba(28, 27, 31, 1)",
                              "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                              "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                              "onTertiary": "rgba(255, 255, 255, 1)",
                              "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                              "outline": "rgba(121, 116, 126, 1)",
                              "outlineVariant": "rgba(202, 196, 208, 1)",
                              "primary": "rgba(103, 80, 164, 1)",
                              "primaryContainer": "rgba(234, 221, 255, 1)",
                              "scrim": "rgba(0, 0, 0, 1)",
                              "secondary": "#1B5E20",
                              "secondaryContainer": "rgba(232, 222, 248, 1)",
                              "shadow": "rgba(0, 0, 0, 1)",
                              "surface": "rgba(255, 251, 254, 1)",
                              "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                              "surfaceVariant": "rgba(231, 224, 236, 1)",
                              "tertiary": "rgba(125, 82, 96, 1)",
                              "tertiaryContainer": "rgba(255, 216, 228, 1)",
                            },
                            "dark": false,
                            "fonts": Object {
                              "bodyLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 16,
                                "fontWeight": "400",
                                "letterSpacing": 0.15,
                                "lineHeight": 24,
                              },
                              "bodyMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "letterSpacing": 0.25,
                                "lineHeight": 20,
                              },
                              "bodySmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 12,
                                "fontWeight": "400",
                                "letterSpacing": 0.4,
                                "lineHeight": 16,
                              },
                              "default": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                              },
                              "displayLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 57,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 64,
                              },
                              "displayMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 45,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 52,
                              },
                              "displaySmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 36,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 44,
                              },
                              "headlineLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 32,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 40,
                              },
                              "headlineMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 28,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 36,
                              },
                              "headlineSmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 24,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 32,
                              },
                              "labelLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0.1,
                                "lineHeight": 20,
                              },
                              "labelMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 12,
                                "fontWeight": "500",
                                "letterSpacing": 0.5,
                                "lineHeight": 16,
                              },
                              "labelSmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 11,
                                "fontWeight": "500",
                                "letterSpacing": 0.5,
                                "lineHeight": 16,
                              },
                              "titleLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 22,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 28,
                              },
                              "titleMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 16,
                                "fontWeight": "500",
                                "letterSpacing": 0.15,
                                "lineHeight": 24,
                              },
                              "titleSmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0.1,
                                "lineHeight": 20,
                              },
                            },
                            "isV3": true,
                            "roundness": 2,
                            "version": 3,
                          }
                        }
                      >
                        <View
                          accessibilityState={
                            Object {
                              "disabled": true,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              false,
                              false,
                              Array [
                                Object {
                                  "paddingRight": 24,
                                  "paddingVertical": 8,
                                },
                                undefined,
                              ],
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flexDirection": "row",
                                "marginVertical": 6,
                              }
                            }
                          >
                            <View
                              pointerEvents="box-none"
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {
                                    "alignSelf": "center",
                                    "marginLeft": 16,
                                    "marginRight": 0,
                                  },
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "rgba(73, 69, 79, 1)",
                                      "fontSize": 24,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "Entypo",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "paddingLeft": 16,
                                  },
                                  Object {
                                    "flex": 1,
                                    "justifyContent": "center",
                                  },
                                ]
                              }
                            >
                              <Text
                                numberOfLines={1}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    Object {
                                      "color": "rgba(28, 27, 31, 1)",
                                      "fontFamily": "Rubik-Regular",
                                      "fontWeight": "400",
                                      "letterSpacing": 0,
                                    },
                                    Object {
                                      "writingDirection": "ltr",
                                    },
                                    Array [
                                      Object {
                                        "fontSize": 16,
                                      },
                                      Object {
                                        "color": "rgba(28, 27, 31, 1)",
                                      },
                                      undefined,
                                    ],
                                  ]
                                }
                              >
                                DNS
                              </Text>
                              <Text
                                numberOfLines={2}
                                onTextLayout={[Function]}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    Object {
                                      "color": "rgba(28, 27, 31, 1)",
                                      "fontFamily": "Rubik-Regular",
                                      "fontWeight": "400",
                                      "letterSpacing": 0,
                                    },
                                    Object {
                                      "writingDirection": "ltr",
                                    },
                                    Array [
                                      Object {
                                        "fontSize": 14,
                                      },
                                      Object {
                                        "color": "rgba(73, 69, 79, 1)",
                                      },
                                      undefined,
                                    ],
                                  ]
                                }
                              >
                                9/20/2022, 8:37:46 PM
                              </Text>
                            </View>
                          </View>
                        </View>
                        <View>
                          <View
                            style={
                              Object {
                                "backgroundColor": "rgba(255, 251, 254, 1)",
                              }
                            }
                          >
                            <View
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                  "expanded": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  false,
                                  Array [
                                    Object {
                                      "padding": 8,
                                    },
                                    Object {
                                      "marginLeft": 10,
                                    },
                                  ],
                                ]
                              }
                            >
                              <View
                                pointerEvents="none"
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  }
                                }
                              >
                                <View
                                  pointerEvents="box-none"
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "justifyContent": "center",
                                      },
                                      undefined,
                                    ]
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    selectable={false}
                                    style={
                                      Array [
                                        Object {
                                          "color": "rgba(73, 69, 79, 1)",
                                          "fontSize": 24,
                                        },
                                        undefined,
                                        Object {
                                          "fontFamily": "WCAEvent",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        Object {},
                                      ]
                                    }
                                  >
                                    
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "margin": 8,
                                      },
                                      Object {
                                        "flex": 1,
                                        "justifyContent": "center",
                                      },
                                    ]
                                  }
                                >
                                  <Text
                                    numberOfLines={0}
                                    selectable={false}
                                    style={
                                      Array [
                                        Object {
                                          "textAlign": "left",
                                        },
                                        Object {
                                          "color": "rgba(28, 27, 31, 1)",
                                          "fontFamily": "Rubik-Regular",
                                          "fontWeight": "400",
                                          "letterSpacing": 0,
                                        },
                                        Object {
                                          "writingDirection": "ltr",
                                        },
                                        Array [
                                          Object {
                                            "fontSize": 16,
                                          },
                                          Object {
                                            "color": "rgba(28, 27, 31, 1)",
                                          },
                                          undefined,
                                        ],
                                      ]
                                    }
                                  >
                                    R U R' U'
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "margin": 8,
                                      },
                                      undefined,
                                    ]
                                  }
                                >
                                  <Text
                                    accessibilityElementsHidden={true}
                                    allowFontScaling={false}
                                    importantForAccessibility="no-hide-descendants"
                                    pointerEvents="none"
                                    selectable={false}
                                    style={
                                      Array [
                                        Object {
                                          "color": "rgba(73, 69, 79, 1)",
                                          "fontSize": 24,
                                        },
                                        Array [
                                          Object {
                                            "lineHeight": 24,
                                            "transform": Array [
                                              Object {
                                                "scaleX": 1,
                                              },
                                            ],
                                          },
                                          Object {
                                            "backgroundColor": "transparent",
                                          },
                                        ],
                                        Object {
                                          "fontFamily": "Material Design Icons",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        Object {},
                                      ]
                                    }
                                  >
                                    󰅀
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "borderBottomLeftRadius": 10,
                      "borderBottomRightRadius": 10,
                      "height": 15,
                      "marginTop": -15,
                      "opacity": 0.25,
                    },
                    Object {
                      "backgroundColor": "rgba(255, 251, 254, 1)",
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AttemptDetailsModal with Infractions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "alignSelf": undefined,
          "bottom": undefined,
          "end": undefined,
          "left": undefined,
          "position": undefined,
          "right": undefined,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
          "start": undefined,
          "top": undefined,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 10,
              "borderStyle": "solid",
              "borderWidth": 0,
              "minWidth": 64,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                false,
                Object {
                  "borderRadius": 10,
                },
              ]
            }
            testID="button"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "rgba(28, 27, 31, 1)",
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 14,
                      "fontWeight": "500",
                      "letterSpacing": 0.1,
                      "lineHeight": 20,
                    },
                    Object {
                      "textAlign": "left",
                    },
                    Object {
                      "writingDirection": "ltr",
                    },
                    Array [
                      Object {
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      false,
                      Object {
                        "marginHorizontal": 12,
                      },
                      undefined,
                      false,
                      Object {
                        "color": "rgba(103, 80, 164, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Show Modal
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityLiveRegion="polite"
      accessibilityViewIsModal={true}
      collapsable={false}
      onAccessibilityEscape={[Function]}
      pointerEvents="auto"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="modal"
    >
      <View
        accessibilityLabel="Close modal"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        importantForAccessibility="no"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(50, 47, 55, 0.4)",
            "flex": 1,
            "opacity": 1,
          }
        }
        testID="modal-backdrop"
      />
      <View
        pointerEvents="box-none"
        style={
          Array [
            Object {
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "marginBottom": 0,
              "marginTop": 0,
            },
            undefined,
          ]
        }
        testID="modal-wrapper"
      >
        <View
          collapsable={false}
          style={
            Object {
              "alignSelf": undefined,
              "bottom": undefined,
              "end": undefined,
              "left": undefined,
              "position": undefined,
              "right": undefined,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.15,
              "shadowRadius": 3,
              "start": undefined,
              "top": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 1,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                  "borderRadius": 10,
                  "justifyContent": "center",
                  "margin": 20,
                  "maxHeight": 800.4,
                  "opacity": 1,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "alignSelf": undefined,
                    "bottom": undefined,
                    "end": undefined,
                    "left": undefined,
                    "position": undefined,
                    "right": undefined,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.15,
                    "shadowRadius": 6,
                    "start": undefined,
                    "top": undefined,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 2,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "rgb(243, 237, 246)",
                        "borderTopLeftRadius": 10,
                        "borderTopRightRadius": 10,
                        "maxHeight": 120.05999999999999,
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "rgba(28, 27, 31, 1)",
                            "fontFamily": "Rubik-Regular",
                            "fontSize": 16,
                            "fontWeight": "500",
                            "letterSpacing": 0.15,
                            "lineHeight": 24,
                          },
                          Object {
                            "textAlign": "left",
                          },
                          Object {
                            "writingDirection": "ltr",
                          },
                          Object {
                            "padding": 10,
                          },
                        ]
                      }
                    >
                      dialogs.attempt_details
                    </Text>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "stretch",
                    "maxHeight": 680.3399999999999,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "paddingBottom": 0,
                    }
                  }
                >
                  <RCTScrollView
                    style={Object {}}
                  >
                    <View>
                      <View
                        style={
                          Array [
                            Object {
                              "marginVertical": 8,
                            },
                            undefined,
                          ]
                        }
                        theme={
                          Object {
                            "animation": Object {
                              "scale": 1,
                            },
                            "colors": Object {
                              "backdrop": "rgba(50, 47, 55, 0.4)",
                              "background": "rgba(255, 251, 254, 1)",
                              "elevation": Object {
                                "level0": "transparent",
                                "level1": "rgb(247, 243, 249)",
                                "level2": "rgb(243, 237, 246)",
                                "level3": "rgb(238, 232, 244)",
                                "level4": "rgb(236, 230, 243)",
                                "level5": "rgb(233, 227, 241)",
                              },
                              "error": "rgba(179, 38, 30, 1)",
                              "errorContainer": "rgba(249, 222, 220, 1)",
                              "inverseOnSurface": "rgba(244, 239, 244, 1)",
                              "inversePrimary": "rgba(208, 188, 255, 1)",
                              "inverseSurface": "rgba(49, 48, 51, 1)",
                              "onBackground": "rgba(28, 27, 31, 1)",
                              "onError": "rgba(255, 255, 255, 1)",
                              "onErrorContainer": "rgba(65, 14, 11, 1)",
                              "onPrimary": "rgba(255, 255, 255, 1)",
                              "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                              "onSecondary": "rgba(255, 255, 255, 1)",
                              "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                              "onSurface": "rgba(28, 27, 31, 1)",
                              "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                              "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                              "onTertiary": "rgba(255, 255, 255, 1)",
                              "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                              "outline": "rgba(121, 116, 126, 1)",
                              "outlineVariant": "rgba(202, 196, 208, 1)",
                              "primary": "rgba(103, 80, 164, 1)",
                              "primaryContainer": "rgba(234, 221, 255, 1)",
                              "scrim": "rgba(0, 0, 0, 1)",
                              "secondary": "#1B5E20",
                              "secondaryContainer": "rgba(232, 222, 248, 1)",
                              "shadow": "rgba(0, 0, 0, 1)",
                              "surface": "rgba(255, 251, 254, 1)",
                              "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                              "surfaceVariant": "rgba(231, 224, 236, 1)",
                              "tertiary": "rgba(125, 82, 96, 1)",
                              "tertiaryContainer": "rgba(255, 216, 228, 1)",
                            },
                            "dark": false,
                            "fonts": Object {
                              "bodyLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 16,
                                "fontWeight": "400",
                                "letterSpacing": 0.15,
                                "lineHeight": 24,
                              },
                              "bodyMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 14,
                                "fontWeight": "400",
                                "letterSpacing": 0.25,
                                "lineHeight": 20,
                              },
                              "bodySmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 12,
                                "fontWeight": "400",
                                "letterSpacing": 0.4,
                                "lineHeight": 16,
                              },
                              "default": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                              },
                              "displayLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 57,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 64,
                              },
                              "displayMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 45,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 52,
                              },
                              "displaySmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 36,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 44,
                              },
                              "headlineLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 32,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 40,
                              },
                              "headlineMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 28,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 36,
                              },
                              "headlineSmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 24,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 32,
                              },
                              "labelLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0.1,
                                "lineHeight": 20,
                              },
                              "labelMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 12,
                                "fontWeight": "500",
                                "letterSpacing": 0.5,
                                "lineHeight": 16,
                              },
                              "labelSmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 11,
                                "fontWeight": "500",
                                "letterSpacing": 0.5,
                                "lineHeight": 16,
                              },
                              "titleLarge": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 22,
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 28,
                              },
                              "titleMedium": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 16,
                                "fontWeight": "500",
                                "letterSpacing": 0.15,
                                "lineHeight": 24,
                              },
                              "titleSmall": Object {
                                "fontFamily": "Rubik-Regular",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0.1,
                                "lineHeight": 20,
                              },
                            },
                            "isV3": true,
                            "roundness": 2,
                            "version": 3,
                          }
                        }
                      >
                        <View
                          accessibilityState={
                            Object {
                              "disabled": true,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Array [
                              false,
                              false,
                              Array [
                                Object {
                                  "paddingRight": 24,
                                  "paddingVertical": 8,
                                },
                                undefined,
                              ],
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "flexDirection": "row",
                                "marginVertical": 6,
                              }
                            }
                          >
                            <View
                              pointerEvents="box-none"
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {
                                    "alignSelf": "center",
                                    "marginLeft": 16,
                                    "marginRight": 0,
                                  },
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "rgba(73, 69, 79, 1)",
                                      "fontSize": 24,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "Entypo",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "paddingLeft": 16,
                                  },
                                  Object {
                                    "flex": 1,
                                    "justifyContent": "center",
                                  },
                                ]
                              }
                            >
                              <Text
                                numberOfLines={1}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    Object {
                                      "color": "rgba(28, 27, 31, 1)",
                                      "fontFamily": "Rubik-Regular",
                                      "fontWeight": "400",
                                      "letterSpacing": 0,
                                    },
                                    Object {
                                      "writingDirection": "ltr",
                                    },
                                    Array [
                                      Object {
                                        "fontSize": 16,
                                      },
                                      Object {
                                        "color": "rgba(28, 27, 31, 1)",
                                      },
                                      undefined,
                                    ],
                                  ]
                                }
                              >
                                12.000 (+2)
                              </Text>
                              <Text
                                numberOfLines={2}
                                onTextLayout={[Function]}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "textAlign": "left",
                                    },
                                    Object {
                                      "color": "rgba(28, 27, 31, 1)",
                                      "fontFamily": "Rubik-Regular",
                                      "fontWeight": "400",
                                      "letterSpacing": 0,
                                    },
                                    Object {
                                      "writingDirection": "ltr",
                                    },
                                    Array [
                                      Object {
                                        "fontSize": 14,
                                      },
                                      Object {
                                        "color": "rgba(73, 69, 79, 1)",
                                      },
                                      undefined,
                                    ],
                                  ]
                                }
                              >
                                9/20/2022, 8:37:46 PM
                              </Text>
                            </View>
                          </View>
                        </View>
                        <View>
                          <View
                            style={
                              Object {
                                "backgroundColor": "rgba(255, 251, 254, 1)",
                              }
                            }
                          >
                            <View
                              accessibilityRole="button"
                              accessibilityState={
                                Object {
                                  "disabled": false,
                                  "expanded": false,
                                }
                              }
                              accessible={true}
                              collapsable={false}
                              focusable={true}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  false,
                                  Array [
                                    Object {
                                      "padding": 8,
                                    },
                                    Object {
                                      "marginLeft": 10,
                                    },
                                  ],
                                ]
                              }
                            >
                              <View
                                pointerEvents="none"
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  }
                                }
                              >
                                <View
                                  pointerEvents="box-none"
                                  style={
                                    Array [
                                      Object {
                                        "alignItems": "center",
                                        "justifyContent": "center",
                                      },
                                      undefined,
                                    ]
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    selectable={false}
                                    style={
                                      Array [
                                        Object {
                                          "color": "rgba(73, 69, 79, 1)",
                                          "fontSize": 24,
                                        },
                                        undefined,
                                        Object {
                                          "fontFamily": "WCAEvent",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        Object {},
                                      ]
                                    }
                                  >
                                    
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "margin": 8,
                                      },
                                      Object {
                                        "flex": 1,
                                        "justifyContent": "center",
                                      },
                                    ]
                                  }
                                >
                                  <Text
                                    numberOfLines={0}
                                    selectable={false}
                                    style={
                                      Array [
                                        Object {
                                          "textAlign": "left",
                                        },
                                        Object {
                                          "color": "rgba(28, 27, 31, 1)",
                                          "fontFamily": "Rubik-Regular",
                                          "fontWeight": "400",
                                          "letterSpacing": 0,
                                        },
                                        Object {
                                          "writingDirection": "ltr",
                                        },
                                        Array [
                                          Object {
                                            "fontSize": 16,
                                          },
                                          Object {
                                            "color": "rgba(28, 27, 31, 1)",
                                          },
                                          undefined,
                                        ],
                                      ]
                                    }
                                  >
                                    R U R' U'
                                  </Text>
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "margin": 8,
                                      },
                                      undefined,
                                    ]
                                  }
                                >
                                  <Text
                                    accessibilityElementsHidden={true}
                                    allowFontScaling={false}
                                    importantForAccessibility="no-hide-descendants"
                                    pointerEvents="none"
                                    selectable={false}
                                    style={
                                      Array [
                                        Object {
                                          "color": "rgba(73, 69, 79, 1)",
                                          "fontSize": 24,
                                        },
                                        Array [
                                          Object {
                                            "lineHeight": 24,
                                            "transform": Array [
                                              Object {
                                                "scaleX": 1,
                                              },
                                            ],
                                          },
                                          Object {
                                            "backgroundColor": "transparent",
                                          },
                                        ],
                                        Object {
                                          "fontFamily": "Material Design Icons",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        Object {},
                                      ]
                                    }
                                  >
                                    󰅀
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "borderBottomLeftRadius": 10,
                      "borderBottomRightRadius": 10,
                      "height": 15,
                      "marginTop": -15,
                      "opacity": 0.25,
                    },
                    Object {
                      "backgroundColor": "rgba(255, 251, 254, 1)",
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AttemptPlayer 3x3x3 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            undefined,
          ]
        }
      >
        <RNCWebView
          cacheEnabled={true}
          injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
          injectedJavaScriptForMainFrameOnly={true}
          javaScriptEnabled={true}
          messagingEnabled={true}
          onContentProcessDidTerminate={[Function]}
          onHttpError={[Function]}
          onLoadingError={[Function]}
          onLoadingFinish={[Function]}
          onLoadingProgress={[Function]}
          onLoadingStart={[Function]}
          onMessage={[Function]}
          onShouldStartLoadWithRequest={[Function]}
          scrollEnabled={false}
          setBuiltInZoomControls={false}
          setDisplayZoomControls={false}
          showsHorizontalScrollIndicator={false}
          showsVerticalScrollIndicator={false}
          source={
            Object {
              "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"L2 U F2 L2 B2 L U' R2 F R B R U L' U B R2 B' D L\\",
            puzzle: \\"3x3x3\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
            }
          }
          style={
            Array [
              Object {
                "flex": 1,
                "overflow": "hidden",
              },
              Object {
                "backgroundColor": "#ffffff",
              },
              Object {
                "flex": 1,
              },
            ]
          }
          textInteractionEnabled={true}
          useSharedProcessPool={true}
        />
      </View>
      <RNCSlider
        disabled={false}
        inverted={false}
        lowerLimit={-9007199254740991}
        maximumValue={14865}
        minimumValue={0}
        onChange={[Function]}
        onRNCSliderAccessibilityAction={null}
        onRNCSliderSlidingComplete={null}
        onRNCSliderSlidingStart={null}
        onRNCSliderValueChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        step={0}
        style={
          Object {
            "height": 40,
          }
        }
        tapToSeek={false}
        upperLimit={9007199254740991}
        value={0}
      />
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            undefined,
          ]
        }
      >
        L2 U F2 L2 B2 L U' R2 F R B R U L' U B R2 B' D L
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots EventSelector default 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={Object {}}
    >
      <RCTScrollView
        data={
          Array [
            Object {
              "id": "222",
              "puzzle": Object {
                "id": "222",
              },
              "type": "WCA",
            },
            Object {
              "id": "333",
              "puzzle": Object {
                "id": "333",
              },
              "type": "WCA",
            },
            Object {
              "id": "333bf",
              "puzzle": Object {
                "id": "333",
              },
              "type": "WCA",
            },
            Object {
              "id": "333oh",
              "puzzle": Object {
                "id": "333",
              },
              "type": "WCA",
            },
            Object {
              "id": "333ft",
              "puzzle": Object {
                "id": "333",
              },
              "type": "WCA_OLD",
            },
            Object {
              "id": "444",
              "puzzle": Object {
                "id": "444",
              },
              "type": "WCA",
            },
            Object {
              "id": "444bf",
              "puzzle": Object {
                "id": "444",
              },
              "type": "WCA",
            },
            Object {
              "id": "555",
              "puzzle": Object {
                "id": "555",
              },
              "type": "WCA",
            },
            Object {
              "id": "555bf",
              "puzzle": Object {
                "id": "555",
              },
              "type": "WCA",
            },
            Object {
              "id": "666",
              "puzzle": Object {
                "id": "666",
              },
              "type": "WCA",
            },
            Object {
              "id": "777",
              "puzzle": Object {
                "id": "777",
              },
              "type": "WCA",
            },
            Object {
              "id": "clock",
              "puzzle": Object {
                "id": "clock",
              },
              "type": "WCA",
            },
            Object {
              "id": "pyram",
              "puzzle": Object {
                "id": "pyram",
              },
              "type": "WCA",
            },
            Object {
              "id": "minx",
              "puzzle": Object {
                "id": "minx",
              },
              "type": "WCA",
            },
            Object {
              "id": "sq1",
              "puzzle": Object {
                "id": "sq1",
              },
              "type": "WCA",
            },
            Object {
              "id": "skewb",
              "puzzle": Object {
                "id": "skewb",
              },
              "type": "WCA",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        viewabilityConfigCallbackPairs={Array []}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "justifyContent": "space-evenly",
                  },
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.222
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.333
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.333bf
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "justifyContent": "space-evenly",
                  },
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.333oh
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.333ft
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.444
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "justifyContent": "space-evenly",
                  },
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.444bf
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.555
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.555bf
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "justifyContent": "space-evenly",
                  },
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.666
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.777
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.clock
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "justifyContent": "space-evenly",
                  },
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.pyram
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.minx
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.sq1
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "justifyContent": "space-evenly",
                  },
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        Object {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 11,
                        "fontWeight": "500",
                        "letterSpacing": 0.5,
                        "lineHeight": 16,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      undefined,
                    ]
                  }
                >
                  events.skewb
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots EventSelectorModal default 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityLiveRegion="polite"
      accessibilityViewIsModal={true}
      collapsable={false}
      onAccessibilityEscape={[Function]}
      pointerEvents="auto"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="modal"
    >
      <View
        accessibilityLabel="Close modal"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        importantForAccessibility="no"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(50, 47, 55, 0.4)",
            "flex": 1,
            "opacity": 1,
          }
        }
        testID="modal-backdrop"
      />
      <View
        pointerEvents="box-none"
        style={
          Array [
            Object {
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "marginBottom": 0,
              "marginTop": 0,
            },
            undefined,
          ]
        }
        testID="modal-wrapper"
      >
        <View
          collapsable={false}
          style={
            Object {
              "alignSelf": undefined,
              "bottom": undefined,
              "end": undefined,
              "left": undefined,
              "position": undefined,
              "right": undefined,
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.15,
              "shadowRadius": 3,
              "start": undefined,
              "top": undefined,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 1,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                  "borderRadius": 10,
                  "justifyContent": "center",
                  "margin": 20,
                  "maxHeight": 800.4,
                  "opacity": 1,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "alignSelf": undefined,
                    "bottom": undefined,
                    "end": undefined,
                    "left": undefined,
                    "position": undefined,
                    "right": undefined,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.15,
                    "shadowRadius": 6,
                    "start": undefined,
                    "top": undefined,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": 0,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 2,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "rgb(243, 237, 246)",
                        "borderTopLeftRadius": 10,
                        "borderTopRightRadius": 10,
                        "maxHeight": 120.05999999999999,
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "rgba(28, 27, 31, 1)",
                            "fontFamily": "Rubik-Regular",
                            "fontSize": 16,
                            "fontWeight": "500",
                            "letterSpacing": 0.15,
                            "lineHeight": 24,
                          },
                          Object {
                            "textAlign": "left",
                          },
                          Object {
                            "writingDirection": "ltr",
                          },
                          Object {
                            "padding": 10,
                          },
                        ]
                      }
                    >
                      dialogs.select_event
                    </Text>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "stretch",
                    "maxHeight": 680.3399999999999,
                  }
                }
              >
                <View
                  style={Object {}}
                >
                  <RCTScrollView
                    data={
                      Array [
                        Object {
                          "id": "222",
                          "puzzle": Object {
                            "id": "222",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "333",
                          "puzzle": Object {
                            "id": "333",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "333bf",
                          "puzzle": Object {
                            "id": "333",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "333oh",
                          "puzzle": Object {
                            "id": "333",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "333ft",
                          "puzzle": Object {
                            "id": "333",
                          },
                          "type": "WCA_OLD",
                        },
                        Object {
                          "id": "444",
                          "puzzle": Object {
                            "id": "444",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "444bf",
                          "puzzle": Object {
                            "id": "444",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "555",
                          "puzzle": Object {
                            "id": "555",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "555bf",
                          "puzzle": Object {
                            "id": "555",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "666",
                          "puzzle": Object {
                            "id": "666",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "777",
                          "puzzle": Object {
                            "id": "777",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "clock",
                          "puzzle": Object {
                            "id": "clock",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "pyram",
                          "puzzle": Object {
                            "id": "pyram",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "minx",
                          "puzzle": Object {
                            "id": "minx",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "sq1",
                          "puzzle": Object {
                            "id": "sq1",
                          },
                          "type": "WCA",
                        },
                        Object {
                          "id": "skewb",
                          "puzzle": Object {
                            "id": "skewb",
                          },
                          "type": "WCA",
                        },
                      ]
                    }
                    getItem={[Function]}
                    getItemCount={[Function]}
                    keyExtractor={[Function]}
                    onContentSizeChange={[Function]}
                    onLayout={[Function]}
                    onMomentumScrollBegin={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    removeClippedSubviews={false}
                    renderItem={[Function]}
                    scrollEventThrottle={50}
                    stickyHeaderIndices={Array []}
                    viewabilityConfigCallbackPairs={Array []}
                  >
                    <View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "flexDirection": "row",
                              },
                              Object {
                                "alignItems": "center",
                                "justifyContent": "space-evenly",
                              },
                            ]
                          }
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.222
                            </Text>
                          </View>
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.333
                            </Text>
                          </View>
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.333bf
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "flexDirection": "row",
                              },
                              Object {
                                "alignItems": "center",
                                "justifyContent": "space-evenly",
                              },
                            ]
                          }
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.333oh
                            </Text>
                          </View>
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.333ft
                            </Text>
                          </View>
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.444
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "flexDirection": "row",
                              },
                              Object {
                                "alignItems": "center",
                                "justifyContent": "space-evenly",
                              },
                            ]
                          }
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.444bf
                            </Text>
                          </View>
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.555
                            </Text>
                          </View>
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.555bf
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "flexDirection": "row",
                              },
                              Object {
                                "alignItems": "center",
                                "justifyContent": "space-evenly",
                              },
                            ]
                          }
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.666
                            </Text>
                          </View>
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.777
                            </Text>
                          </View>
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.clock
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "flexDirection": "row",
                              },
                              Object {
                                "alignItems": "center",
                                "justifyContent": "space-evenly",
                              },
                            ]
                          }
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.pyram
                            </Text>
                          </View>
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.minx
                            </Text>
                          </View>
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.sq1
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "flexDirection": "row",
                              },
                              Object {
                                "alignItems": "center",
                                "justifyContent": "space-evenly",
                              },
                            ]
                          }
                        >
                          <View
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "padding": 10,
                                "width": 187.5,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "rgba(103, 80, 164, 1)",
                                    "borderRadius": 30,
                                    "height": 60,
                                    "width": 60,
                                  },
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                  },
                                  Object {},
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                selectable={false}
                                style={
                                  Array [
                                    Object {
                                      "color": "#ffffff",
                                      "fontSize": 36,
                                    },
                                    undefined,
                                    Object {
                                      "fontFamily": "WCAEvent",
                                      "fontStyle": "normal",
                                      "fontWeight": "normal",
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                
                              </Text>
                            </View>
                            <Text
                              numberOfLines={1}
                              style={
                                Array [
                                  Object {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  Object {
                                    "textAlign": "left",
                                  },
                                  Object {
                                    "writingDirection": "ltr",
                                  },
                                  undefined,
                                ]
                              }
                            >
                              events.skewb
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "borderBottomLeftRadius": 10,
                      "borderBottomRightRadius": 10,
                      "height": 15,
                      "marginTop": -15,
                      "opacity": 0.25,
                    },
                    Object {
                      "backgroundColor": "rgba(255, 251, 254, 1)",
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots InspectionTime almost done 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Object {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Array [
              Object {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": Array [
                  "tabular-nums",
                ],
              },
              Object {
                "color": "rgba(179, 38, 30, 1)",
                "fontSize": 80,
              },
            ],
          ]
        }
      >
        0
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots InspectionTime custom durations 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Object {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Array [
              Object {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": Array [
                  "tabular-nums",
                ],
              },
            ],
          ]
        }
      >
        20
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots InspectionTime default 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Object {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Array [
              Object {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": Array [
                  "tabular-nums",
                ],
              },
            ],
          ]
        }
      >
        15
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots InspectionTime first warning 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Object {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Array [
              Object {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": Array [
                  "tabular-nums",
                ],
              },
            ],
          ]
        }
      >
        7
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots InspectionTime overtime +2 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Object {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Array [
              Object {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": Array [
                  "tabular-nums",
                ],
              },
              Object {
                "color": "rgba(179, 38, 30, 1)",
                "fontSize": 80,
              },
            ],
          ]
        }
      >
        +2
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots InspectionTime overtime DNF 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Object {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Array [
              Object {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": Array [
                  "tabular-nums",
                ],
              },
              Object {
                "color": "rgba(179, 38, 30, 1)",
                "fontSize": 80,
              },
            ],
          ]
        }
      >
        DNF
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots InspectionTime ready +2 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Object {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Array [
              Object {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": Array [
                  "tabular-nums",
                ],
              },
              Object {
                "color": "rgba(179, 38, 30, 1)",
                "fontSize": 80,
              },
              Object {
                "color": "#1B5E20",
                "fontSize": 100,
              },
            ],
          ]
        }
      >
        +2
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots InspectionTime ready 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Object {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Array [
              Object {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": Array [
                  "tabular-nums",
                ],
              },
              Object {
                "color": "#1B5E20",
                "fontSize": 100,
              },
            ],
          ]
        }
      >
        11
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots InspectionTime ready late 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Object {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Array [
              Object {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": Array [
                  "tabular-nums",
                ],
              },
              Object {
                "color": "rgba(179, 38, 30, 1)",
                "fontSize": 80,
              },
              Object {
                "color": "#1B5E20",
                "fontSize": 100,
              },
            ],
          ]
        }
      >
        2
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots InspectionTime second warning 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Object {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Array [
              Object {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": Array [
                  "tabular-nums",
                ],
              },
              Object {
                "color": "rgba(179, 38, 30, 1)",
                "fontSize": 80,
              },
            ],
          ]
        }
      >
        3
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots InspectionTime start 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Object {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          Array [
            Object {
              "textAlign": "left",
            },
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            Object {
              "writingDirection": "ltr",
            },
            Array [
              Object {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": Array [
                  "tabular-nums",
                ],
              },
            ],
          ]
        }
      >
        15
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots InspectionTimer custom durations 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "fontFamily": "Rubik-Regular",
                "fontWeight": "400",
                "letterSpacing": 0,
              },
              Object {
                "writingDirection": "ltr",
              },
              Object {
                "fontSize": 16,
                "paddingBottom": 10,
              },
            ]
          }
        >
          INSPECTION:
        </Text>
        <Text
          style={
            Array [
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "fontFamily": "Rubik-Regular",
                "fontWeight": "400",
                "letterSpacing": 0,
              },
              Object {
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "color": "rgba(33, 0, 93, 1)",
                  "fontSize": 80,
                  "fontVariant": Array [
                    "tabular-nums",
                  ],
                },
              ],
            ]
          }
        >
          20
        </Text>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "alignSelf": undefined,
            "bottom": undefined,
            "end": undefined,
            "left": undefined,
            "position": undefined,
            "right": undefined,
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
            "start": undefined,
            "top": undefined,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "backgroundColor": "rgba(232, 222, 248, 1)",
                "borderColor": "transparent",
                "borderRadius": 10,
                "borderStyle": "solid",
                "borderWidth": 0,
                "minWidth": 64,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "overflow": "hidden",
                  },
                  false,
                  Object {
                    "borderRadius": 10,
                  },
                ]
              }
              testID="button"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      Array [
                        Object {
                          "marginHorizontal": 16,
                          "marginVertical": 9,
                          "textAlign": "center",
                        },
                        false,
                        Object {
                          "marginHorizontal": 24,
                          "marginVertical": 10,
                        },
                        undefined,
                        false,
                        Object {
                          "color": "rgba(29, 25, 43, 1)",
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 14,
                          "fontWeight": "500",
                          "letterSpacing": 0.1,
                          "lineHeight": 20,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  common.cancel
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots InspectionTimer default 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "fontFamily": "Rubik-Regular",
                "fontWeight": "400",
                "letterSpacing": 0,
              },
              Object {
                "writingDirection": "ltr",
              },
              Object {
                "fontSize": 16,
                "paddingBottom": 10,
              },
            ]
          }
        >
          INSPECTION:
        </Text>
        <Text
          style={
            Array [
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(28, 27, 31, 1)",
                "fontFamily": "Rubik-Regular",
                "fontWeight": "400",
                "letterSpacing": 0,
              },
              Object {
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "color": "rgba(33, 0, 93, 1)",
                  "fontSize": 80,
                  "fontVariant": Array [
                    "tabular-nums",
                  ],
                },
              ],
            ]
          }
        >
          15
        </Text>
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "alignSelf": undefined,
            "bottom": undefined,
            "end": undefined,
            "left": undefined,
            "position": undefined,
            "right": undefined,
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
            "start": undefined,
            "top": undefined,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "shadowColor": "#000",
              "shadowOffset": Object {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "backgroundColor": "rgba(232, 222, 248, 1)",
                "borderColor": "transparent",
                "borderRadius": 10,
                "borderStyle": "solid",
                "borderWidth": 0,
                "minWidth": 64,
              }
            }
          >
            <View
              accessibilityRole="button"
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "overflow": "hidden",
                  },
                  false,
                  Object {
                    "borderRadius": 10,
                  },
                ]
              }
              testID="button"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      Object {
                        "textAlign": "left",
                      },
                      Object {
                        "writingDirection": "ltr",
                      },
                      Array [
                        Object {
                          "marginHorizontal": 16,
                          "marginVertical": 9,
                          "textAlign": "center",
                        },
                        false,
                        Object {
                          "marginHorizontal": 24,
                          "marginVertical": 10,
                        },
                        undefined,
                        false,
                        Object {
                          "color": "rgba(29, 25, 43, 1)",
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 14,
                          "fontWeight": "500",
                          "letterSpacing": 0.1,
                          "lineHeight": 20,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  common.cancel
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer 2D 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"3x3x3\\",
            visualization: \\"2D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer 2x2x2 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"2x2x2\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer 3x3x3 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"3x3x3\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer 4x4x4 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"4x4x4\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer 5x5x5 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"5x5x5\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer 6x6x6 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"6x6x6\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer 7x7x7 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"7x7x7\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer Back View (side-by-side) 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"3x3x3\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"side-by-side\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer Back View (top-right) 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"3x3x3\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"top-right\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer Custom Scramble 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"R U R' U'\\",
            puzzle: \\"3x3x3\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer Hint Facelets 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"3x3x3\\",
            visualization: \\"3D\\",
            hintFacelets: \\"floating\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer clock 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"clock\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer default 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"3x3x3\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer megaminx 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"megaminx\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer pyraminx 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"pyraminx\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer skewb 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"skewb\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TwistyPlayer square 1 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={true}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scrollEnabled={false}
        setBuiltInZoomControls={false}
        setDisplayZoomControls={false}
        showsHorizontalScrollIndicator={false}
        showsVerticalScrollIndicator={false}
        source={
          Object {
            "html": "
        <script type=\\"module\\">
          import { TwistyPlayer } from \\"https://cdn.cubing.net/js/cubing/twisty\\";
          import { Move } from \\"https://cdn.cubing.net/js/cubing/alg\\";

          const player = new TwistyPlayer({
            alg: \\"\\",
            puzzle: \\"square1\\",
            visualization: \\"3D\\",
            hintFacelets: \\"none\\",
            backView: \\"none\\",
            background: \\"none\\",
            controlPanel: \\"none\\",
          });
          player.style = \\"width: 768; height: 512;\\"
          document.body.appendChild(player);
          document.player = player
          document.getElementById(\\"next-move\\").addEventListener(\\"click\\", () => {
            var move = document.getElementById(\\"next-move\\").innerHTML
            player.experimentalAddAlgLeaf(new Move(move));
          })
        </script>

        <body
          style=\\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black\\">
          <button hidden id=\\"next-move\\">U</button>
        </body>
      ",
          }
        }
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "flex": 1,
            },
          ]
        }
        textInteractionEnabled={true}
        useSharedProcessPool={true}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;
