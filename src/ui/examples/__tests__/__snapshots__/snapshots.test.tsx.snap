// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Examples attempt-player's 2x2x2 matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <View
        style={
          {
            "flex": 2,
          }
        }
      >
        <View
          originWhitelist={
            [
              "*",
            ]
          }
          scrollEnabled={false}
          setBuiltInZoomControls={false}
          setDisplayZoomControls={false}
          showsHorizontalScrollIndicator={false}
          showsVerticalScrollIndicator={false}
          source={
            {
              "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "2x2x2",
                visualization: "3D",
                hintFacelets: "floating",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: rgba(255, 251, 254, 1)">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
            }
          }
          style={
            {
              "flex": 1,
            }
          }
        />
      </View>
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "paddingHorizontal": 20,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "backgroundColor": "rgba(232, 222, 248, 1)",
                "borderBottomRightRadius": 0,
                "borderColor": "rgba(121, 116, 126, 1)",
                "borderRadius": 10,
                "borderRightWidth": 0,
                "borderTopRightRadius": 0,
                "borderWidth": 1,
              },
              {
                "borderStyle": "solid",
                "flex": 1,
                "minWidth": 76,
              },
              [
                undefined,
                {},
              ],
            ]
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": true,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "overflow": "hidden",
                },
                {
                  "borderBottomRightRadius": 0,
                  "borderRadius": 10,
                  "borderRightWidth": 0,
                  "borderTopRightRadius": 0,
                },
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 16,
                    "paddingVertical": 9,
                  },
                  {
                    "paddingVertical": 1,
                  },
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      [
                        {
                          "textAlign": "center",
                        },
                        {
                          "color": "rgba(29, 25, 43, 1)",
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 14,
                          "fontWeight": "500",
                          "letterSpacing": 0.1,
                          "lineHeight": 20,
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
                testID="undefined-label"
              >
                reconstruction.reconstruction
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderBottomLeftRadius": 0,
                "borderColor": "rgba(121, 116, 126, 1)",
                "borderRadius": 10,
                "borderTopLeftRadius": 0,
                "borderWidth": 1,
              },
              {
                "borderStyle": "solid",
                "flex": 1,
                "minWidth": 76,
              },
              [
                undefined,
                {},
              ],
            ]
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": false,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "overflow": "hidden",
                },
                {
                  "borderBottomLeftRadius": 0,
                  "borderRadius": 10,
                  "borderTopLeftRadius": 0,
                },
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 16,
                    "paddingVertical": 9,
                  },
                  {
                    "paddingVertical": 1,
                  },
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      [
                        {
                          "textAlign": "center",
                        },
                        {
                          "color": "rgba(28, 27, 31, 1)",
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 14,
                          "fontWeight": "500",
                          "letterSpacing": 0.1,
                          "lineHeight": 20,
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
                testID="undefined-label"
              >
                analytics.tps
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          {
            "flex": 3,
          }
        }
      >
        <View
          style={
            {
              "paddingVertical": 5,
            }
          }
        />
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-around",
          }
        }
      >
        <Text
          style={
            [
              {
                "textAlign": "left",
              },
              {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              [
                {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                {
                  "flex": 1,
                  "fontVariant": [
                    "tabular-nums",
                  ],
                  "textAlign": "center",
                },
              ],
            ]
          }
        >
          0.000
        </Text>
        <RNCSlider
          disabled={false}
          inverted={false}
          lowerLimit={-9007199254740991}
          maximumTrackTintColor="rgba(28, 27, 31, 1)"
          maximumValue={7561}
          minimumTrackTintColor="rgba(103, 80, 164, 1)"
          minimumValue={0}
          onChange={[Function]}
          onRNCSliderAccessibilityAction={null}
          onRNCSliderSlidingComplete={[Function]}
          onRNCSliderSlidingStart={[Function]}
          onRNCSliderValueChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          step={0}
          style={
            [
              {
                "flex": 4,
              },
              {
                "height": 40,
              },
            ]
          }
          tapToSeek={false}
          thumbTintColor="rgba(103, 80, 164, 1)"
          upperLimit={9007199254740991}
          value={0}
        />
        <Text
          style={
            [
              {
                "textAlign": "left",
              },
              {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              [
                {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                {
                  "flex": 1,
                  "fontVariant": [
                    "tabular-nums",
                  ],
                  "textAlign": "center",
                },
              ],
            ]
          }
        >
          7.561
        </Text>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            {
              "flex": 1,
            }
          }
        >
          <View />
        </View>
        <View
          style={
            {
              "flex": 4,
              "zIndex": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 24,
                        },
                        undefined,
                        {
                          "fontFamily": "Entypo",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 24,
                        },
                        undefined,
                        {
                          "fontFamily": "Entypo",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        {
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        {
                          "bottom": 0,
                          "left": 0,
                          "opacity": 1,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "transform": [
                            {
                              "rotate": "0deg",
                            },
                          ],
                        }
                      }
                      testID="cross-fade-icon-current"
                    >
                      <Text
                        allowFontScaling={false}
                        selectable={false}
                        style={
                          [
                            {
                              "color": "rgba(73, 69, 79, 1)",
                              "fontSize": 24,
                            },
                            undefined,
                            {
                              "fontFamily": "Entypo",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            {},
                          ]
                        }
                      >
                        
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 24,
                        },
                        undefined,
                        {
                          "fontFamily": "Entypo",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 24,
                        },
                        undefined,
                        {
                          "fontFamily": "Entypo",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            {
              "flex": 1,
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "textAlign": "left",
                  },
                  {
                    "color": "rgba(28, 27, 31, 1)",
                    "writingDirection": "ltr",
                  },
                  [
                    {
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 12,
                      "fontWeight": "400",
                      "letterSpacing": 0.4,
                      "lineHeight": 16,
                    },
                    {
                      "color": "rgba(103, 80, 164, 1)",
                    },
                  ],
                ]
              }
            >
              1x
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples attempt-player's 3x3x3 matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <View
        style={
          {
            "flex": 2,
          }
        }
      >
        <View
          originWhitelist={
            [
              "*",
            ]
          }
          scrollEnabled={false}
          setBuiltInZoomControls={false}
          setDisplayZoomControls={false}
          showsHorizontalScrollIndicator={false}
          showsVerticalScrollIndicator={false}
          source={
            {
              "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "3x3x3",
                visualization: "3D",
                hintFacelets: "floating",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: rgba(255, 251, 254, 1)">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
            }
          }
          style={
            {
              "flex": 1,
            }
          }
        />
      </View>
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "paddingHorizontal": 20,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "backgroundColor": "rgba(232, 222, 248, 1)",
                "borderBottomRightRadius": 0,
                "borderColor": "rgba(121, 116, 126, 1)",
                "borderRadius": 10,
                "borderRightWidth": 0,
                "borderTopRightRadius": 0,
                "borderWidth": 1,
              },
              {
                "borderStyle": "solid",
                "flex": 1,
                "minWidth": 76,
              },
              [
                undefined,
                {},
              ],
            ]
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": true,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "overflow": "hidden",
                },
                {
                  "borderBottomRightRadius": 0,
                  "borderRadius": 10,
                  "borderRightWidth": 0,
                  "borderTopRightRadius": 0,
                },
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 16,
                    "paddingVertical": 9,
                  },
                  {
                    "paddingVertical": 1,
                  },
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      [
                        {
                          "textAlign": "center",
                        },
                        {
                          "color": "rgba(29, 25, 43, 1)",
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 14,
                          "fontWeight": "500",
                          "letterSpacing": 0.1,
                          "lineHeight": 20,
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
                testID="undefined-label"
              >
                reconstruction.reconstruction
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderBottomLeftRadius": 0,
                "borderColor": "rgba(121, 116, 126, 1)",
                "borderRadius": 10,
                "borderTopLeftRadius": 0,
                "borderWidth": 1,
              },
              {
                "borderStyle": "solid",
                "flex": 1,
                "minWidth": 76,
              },
              [
                undefined,
                {},
              ],
            ]
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": false,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "overflow": "hidden",
                },
                {
                  "borderBottomLeftRadius": 0,
                  "borderRadius": 10,
                  "borderTopLeftRadius": 0,
                },
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 16,
                    "paddingVertical": 9,
                  },
                  {
                    "paddingVertical": 1,
                  },
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      [
                        {
                          "textAlign": "center",
                        },
                        {
                          "color": "rgba(28, 27, 31, 1)",
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 14,
                          "fontWeight": "500",
                          "letterSpacing": 0.1,
                          "lineHeight": 20,
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
                testID="undefined-label"
              >
                analytics.tps
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          {
            "flex": 3,
          }
        }
      >
        <View
          style={
            {
              "paddingVertical": 5,
            }
          }
        >
          <RCTScrollView
            data={
              [
                {
                  "duration": 531,
                  "label": "pickup",
                  "moves": [],
                  "recognition": 0,
                  "tps": 0,
                },
                {
                  "duration": 2095,
                  "label": "cross",
                  "moves": [
                    {
                      "m": "L'",
                      "t": 531,
                    },
                    {
                      "m": "R'",
                      "t": 616,
                    },
                    {
                      "m": "B",
                      "t": 1187,
                    },
                    {
                      "m": "D'",
                      "t": 1457,
                    },
                    {
                      "m": "L",
                      "t": 1684,
                    },
                    {
                      "m": "U'",
                      "t": 1947,
                    },
                    {
                      "m": "B'",
                      "t": 2626,
                    },
                  ],
                  "recognition": 0,
                  "tps": 3.3412887828162288,
                },
                {
                  "duration": 1740,
                  "label": "1st pair",
                  "moves": [
                    {
                      "m": "F2",
                      "t": 3288,
                    },
                    {
                      "m": "D",
                      "t": 3860,
                    },
                    {
                      "m": "F'",
                      "t": 4065,
                    },
                    {
                      "m": "D'",
                      "t": 4366,
                    },
                  ],
                  "recognition": 662,
                  "tps": 2.2988505747126435,
                },
                {
                  "duration": 1771,
                  "label": "2nd pair",
                  "moves": [
                    {
                      "m": "D'",
                      "t": 5176,
                    },
                    {
                      "m": "F2",
                      "t": 5298,
                    },
                    {
                      "m": "D",
                      "t": 5506,
                    },
                    {
                      "m": "F",
                      "t": 5598,
                    },
                    {
                      "m": "U'",
                      "t": 5817,
                    },
                    {
                      "m": "F'",
                      "t": 5986,
                    },
                    {
                      "m": "U",
                      "t": 6137,
                    },
                  ],
                  "recognition": 810,
                  "tps": 3.9525691699604746,
                },
                {
                  "duration": 2010,
                  "label": "3rd pair",
                  "moves": [
                    {
                      "m": "D'",
                      "t": 6412,
                    },
                    {
                      "m": "F",
                      "t": 6467,
                    },
                    {
                      "m": "D",
                      "t": 6676,
                    },
                    {
                      "m": "R'",
                      "t": 7187,
                    },
                    {
                      "m": "F2",
                      "t": 7312,
                    },
                    {
                      "m": "R",
                      "t": 7547,
                    },
                    {
                      "m": "F'",
                      "t": 7726,
                    },
                    {
                      "m": "U",
                      "t": 7880,
                    },
                    {
                      "m": "F",
                      "t": 8027,
                    },
                    {
                      "m": "U'",
                      "t": 8147,
                    },
                  ],
                  "recognition": 275,
                  "tps": 4.975124378109453,
                },
                {
                  "duration": 1169,
                  "label": "4th pair",
                  "moves": [
                    {
                      "m": "R",
                      "t": 8536,
                    },
                    {
                      "m": "F'",
                      "t": 8631,
                    },
                    {
                      "m": "R'",
                      "t": 8716,
                    },
                    {
                      "m": "D",
                      "t": 8986,
                    },
                    {
                      "m": "R'",
                      "t": 9136,
                    },
                    {
                      "m": "D'",
                      "t": 9269,
                    },
                    {
                      "m": "R",
                      "t": 9316,
                    },
                  ],
                  "recognition": 389,
                  "tps": 5.9880239520958085,
                },
                {
                  "duration": 3182,
                  "label": "OLLCP",
                  "moves": [
                    {
                      "m": "F2",
                      "t": 9856,
                    },
                    {
                      "m": "F",
                      "t": 10465,
                    },
                    {
                      "m": "U",
                      "t": 10736,
                    },
                    {
                      "m": "F",
                      "t": 11031,
                    },
                    {
                      "m": "L",
                      "t": 11116,
                    },
                    {
                      "m": "F'",
                      "t": 11207,
                    },
                    {
                      "m": "L'",
                      "t": 11296,
                    },
                    {
                      "m": "U'",
                      "t": 11514,
                    },
                    {
                      "m": "F'",
                      "t": 11687,
                    },
                    {
                      "m": "D",
                      "t": 11972,
                    },
                    {
                      "m": "R",
                      "t": 12048,
                    },
                    {
                      "m": "F",
                      "t": 12196,
                    },
                    {
                      "m": "R'",
                      "t": 12296,
                    },
                    {
                      "m": "F'",
                      "t": 12346,
                    },
                    {
                      "m": "D'",
                      "t": 12498,
                    },
                  ],
                  "recognition": 540,
                  "tps": 4.714016341923319,
                },
                {
                  "duration": 1768,
                  "label": "EPLL",
                  "moves": [
                    {
                      "m": "R'",
                      "t": 13126,
                    },
                    {
                      "m": "F",
                      "t": 13186,
                    },
                    {
                      "m": "R'",
                      "t": 13247,
                    },
                    {
                      "m": "F'",
                      "t": 13401,
                    },
                    {
                      "m": "R'",
                      "t": 13608,
                    },
                    {
                      "m": "F'",
                      "t": 13669,
                    },
                    {
                      "m": "R'",
                      "t": 13890,
                    },
                    {
                      "m": "F",
                      "t": 13969,
                    },
                    {
                      "m": "R",
                      "t": 14104,
                    },
                    {
                      "m": "F",
                      "t": 14146,
                    },
                    {
                      "m": "R2",
                      "t": 14266,
                    },
                  ],
                  "recognition": 628,
                  "tps": 6.221719457013575,
                },
                {
                  "duration": 599,
                  "label": "put down",
                  "moves": [],
                  "recognition": 0,
                  "tps": 0,
                },
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            getItemLayout={[Function]}
            initialScrollIndex={1}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={[]}
          >
            <View>
              <View
                onFocusCapture={[Function]}
                style={null}
              >
                <View>
                  <View
                    style={
                      {
                        "backgroundColor": "rgba(255, 251, 254, 1)",
                      }
                    }
                  >
                    <View
                      accessibilityRole="button"
                      accessibilityState={
                        {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": false,
                          "expanded": false,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        [
                          {
                            "overflow": "hidden",
                          },
                          [
                            {
                              "paddingRight": 24,
                              "paddingVertical": 8,
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      <View
                        pointerEvents="none"
                        style={
                          {
                            "flexDirection": "row",
                            "marginVertical": 6,
                          }
                        }
                      >
                        <View
                          style={
                            [
                              {
                                "paddingLeft": 16,
                              },
                              {
                                "flex": 1,
                                "justifyContent": "center",
                              },
                            ]
                          }
                        >
                          <Text
                            numberOfLines={1}
                            selectable={false}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "fontFamily": "Rubik-Regular",
                                  "fontWeight": "400",
                                  "letterSpacing": 0,
                                },
                                {
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontSize": 16,
                                  },
                                  {
                                    "color": "rgba(28, 27, 31, 1)",
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            pickup
                          </Text>
                        </View>
                        <View
                          style={
                            [
                              {
                                "marginVertical": 6,
                                "paddingLeft": 8,
                              },
                              undefined,
                            ]
                          }
                        >
                          <View
                            collapsable={false}
                            style={
                              {
                                "backgroundColor": "rgba(232, 222, 248, 1)",
                                "borderRadius": 8,
                                "shadowColor": "#000",
                                "shadowOffset": {
                                  "height": 0,
                                  "width": 0,
                                },
                                "shadowOpacity": 0,
                                "shadowRadius": 0,
                              }
                            }
                            testID="chip-container-outer-layer"
                          >
                            <View
                              collapsable={false}
                              isExpanded={false}
                              style={
                                {
                                  "backgroundColor": "rgba(232, 222, 248, 1)",
                                  "borderColor": "rgba(121, 116, 126, 1)",
                                  "borderRadius": 8,
                                  "borderStyle": "solid",
                                  "borderWidth": 0,
                                  "flex": undefined,
                                  "flexDirection": "column",
                                  "shadowColor": "#000",
                                  "shadowOffset": {
                                    "height": 0,
                                    "width": 0,
                                  },
                                  "shadowOpacity": 0,
                                  "shadowRadius": 0,
                                }
                              }
                              testID="chip-container"
                            >
                              <View
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": true,
                                    "expanded": undefined,
                                    "selected": false,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  [
                                    {
                                      "overflow": "hidden",
                                    },
                                    [
                                      {
                                        "borderRadius": 8,
                                      },
                                      {
                                        "flexGrow": 1,
                                      },
                                    ],
                                  ]
                                }
                                testID="chip"
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "flexGrow": 1,
                                        "paddingLeft": 4,
                                        "position": "relative",
                                      },
                                      {
                                        "paddingLeft": 0,
                                      },
                                      {
                                        "paddingRight": 0,
                                      },
                                    ]
                                  }
                                >
                                  <Text
                                    numberOfLines={1}
                                    selectable={false}
                                    style={
                                      [
                                        {
                                          "textAlign": "left",
                                        },
                                        {
                                          "color": "rgba(28, 27, 31, 1)",
                                          "writingDirection": "ltr",
                                        },
                                        [
                                          {
                                            "fontFamily": "Rubik-Regular",
                                            "fontSize": 14,
                                            "fontWeight": "500",
                                            "letterSpacing": 0.1,
                                            "lineHeight": 20,
                                          },
                                          [
                                            {
                                              "marginVertical": 6,
                                              "textAlignVertical": "center",
                                            },
                                            {
                                              "color": "rgba(29, 25, 43, 1)",
                                              "fontFamily": "Rubik-Regular",
                                              "fontSize": 14,
                                              "fontWeight": "500",
                                              "letterSpacing": 0.1,
                                              "lineHeight": 20,
                                            },
                                            {
                                              "marginLeft": 12,
                                              "marginRight": 12,
                                            },
                                            {
                                              "fontVariant": [
                                                "tabular-nums",
                                              ],
                                            },
                                          ],
                                        ],
                                      ]
                                    }
                                  >
                                    0.531 units.seconds
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onFocusCapture={[Function]}
                style={null}
              >
                <View>
                  <View
                    style={
                      {
                        "backgroundColor": "rgba(255, 251, 254, 1)",
                      }
                    }
                  >
                    <View
                      accessibilityRole="button"
                      accessibilityState={
                        {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": false,
                          "expanded": false,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        [
                          {
                            "overflow": "hidden",
                          },
                          [
                            {
                              "paddingRight": 24,
                              "paddingVertical": 8,
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      <View
                        pointerEvents="none"
                        style={
                          {
                            "flexDirection": "row",
                            "marginVertical": 6,
                          }
                        }
                      >
                        <View
                          style={
                            [
                              {
                                "paddingLeft": 16,
                              },
                              {
                                "flex": 1,
                                "justifyContent": "center",
                              },
                            ]
                          }
                        >
                          <Text
                            numberOfLines={1}
                            selectable={false}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "fontFamily": "Rubik-Regular",
                                  "fontWeight": "400",
                                  "letterSpacing": 0,
                                },
                                {
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontSize": 16,
                                  },
                                  {
                                    "color": "rgba(28, 27, 31, 1)",
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            cross
                          </Text>
                          <Text
                            numberOfLines={2}
                            onTextLayout={[Function]}
                            selectable={false}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "fontFamily": "Rubik-Regular",
                                  "fontWeight": "400",
                                  "letterSpacing": 0,
                                },
                                {
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontSize": 14,
                                  },
                                  {
                                    "color": "rgba(73, 69, 79, 1)",
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            <Text
                              style={
                                [
                                  {
                                    "textAlign": "left",
                                  },
                                  {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontWeight": "400",
                                    "letterSpacing": 0,
                                  },
                                  {
                                    "writingDirection": "ltr",
                                  },
                                  {
                                    "color": "rgba(28, 27, 31, 1)",
                                  },
                                ]
                              }
                            >
                              L' R' B D' L U' B'
                            </Text>
                          </Text>
                        </View>
                        <View
                          style={
                            [
                              {
                                "marginVertical": 6,
                                "paddingLeft": 8,
                              },
                              {
                                "alignItems": "center",
                                "height": 40,
                                "justifyContent": "center",
                              },
                            ]
                          }
                        >
                          <View
                            collapsable={false}
                            style={
                              {
                                "backgroundColor": "rgba(232, 222, 248, 1)",
                                "borderRadius": 8,
                                "shadowColor": "#000",
                                "shadowOffset": {
                                  "height": 0,
                                  "width": 0,
                                },
                                "shadowOpacity": 0,
                                "shadowRadius": 0,
                              }
                            }
                            testID="chip-container-outer-layer"
                          >
                            <View
                              collapsable={false}
                              isExpanded={false}
                              style={
                                {
                                  "backgroundColor": "rgba(232, 222, 248, 1)",
                                  "borderColor": "rgba(121, 116, 126, 1)",
                                  "borderRadius": 8,
                                  "borderStyle": "solid",
                                  "borderWidth": 0,
                                  "flex": undefined,
                                  "flexDirection": "column",
                                  "shadowColor": "#000",
                                  "shadowOffset": {
                                    "height": 0,
                                    "width": 0,
                                  },
                                  "shadowOpacity": 0,
                                  "shadowRadius": 0,
                                }
                              }
                              testID="chip-container"
                            >
                              <View
                                accessibilityRole="button"
                                accessibilityState={
                                  {
                                    "busy": undefined,
                                    "checked": undefined,
                                    "disabled": true,
                                    "expanded": undefined,
                                    "selected": false,
                                  }
                                }
                                accessibilityValue={
                                  {
                                    "max": undefined,
                                    "min": undefined,
                                    "now": undefined,
                                    "text": undefined,
                                  }
                                }
                                accessible={true}
                                collapsable={false}
                                focusable={true}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onResponderGrant={[Function]}
                                onResponderMove={[Function]}
                                onResponderRelease={[Function]}
                                onResponderTerminate={[Function]}
                                onResponderTerminationRequest={[Function]}
                                onStartShouldSetResponder={[Function]}
                                style={
                                  [
                                    {
                                      "overflow": "hidden",
                                    },
                                    [
                                      {
                                        "borderRadius": 8,
                                      },
                                      {
                                        "flexGrow": 1,
                                      },
                                    ],
                                  ]
                                }
                                testID="chip"
                              >
                                <View
                                  style={
                                    [
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "flexGrow": 1,
                                        "paddingLeft": 4,
                                        "position": "relative",
                                      },
                                      {
                                        "paddingLeft": 0,
                                      },
                                      {
                                        "paddingRight": 0,
                                      },
                                    ]
                                  }
                                >
                                  <Text
                                    numberOfLines={1}
                                    selectable={false}
                                    style={
                                      [
                                        {
                                          "textAlign": "left",
                                        },
                                        {
                                          "color": "rgba(28, 27, 31, 1)",
                                          "writingDirection": "ltr",
                                        },
                                        [
                                          {
                                            "fontFamily": "Rubik-Regular",
                                            "fontSize": 14,
                                            "fontWeight": "500",
                                            "letterSpacing": 0.1,
                                            "lineHeight": 20,
                                          },
                                          [
                                            {
                                              "marginVertical": 6,
                                              "textAlignVertical": "center",
                                            },
                                            {
                                              "color": "rgba(29, 25, 43, 1)",
                                              "fontFamily": "Rubik-Regular",
                                              "fontSize": 14,
                                              "fontWeight": "500",
                                              "letterSpacing": 0.1,
                                              "lineHeight": 20,
                                            },
                                            {
                                              "marginLeft": 12,
                                              "marginRight": 12,
                                            },
                                            {
                                              "fontVariant": [
                                                "tabular-nums",
                                              ],
                                            },
                                          ],
                                        ],
                                      ]
                                    }
                                  >
                                    2.095 units.seconds
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  {
                    "height": 525,
                  }
                }
              />
            </View>
          </RCTScrollView>
        </View>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-around",
          }
        }
      >
        <Text
          style={
            [
              {
                "textAlign": "left",
              },
              {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              [
                {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                {
                  "flex": 1,
                  "fontVariant": [
                    "tabular-nums",
                  ],
                  "textAlign": "center",
                },
              ],
            ]
          }
        >
          0.000
        </Text>
        <RNCSlider
          disabled={false}
          inverted={false}
          lowerLimit={-9007199254740991}
          maximumTrackTintColor="rgba(28, 27, 31, 1)"
          maximumValue={14865}
          minimumTrackTintColor="rgba(103, 80, 164, 1)"
          minimumValue={0}
          onChange={[Function]}
          onRNCSliderAccessibilityAction={null}
          onRNCSliderSlidingComplete={[Function]}
          onRNCSliderSlidingStart={[Function]}
          onRNCSliderValueChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          step={0}
          style={
            [
              {
                "flex": 4,
              },
              {
                "height": 40,
              },
            ]
          }
          tapToSeek={false}
          thumbTintColor="rgba(103, 80, 164, 1)"
          upperLimit={9007199254740991}
          value={0}
        />
        <Text
          style={
            [
              {
                "textAlign": "left",
              },
              {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              [
                {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                {
                  "flex": 1,
                  "fontVariant": [
                    "tabular-nums",
                  ],
                  "textAlign": "center",
                },
              ],
            ]
          }
        >
          14.865
        </Text>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            {
              "flex": 1,
            }
          }
        >
          <View />
        </View>
        <View
          style={
            {
              "flex": 4,
              "zIndex": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 24,
                        },
                        undefined,
                        {
                          "fontFamily": "Entypo",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 24,
                        },
                        undefined,
                        {
                          "fontFamily": "Entypo",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        {
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        {
                          "bottom": 0,
                          "left": 0,
                          "opacity": 1,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "transform": [
                            {
                              "rotate": "0deg",
                            },
                          ],
                        }
                      }
                      testID="cross-fade-icon-current"
                    >
                      <Text
                        allowFontScaling={false}
                        selectable={false}
                        style={
                          [
                            {
                              "color": "rgba(73, 69, 79, 1)",
                              "fontSize": 24,
                            },
                            undefined,
                            {
                              "fontFamily": "Entypo",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            {},
                          ]
                        }
                      >
                        
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 24,
                        },
                        undefined,
                        {
                          "fontFamily": "Entypo",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 24,
                        },
                        undefined,
                        {
                          "fontFamily": "Entypo",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            {
              "flex": 1,
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "textAlign": "left",
                  },
                  {
                    "color": "rgba(28, 27, 31, 1)",
                    "writingDirection": "ltr",
                  },
                  [
                    {
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 12,
                      "fontWeight": "400",
                      "letterSpacing": 0.4,
                      "lineHeight": 16,
                    },
                    {
                      "color": "rgba(103, 80, 164, 1)",
                    },
                  ],
                ]
              }
            >
              1x
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples attempt-player's 3x3x3-gyro matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <View
        style={
          {
            "flex": 2,
          }
        }
      >
        <View
          originWhitelist={
            [
              "*",
            ]
          }
          scrollEnabled={false}
          setBuiltInZoomControls={false}
          setDisplayZoomControls={false}
          showsHorizontalScrollIndicator={false}
          showsVerticalScrollIndicator={false}
          source={
            {
              "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "3x3x3",
                visualization: "3D",
                hintFacelets: "floating",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: rgba(255, 251, 254, 1)">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
            }
          }
          style={
            {
              "flex": 1,
            }
          }
        />
      </View>
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "paddingHorizontal": 20,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "backgroundColor": "rgba(232, 222, 248, 1)",
                "borderBottomRightRadius": 0,
                "borderColor": "rgba(121, 116, 126, 1)",
                "borderRadius": 10,
                "borderRightWidth": 0,
                "borderTopRightRadius": 0,
                "borderWidth": 1,
              },
              {
                "borderStyle": "solid",
                "flex": 1,
                "minWidth": 76,
              },
              [
                undefined,
                {},
              ],
            ]
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": true,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "overflow": "hidden",
                },
                {
                  "borderBottomRightRadius": 0,
                  "borderRadius": 10,
                  "borderRightWidth": 0,
                  "borderTopRightRadius": 0,
                },
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 16,
                    "paddingVertical": 9,
                  },
                  {
                    "paddingVertical": 1,
                  },
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      [
                        {
                          "textAlign": "center",
                        },
                        {
                          "color": "rgba(29, 25, 43, 1)",
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 14,
                          "fontWeight": "500",
                          "letterSpacing": 0.1,
                          "lineHeight": 20,
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
                testID="undefined-label"
              >
                reconstruction.reconstruction
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderBottomLeftRadius": 0,
                "borderColor": "rgba(121, 116, 126, 1)",
                "borderRadius": 10,
                "borderTopLeftRadius": 0,
                "borderWidth": 1,
              },
              {
                "borderStyle": "solid",
                "flex": 1,
                "minWidth": 76,
              },
              [
                undefined,
                {},
              ],
            ]
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": false,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "overflow": "hidden",
                },
                {
                  "borderBottomLeftRadius": 0,
                  "borderRadius": 10,
                  "borderTopLeftRadius": 0,
                },
              ]
            }
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingHorizontal": 16,
                    "paddingVertical": 9,
                  },
                  {
                    "paddingVertical": 1,
                  },
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      [
                        {
                          "textAlign": "center",
                        },
                        {
                          "color": "rgba(28, 27, 31, 1)",
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 14,
                          "fontWeight": "500",
                          "letterSpacing": 0.1,
                          "lineHeight": 20,
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
                testID="undefined-label"
              >
                analytics.tps
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          {
            "flex": 3,
          }
        }
      >
        <View
          style={
            {
              "paddingVertical": 5,
            }
          }
        />
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-around",
          }
        }
      >
        <Text
          style={
            [
              {
                "textAlign": "left",
              },
              {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              [
                {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                {
                  "flex": 1,
                  "fontVariant": [
                    "tabular-nums",
                  ],
                  "textAlign": "center",
                },
              ],
            ]
          }
        >
          0.000
        </Text>
        <RNCSlider
          disabled={false}
          inverted={false}
          lowerLimit={-9007199254740991}
          maximumTrackTintColor="rgba(28, 27, 31, 1)"
          maximumValue={11833}
          minimumTrackTintColor="rgba(103, 80, 164, 1)"
          minimumValue={0}
          onChange={[Function]}
          onRNCSliderAccessibilityAction={null}
          onRNCSliderSlidingComplete={[Function]}
          onRNCSliderSlidingStart={[Function]}
          onRNCSliderValueChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          step={0}
          style={
            [
              {
                "flex": 4,
              },
              {
                "height": 40,
              },
            ]
          }
          tapToSeek={false}
          thumbTintColor="rgba(103, 80, 164, 1)"
          upperLimit={9007199254740991}
          value={0}
        />
        <Text
          style={
            [
              {
                "textAlign": "left",
              },
              {
                "color": "rgba(28, 27, 31, 1)",
                "writingDirection": "ltr",
              },
              [
                {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                {
                  "flex": 1,
                  "fontVariant": [
                    "tabular-nums",
                  ],
                  "textAlign": "center",
                },
              ],
            ]
          }
        >
          11.833
        </Text>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            {
              "flex": 1,
            }
          }
        >
          <View />
        </View>
        <View
          style={
            {
              "flex": 4,
              "zIndex": 1,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 24,
                        },
                        undefined,
                        {
                          "fontFamily": "Entypo",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 24,
                        },
                        undefined,
                        {
                          "fontFamily": "Entypo",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        {
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        {
                          "bottom": 0,
                          "left": 0,
                          "opacity": 1,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "transform": [
                            {
                              "rotate": "0deg",
                            },
                          ],
                        }
                      }
                      testID="cross-fade-icon-current"
                    >
                      <Text
                        allowFontScaling={false}
                        selectable={false}
                        style={
                          [
                            {
                              "color": "rgba(73, 69, 79, 1)",
                              "fontSize": 24,
                            },
                            undefined,
                            {
                              "fontFamily": "Entypo",
                              "fontStyle": "normal",
                              "fontWeight": "normal",
                            },
                            {},
                          ]
                        }
                      >
                        
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 24,
                        },
                        undefined,
                        {
                          "fontFamily": "Entypo",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(121, 116, 126, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "rgba(73, 69, 79, 1)",
                          "fontSize": 24,
                        },
                        undefined,
                        {
                          "fontFamily": "Entypo",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            {
              "flex": 1,
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                [
                  {
                    "textAlign": "left",
                  },
                  {
                    "color": "rgba(28, 27, 31, 1)",
                    "writingDirection": "ltr",
                  },
                  [
                    {
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 12,
                      "fontWeight": "400",
                      "letterSpacing": 0.4,
                      "lineHeight": 16,
                    },
                    {
                      "color": "rgba(103, 80, 164, 1)",
                    },
                  ],
                ]
              }
            >
              1x
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples attemptcard's typical matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "rgba(247, 243, 249, 1)",
          "borderRadius": 6,
          "margin": 10,
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.15,
          "shadowRadius": 3,
        }
      }
      testID="card-container-outer-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "rgba(247, 243, 249, 1)",
            "borderRadius": 6,
            "elevation": 1,
            "flex": undefined,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 1,
              "width": 0,
            },
            "shadowOpacity": 0.3,
            "shadowRadius": 1,
          }
        }
        testID="card-container"
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "flexShrink": 1,
              },
              undefined,
            ]
          }
          testID="card"
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingLeft": 16,
                },
                {
                  "minHeight": 72,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                [
                  {
                    "flex": 1,
                    "flexDirection": "column",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <Text
                numberOfLines={1}
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 16,
                        "fontWeight": "400",
                        "letterSpacing": 0.15,
                        "lineHeight": 24,
                      },
                      [
                        {
                          "minHeight": 30,
                          "paddingRight": 16,
                        },
                        {
                          "marginBottom": 0,
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
              >
                10.000
              </Text>
              <Text
                numberOfLines={1}
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "400",
                        "letterSpacing": 0.25,
                        "lineHeight": 20,
                      },
                      [
                        {
                          "marginVertical": 0,
                          "minHeight": 20,
                          "paddingRight": 16,
                        },
                        undefined,
                      ],
                    ],
                  ]
                }
              >
                9/20/2022, 8:37:46 PM
              </Text>
            </View>
            <View />
          </View>
          <View
            style={
              [
                {
                  "paddingHorizontal": 16,
                },
                {
                  "paddingBottom": 16,
                },
                undefined,
              ]
            }
          >
            <Text
              style={
                [
                  {
                    "textAlign": "left",
                  },
                  {
                    "color": "rgba(28, 27, 31, 1)",
                    "writingDirection": "ltr",
                  },
                  [
                    {
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 12,
                      "fontWeight": "400",
                      "letterSpacing": 0.4,
                      "lineHeight": 16,
                    },
                    undefined,
                  ],
                ]
              }
            >
              R U
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
</RNCSafeAreaProvider>
`;

exports[`Examples attemptdetails's dnf matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      style={{}}
    >
      <View>
        <View
          style={
            [
              {
                "marginVertical": 8,
              },
              undefined,
            ]
          }
          theme={
            {
              "animation": {
                "scale": 1,
              },
              "colors": {
                "backdrop": "rgba(50, 47, 55, 0.4)",
                "background": "rgba(255, 251, 254, 1)",
                "border": "rgba(121, 116, 126, 1)",
                "card": "rgb(243, 237, 246)",
                "elevation": {
                  "level0": "transparent",
                  "level1": "rgb(247, 243, 249)",
                  "level2": "rgb(243, 237, 246)",
                  "level3": "rgb(238, 232, 244)",
                  "level4": "rgb(236, 230, 243)",
                  "level5": "rgb(233, 227, 241)",
                },
                "error": "rgba(179, 38, 30, 1)",
                "errorContainer": "rgba(249, 222, 220, 1)",
                "inverseOnSurface": "rgba(244, 239, 244, 1)",
                "inversePrimary": "rgba(208, 188, 255, 1)",
                "inverseSurface": "rgba(49, 48, 51, 1)",
                "notification": "rgba(179, 38, 30, 1)",
                "onBackground": "rgba(28, 27, 31, 1)",
                "onError": "rgba(255, 255, 255, 1)",
                "onErrorContainer": "rgba(65, 14, 11, 1)",
                "onPrimary": "rgba(255, 255, 255, 1)",
                "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                "onSecondary": "rgba(255, 255, 255, 1)",
                "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                "onSurface": "rgba(28, 27, 31, 1)",
                "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                "onTertiary": "rgba(255, 255, 255, 1)",
                "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                "outline": "rgba(121, 116, 126, 1)",
                "outlineVariant": "rgba(202, 196, 208, 1)",
                "primary": "rgba(103, 80, 164, 1)",
                "primaryContainer": "rgba(234, 221, 255, 1)",
                "scrim": "rgba(0, 0, 0, 1)",
                "secondary": "#1B5E20",
                "secondaryContainer": "rgba(232, 222, 248, 1)",
                "shadow": "rgba(0, 0, 0, 1)",
                "surface": "rgba(255, 251, 254, 1)",
                "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                "surfaceVariant": "rgba(231, 224, 236, 1)",
                "tertiary": "rgba(125, 82, 96, 1)",
                "tertiaryContainer": "rgba(255, 216, 228, 1)",
                "text": "rgba(28, 27, 31, 1)",
              },
              "dark": false,
              "fonts": {
                "bodyLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "bodyMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "letterSpacing": 0.25,
                  "lineHeight": 20,
                },
                "bodySmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "400",
                  "letterSpacing": 0.4,
                  "lineHeight": 16,
                },
                "default": {
                  "fontFamily": "Rubik-Regular",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                },
                "displayLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 57,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 64,
                },
                "displayMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 45,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 52,
                },
                "displaySmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 36,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 44,
                },
                "headlineLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 32,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 40,
                },
                "headlineMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 28,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 36,
                },
                "headlineSmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 24,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 32,
                },
                "labelLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                "labelMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "labelSmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "titleLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 22,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 28,
                },
                "titleMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "titleSmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
              },
              "isV3": true,
              "roundness": 2,
              "version": 3,
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": true,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                false,
                [
                  {
                    "paddingRight": 24,
                    "paddingVertical": 8,
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                  "marginVertical": 6,
                  "width": "100%",
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  [
                    {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    {
                      "alignSelf": "center",
                      "marginLeft": 16,
                      "marginRight": 0,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      {
                        "fontFamily": "Entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "paddingLeft": 16,
                    },
                    {
                      "flex": 1,
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  selectable={false}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      {
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontSize": 16,
                        },
                        {
                          "color": "rgba(28, 27, 31, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  DNF
                </Text>
                <Text
                  numberOfLines={2}
                  onTextLayout={[Function]}
                  selectable={false}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      {
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontSize": 14,
                        },
                        {
                          "color": "rgba(73, 69, 79, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  9/20/2022, 8:37:46 PM
                </Text>
              </View>
            </View>
          </View>
          <View>
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": false,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    [
                      {
                        "paddingRight": 24,
                        "paddingVertical": 8,
                      },
                      {
                        "marginLeft": 10,
                      },
                    ],
                  ]
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    {
                      "flexDirection": "row",
                      "marginVertical": 6,
                    }
                  }
                >
                  <View
                    pointerEvents="box-none"
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        {
                          "alignSelf": "center",
                          "marginLeft": 16,
                          "marginRight": 0,
                          "marginVertical": 0,
                        },
                      ]
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          undefined,
                          {
                            "fontFamily": "WCAEvent",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      [
                        {
                          "paddingLeft": 16,
                        },
                        {
                          "flex": 1,
                          "justifyContent": "center",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={0}
                      selectable={false}
                      style={
                        [
                          {
                            "textAlign": "left",
                          },
                          {
                            "color": "rgba(28, 27, 31, 1)",
                            "fontFamily": "Rubik-Regular",
                            "fontWeight": "400",
                            "letterSpacing": 0,
                          },
                          {
                            "writingDirection": "ltr",
                          },
                          [
                            {
                              "fontSize": 16,
                            },
                            {
                              "color": "rgba(28, 27, 31, 1)",
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      R U R' U'
                    </Text>
                  </View>
                  <View
                    style={
                      [
                        {
                          "marginVertical": 6,
                          "paddingLeft": 8,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      selectable={false}
                      style={
                        [
                          {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          [
                            {
                              "lineHeight": 24,
                              "transform": [
                                {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            {
                              "backgroundColor": "transparent",
                            },
                          ],
                          {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      󰅀
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples attemptdetails's dns matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      style={{}}
    >
      <View>
        <View
          style={
            [
              {
                "marginVertical": 8,
              },
              undefined,
            ]
          }
          theme={
            {
              "animation": {
                "scale": 1,
              },
              "colors": {
                "backdrop": "rgba(50, 47, 55, 0.4)",
                "background": "rgba(255, 251, 254, 1)",
                "border": "rgba(121, 116, 126, 1)",
                "card": "rgb(243, 237, 246)",
                "elevation": {
                  "level0": "transparent",
                  "level1": "rgb(247, 243, 249)",
                  "level2": "rgb(243, 237, 246)",
                  "level3": "rgb(238, 232, 244)",
                  "level4": "rgb(236, 230, 243)",
                  "level5": "rgb(233, 227, 241)",
                },
                "error": "rgba(179, 38, 30, 1)",
                "errorContainer": "rgba(249, 222, 220, 1)",
                "inverseOnSurface": "rgba(244, 239, 244, 1)",
                "inversePrimary": "rgba(208, 188, 255, 1)",
                "inverseSurface": "rgba(49, 48, 51, 1)",
                "notification": "rgba(179, 38, 30, 1)",
                "onBackground": "rgba(28, 27, 31, 1)",
                "onError": "rgba(255, 255, 255, 1)",
                "onErrorContainer": "rgba(65, 14, 11, 1)",
                "onPrimary": "rgba(255, 255, 255, 1)",
                "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                "onSecondary": "rgba(255, 255, 255, 1)",
                "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                "onSurface": "rgba(28, 27, 31, 1)",
                "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                "onTertiary": "rgba(255, 255, 255, 1)",
                "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                "outline": "rgba(121, 116, 126, 1)",
                "outlineVariant": "rgba(202, 196, 208, 1)",
                "primary": "rgba(103, 80, 164, 1)",
                "primaryContainer": "rgba(234, 221, 255, 1)",
                "scrim": "rgba(0, 0, 0, 1)",
                "secondary": "#1B5E20",
                "secondaryContainer": "rgba(232, 222, 248, 1)",
                "shadow": "rgba(0, 0, 0, 1)",
                "surface": "rgba(255, 251, 254, 1)",
                "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                "surfaceVariant": "rgba(231, 224, 236, 1)",
                "tertiary": "rgba(125, 82, 96, 1)",
                "tertiaryContainer": "rgba(255, 216, 228, 1)",
                "text": "rgba(28, 27, 31, 1)",
              },
              "dark": false,
              "fonts": {
                "bodyLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "bodyMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "letterSpacing": 0.25,
                  "lineHeight": 20,
                },
                "bodySmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "400",
                  "letterSpacing": 0.4,
                  "lineHeight": 16,
                },
                "default": {
                  "fontFamily": "Rubik-Regular",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                },
                "displayLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 57,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 64,
                },
                "displayMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 45,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 52,
                },
                "displaySmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 36,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 44,
                },
                "headlineLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 32,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 40,
                },
                "headlineMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 28,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 36,
                },
                "headlineSmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 24,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 32,
                },
                "labelLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                "labelMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "labelSmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "titleLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 22,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 28,
                },
                "titleMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "titleSmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
              },
              "isV3": true,
              "roundness": 2,
              "version": 3,
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": true,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                false,
                [
                  {
                    "paddingRight": 24,
                    "paddingVertical": 8,
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                  "marginVertical": 6,
                  "width": "100%",
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  [
                    {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    {
                      "alignSelf": "center",
                      "marginLeft": 16,
                      "marginRight": 0,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      {
                        "fontFamily": "Entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "paddingLeft": 16,
                    },
                    {
                      "flex": 1,
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  selectable={false}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      {
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontSize": 16,
                        },
                        {
                          "color": "rgba(28, 27, 31, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  DNS
                </Text>
                <Text
                  numberOfLines={2}
                  onTextLayout={[Function]}
                  selectable={false}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      {
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontSize": 14,
                        },
                        {
                          "color": "rgba(73, 69, 79, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  9/20/2022, 8:37:46 PM
                </Text>
              </View>
            </View>
          </View>
          <View>
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": false,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    [
                      {
                        "paddingRight": 24,
                        "paddingVertical": 8,
                      },
                      {
                        "marginLeft": 10,
                      },
                    ],
                  ]
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    {
                      "flexDirection": "row",
                      "marginVertical": 6,
                    }
                  }
                >
                  <View
                    pointerEvents="box-none"
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        {
                          "alignSelf": "center",
                          "marginLeft": 16,
                          "marginRight": 0,
                          "marginVertical": 0,
                        },
                      ]
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          undefined,
                          {
                            "fontFamily": "WCAEvent",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      [
                        {
                          "paddingLeft": 16,
                        },
                        {
                          "flex": 1,
                          "justifyContent": "center",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={0}
                      selectable={false}
                      style={
                        [
                          {
                            "textAlign": "left",
                          },
                          {
                            "color": "rgba(28, 27, 31, 1)",
                            "fontFamily": "Rubik-Regular",
                            "fontWeight": "400",
                            "letterSpacing": 0,
                          },
                          {
                            "writingDirection": "ltr",
                          },
                          [
                            {
                              "fontSize": 16,
                            },
                            {
                              "color": "rgba(28, 27, 31, 1)",
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      R U R' U'
                    </Text>
                  </View>
                  <View
                    style={
                      [
                        {
                          "marginVertical": 6,
                          "paddingLeft": 8,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      selectable={false}
                      style={
                        [
                          {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          [
                            {
                              "lineHeight": 24,
                              "transform": [
                                {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            {
                              "backgroundColor": "transparent",
                            },
                          ],
                          {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      󰅀
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples attemptdetails's infractions matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      style={{}}
    >
      <View>
        <View
          style={
            [
              {
                "marginVertical": 8,
              },
              undefined,
            ]
          }
          theme={
            {
              "animation": {
                "scale": 1,
              },
              "colors": {
                "backdrop": "rgba(50, 47, 55, 0.4)",
                "background": "rgba(255, 251, 254, 1)",
                "border": "rgba(121, 116, 126, 1)",
                "card": "rgb(243, 237, 246)",
                "elevation": {
                  "level0": "transparent",
                  "level1": "rgb(247, 243, 249)",
                  "level2": "rgb(243, 237, 246)",
                  "level3": "rgb(238, 232, 244)",
                  "level4": "rgb(236, 230, 243)",
                  "level5": "rgb(233, 227, 241)",
                },
                "error": "rgba(179, 38, 30, 1)",
                "errorContainer": "rgba(249, 222, 220, 1)",
                "inverseOnSurface": "rgba(244, 239, 244, 1)",
                "inversePrimary": "rgba(208, 188, 255, 1)",
                "inverseSurface": "rgba(49, 48, 51, 1)",
                "notification": "rgba(179, 38, 30, 1)",
                "onBackground": "rgba(28, 27, 31, 1)",
                "onError": "rgba(255, 255, 255, 1)",
                "onErrorContainer": "rgba(65, 14, 11, 1)",
                "onPrimary": "rgba(255, 255, 255, 1)",
                "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                "onSecondary": "rgba(255, 255, 255, 1)",
                "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                "onSurface": "rgba(28, 27, 31, 1)",
                "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                "onTertiary": "rgba(255, 255, 255, 1)",
                "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                "outline": "rgba(121, 116, 126, 1)",
                "outlineVariant": "rgba(202, 196, 208, 1)",
                "primary": "rgba(103, 80, 164, 1)",
                "primaryContainer": "rgba(234, 221, 255, 1)",
                "scrim": "rgba(0, 0, 0, 1)",
                "secondary": "#1B5E20",
                "secondaryContainer": "rgba(232, 222, 248, 1)",
                "shadow": "rgba(0, 0, 0, 1)",
                "surface": "rgba(255, 251, 254, 1)",
                "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                "surfaceVariant": "rgba(231, 224, 236, 1)",
                "tertiary": "rgba(125, 82, 96, 1)",
                "tertiaryContainer": "rgba(255, 216, 228, 1)",
                "text": "rgba(28, 27, 31, 1)",
              },
              "dark": false,
              "fonts": {
                "bodyLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "bodyMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "letterSpacing": 0.25,
                  "lineHeight": 20,
                },
                "bodySmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "400",
                  "letterSpacing": 0.4,
                  "lineHeight": 16,
                },
                "default": {
                  "fontFamily": "Rubik-Regular",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                },
                "displayLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 57,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 64,
                },
                "displayMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 45,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 52,
                },
                "displaySmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 36,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 44,
                },
                "headlineLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 32,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 40,
                },
                "headlineMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 28,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 36,
                },
                "headlineSmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 24,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 32,
                },
                "labelLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                "labelMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "labelSmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "titleLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 22,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 28,
                },
                "titleMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "titleSmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
              },
              "isV3": true,
              "roundness": 2,
              "version": 3,
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": true,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                false,
                [
                  {
                    "paddingRight": 24,
                    "paddingVertical": 8,
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                  "marginVertical": 6,
                  "width": "100%",
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  [
                    {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    {
                      "alignSelf": "center",
                      "marginLeft": 16,
                      "marginRight": 0,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      {
                        "fontFamily": "Entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "paddingLeft": 16,
                    },
                    {
                      "flex": 1,
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  selectable={false}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      {
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontSize": 16,
                        },
                        {
                          "color": "rgba(28, 27, 31, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  12.000 (+2)
                </Text>
                <Text
                  numberOfLines={2}
                  onTextLayout={[Function]}
                  selectable={false}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      {
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontSize": 14,
                        },
                        {
                          "color": "rgba(73, 69, 79, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  9/20/2022, 8:37:46 PM
                </Text>
              </View>
            </View>
          </View>
          <View>
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": false,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    [
                      {
                        "paddingRight": 24,
                        "paddingVertical": 8,
                      },
                      {
                        "marginLeft": 10,
                      },
                    ],
                  ]
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    {
                      "flexDirection": "row",
                      "marginVertical": 6,
                    }
                  }
                >
                  <View
                    pointerEvents="box-none"
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        {
                          "alignSelf": "center",
                          "marginLeft": 16,
                          "marginRight": 0,
                          "marginVertical": 0,
                        },
                      ]
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          undefined,
                          {
                            "fontFamily": "WCAEvent",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      [
                        {
                          "paddingLeft": 16,
                        },
                        {
                          "flex": 1,
                          "justifyContent": "center",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={0}
                      selectable={false}
                      style={
                        [
                          {
                            "textAlign": "left",
                          },
                          {
                            "color": "rgba(28, 27, 31, 1)",
                            "fontFamily": "Rubik-Regular",
                            "fontWeight": "400",
                            "letterSpacing": 0,
                          },
                          {
                            "writingDirection": "ltr",
                          },
                          [
                            {
                              "fontSize": 16,
                            },
                            {
                              "color": "rgba(28, 27, 31, 1)",
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      R U R' U'
                    </Text>
                  </View>
                  <View
                    style={
                      [
                        {
                          "marginVertical": 6,
                          "paddingLeft": 8,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      selectable={false}
                      style={
                        [
                          {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          [
                            {
                              "lineHeight": 24,
                              "transform": [
                                {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            {
                              "backgroundColor": "transparent",
                            },
                          ],
                          {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      󰅀
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples attemptdetails's typical matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      style={{}}
    >
      <View>
        <View
          style={
            [
              {
                "marginVertical": 8,
              },
              undefined,
            ]
          }
          theme={
            {
              "animation": {
                "scale": 1,
              },
              "colors": {
                "backdrop": "rgba(50, 47, 55, 0.4)",
                "background": "rgba(255, 251, 254, 1)",
                "border": "rgba(121, 116, 126, 1)",
                "card": "rgb(243, 237, 246)",
                "elevation": {
                  "level0": "transparent",
                  "level1": "rgb(247, 243, 249)",
                  "level2": "rgb(243, 237, 246)",
                  "level3": "rgb(238, 232, 244)",
                  "level4": "rgb(236, 230, 243)",
                  "level5": "rgb(233, 227, 241)",
                },
                "error": "rgba(179, 38, 30, 1)",
                "errorContainer": "rgba(249, 222, 220, 1)",
                "inverseOnSurface": "rgba(244, 239, 244, 1)",
                "inversePrimary": "rgba(208, 188, 255, 1)",
                "inverseSurface": "rgba(49, 48, 51, 1)",
                "notification": "rgba(179, 38, 30, 1)",
                "onBackground": "rgba(28, 27, 31, 1)",
                "onError": "rgba(255, 255, 255, 1)",
                "onErrorContainer": "rgba(65, 14, 11, 1)",
                "onPrimary": "rgba(255, 255, 255, 1)",
                "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                "onSecondary": "rgba(255, 255, 255, 1)",
                "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                "onSurface": "rgba(28, 27, 31, 1)",
                "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                "onTertiary": "rgba(255, 255, 255, 1)",
                "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                "outline": "rgba(121, 116, 126, 1)",
                "outlineVariant": "rgba(202, 196, 208, 1)",
                "primary": "rgba(103, 80, 164, 1)",
                "primaryContainer": "rgba(234, 221, 255, 1)",
                "scrim": "rgba(0, 0, 0, 1)",
                "secondary": "#1B5E20",
                "secondaryContainer": "rgba(232, 222, 248, 1)",
                "shadow": "rgba(0, 0, 0, 1)",
                "surface": "rgba(255, 251, 254, 1)",
                "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                "surfaceVariant": "rgba(231, 224, 236, 1)",
                "tertiary": "rgba(125, 82, 96, 1)",
                "tertiaryContainer": "rgba(255, 216, 228, 1)",
                "text": "rgba(28, 27, 31, 1)",
              },
              "dark": false,
              "fonts": {
                "bodyLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "bodyMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "400",
                  "letterSpacing": 0.25,
                  "lineHeight": 20,
                },
                "bodySmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "400",
                  "letterSpacing": 0.4,
                  "lineHeight": 16,
                },
                "default": {
                  "fontFamily": "Rubik-Regular",
                  "fontWeight": "400",
                  "letterSpacing": 0,
                },
                "displayLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 57,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 64,
                },
                "displayMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 45,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 52,
                },
                "displaySmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 36,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 44,
                },
                "headlineLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 32,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 40,
                },
                "headlineMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 28,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 36,
                },
                "headlineSmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 24,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 32,
                },
                "labelLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
                "labelMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 12,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "labelSmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 11,
                  "fontWeight": "500",
                  "letterSpacing": 0.5,
                  "lineHeight": 16,
                },
                "titleLarge": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 22,
                  "fontWeight": "400",
                  "letterSpacing": 0,
                  "lineHeight": 28,
                },
                "titleMedium": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                "titleSmall": {
                  "fontFamily": "Rubik-Regular",
                  "fontSize": 14,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                },
              },
              "isV3": true,
              "roundness": 2,
              "version": 3,
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": true,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                false,
                [
                  {
                    "paddingRight": 24,
                    "paddingVertical": 8,
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                  "marginVertical": 6,
                  "width": "100%",
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  [
                    {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    {
                      "alignSelf": "center",
                      "marginLeft": 16,
                      "marginRight": 0,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      {
                        "fontFamily": "Entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "paddingLeft": 16,
                    },
                    {
                      "flex": 1,
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={1}
                  selectable={false}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      {
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontSize": 16,
                        },
                        {
                          "color": "rgba(28, 27, 31, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  10.000
                </Text>
                <Text
                  numberOfLines={2}
                  onTextLayout={[Function]}
                  selectable={false}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      {
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontSize": 14,
                        },
                        {
                          "color": "rgba(73, 69, 79, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  9/20/2022, 8:37:46 PM
                </Text>
              </View>
            </View>
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": true,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                false,
                [
                  {
                    "paddingRight": 24,
                    "paddingVertical": 8,
                  },
                  undefined,
                ],
              ]
            }
          >
            <View
              style={
                {
                  "flexDirection": "row",
                  "marginVertical": 6,
                  "width": "100%",
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  [
                    {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    {
                      "alignSelf": "center",
                      "marginLeft": 16,
                      "marginRight": 0,
                      "marginVertical": 0,
                    },
                  ]
                }
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
              </View>
              <View
                style={
                  [
                    {
                      "paddingLeft": 16,
                    },
                    {
                      "flex": 1,
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <Text
                  numberOfLines={0}
                  selectable={false}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                      },
                      {
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontSize": 16,
                        },
                        {
                          "color": "rgba(28, 27, 31, 1)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  What a neat solve!
                </Text>
              </View>
            </View>
          </View>
          <View>
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": false,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    [
                      {
                        "paddingRight": 24,
                        "paddingVertical": 8,
                      },
                      {
                        "marginLeft": 10,
                      },
                    ],
                  ]
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    {
                      "flexDirection": "row",
                      "marginVertical": 6,
                    }
                  }
                >
                  <View
                    pointerEvents="box-none"
                    style={
                      [
                        {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        {
                          "alignSelf": "center",
                          "marginLeft": 16,
                          "marginRight": 0,
                          "marginVertical": 0,
                        },
                      ]
                    }
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          undefined,
                          {
                            "fontFamily": "WCAEvent",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                  <View
                    style={
                      [
                        {
                          "paddingLeft": 16,
                        },
                        {
                          "flex": 1,
                          "justifyContent": "center",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={0}
                      selectable={false}
                      style={
                        [
                          {
                            "textAlign": "left",
                          },
                          {
                            "color": "rgba(28, 27, 31, 1)",
                            "fontFamily": "Rubik-Regular",
                            "fontWeight": "400",
                            "letterSpacing": 0,
                          },
                          {
                            "writingDirection": "ltr",
                          },
                          [
                            {
                              "fontSize": 16,
                            },
                            {
                              "color": "rgba(28, 27, 31, 1)",
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      R U
                    </Text>
                  </View>
                  <View
                    style={
                      [
                        {
                          "marginVertical": 6,
                          "paddingLeft": 8,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      selectable={false}
                      style={
                        [
                          {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          [
                            {
                              "lineHeight": 24,
                              "transform": [
                                {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            {
                              "backgroundColor": "transparent",
                            },
                          ],
                          {
                            "fontFamily": "Material Design Icons",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      󰅀
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples attemptdetailsmodal's dnf matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "transparent",
          "borderRadius": 10,
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
      testID="button-container-outer-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "transparent",
            "borderColor": "transparent",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 0,
            "flex": undefined,
            "minWidth": 64,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="button-container"
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "overflow": "hidden",
              },
              {
                "borderRadius": 10,
              },
            ]
          }
          testID="button"
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                [
                  {
                    "textAlign": "left",
                  },
                  {
                    "color": "rgba(28, 27, 31, 1)",
                    "writingDirection": "ltr",
                  },
                  [
                    {
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 14,
                      "fontWeight": "500",
                      "letterSpacing": 0.1,
                      "lineHeight": 20,
                    },
                    [
                      {
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      false,
                      {
                        "marginHorizontal": 12,
                      },
                      undefined,
                      false,
                      {
                        "color": "rgba(103, 80, 164, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      undefined,
                    ],
                  ],
                ]
              }
              testID="button-text"
            >
              Show Modal
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityLiveRegion="polite"
      accessibilityViewIsModal={true}
      collapsable={false}
      onAccessibilityEscape={[Function]}
      pointerEvents="auto"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="modal"
    >
      <View
        accessibilityLabel="Close modal"
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        importantForAccessibility="no"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "rgba(50, 47, 55, 0.4)",
            "flex": 1,
            "opacity": 1,
          }
        }
        testID="modal-backdrop"
      />
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "marginBottom": 0,
              "marginTop": 0,
            },
            undefined,
          ]
        }
        testID="modal-wrapper"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "rgba(255, 251, 254, 1)",
              "borderRadius": 10,
              "margin": 20,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.15,
              "shadowRadius": 3,
            }
          }
          testID="modal-surface-outer-layer"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "rgba(255, 251, 254, 1)",
                "borderRadius": 10,
                "flex": undefined,
                "justifyContent": "center",
                "maxHeight": 1067.2,
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 1,
              }
            }
            testID="modal-surface"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(243, 237, 246)",
                  "borderTopLeftRadius": 10,
                  "borderTopRightRadius": 10,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.15,
                  "shadowRadius": 6,
                }
              }
              testID="surface-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "rgb(243, 237, 246)",
                    "borderTopLeftRadius": 10,
                    "borderTopRightRadius": 10,
                    "flex": undefined,
                    "maxHeight": 160.08,
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 2,
                  }
                }
                testID="surface"
              >
                <Text
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "letterSpacing": 0.15,
                          "lineHeight": 24,
                        },
                        {
                          "padding": 10,
                        },
                      ],
                    ]
                  }
                >
                  dialogs.attempt_details
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "stretch",
                  "maxHeight": 907.12,
                }
              }
            >
              <View
                style={
                  {
                    "paddingBottom": 0,
                  }
                }
              >
                <RCTScrollView
                  style={{}}
                >
                  <View>
                    <View
                      style={
                        [
                          {
                            "marginVertical": 8,
                          },
                          undefined,
                        ]
                      }
                      theme={
                        {
                          "animation": {
                            "scale": 1,
                          },
                          "colors": {
                            "backdrop": "rgba(50, 47, 55, 0.4)",
                            "background": "rgba(255, 251, 254, 1)",
                            "border": "rgba(121, 116, 126, 1)",
                            "card": "rgb(243, 237, 246)",
                            "elevation": {
                              "level0": "transparent",
                              "level1": "rgb(247, 243, 249)",
                              "level2": "rgb(243, 237, 246)",
                              "level3": "rgb(238, 232, 244)",
                              "level4": "rgb(236, 230, 243)",
                              "level5": "rgb(233, 227, 241)",
                            },
                            "error": "rgba(179, 38, 30, 1)",
                            "errorContainer": "rgba(249, 222, 220, 1)",
                            "inverseOnSurface": "rgba(244, 239, 244, 1)",
                            "inversePrimary": "rgba(208, 188, 255, 1)",
                            "inverseSurface": "rgba(49, 48, 51, 1)",
                            "notification": "rgba(179, 38, 30, 1)",
                            "onBackground": "rgba(28, 27, 31, 1)",
                            "onError": "rgba(255, 255, 255, 1)",
                            "onErrorContainer": "rgba(65, 14, 11, 1)",
                            "onPrimary": "rgba(255, 255, 255, 1)",
                            "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                            "onSecondary": "rgba(255, 255, 255, 1)",
                            "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                            "onSurface": "rgba(28, 27, 31, 1)",
                            "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                            "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                            "onTertiary": "rgba(255, 255, 255, 1)",
                            "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                            "outline": "rgba(121, 116, 126, 1)",
                            "outlineVariant": "rgba(202, 196, 208, 1)",
                            "primary": "rgba(103, 80, 164, 1)",
                            "primaryContainer": "rgba(234, 221, 255, 1)",
                            "scrim": "rgba(0, 0, 0, 1)",
                            "secondary": "#1B5E20",
                            "secondaryContainer": "rgba(232, 222, 248, 1)",
                            "shadow": "rgba(0, 0, 0, 1)",
                            "surface": "rgba(255, 251, 254, 1)",
                            "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                            "surfaceVariant": "rgba(231, 224, 236, 1)",
                            "tertiary": "rgba(125, 82, 96, 1)",
                            "tertiaryContainer": "rgba(255, 216, 228, 1)",
                            "text": "rgba(28, 27, 31, 1)",
                          },
                          "dark": false,
                          "fonts": {
                            "bodyLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "letterSpacing": 0.15,
                              "lineHeight": 24,
                            },
                            "bodyMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 14,
                              "fontWeight": "400",
                              "letterSpacing": 0.25,
                              "lineHeight": 20,
                            },
                            "bodySmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 12,
                              "fontWeight": "400",
                              "letterSpacing": 0.4,
                              "lineHeight": 16,
                            },
                            "default": {
                              "fontFamily": "Rubik-Regular",
                              "fontWeight": "400",
                              "letterSpacing": 0,
                            },
                            "displayLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 57,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 64,
                            },
                            "displayMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 45,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 52,
                            },
                            "displaySmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 36,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 44,
                            },
                            "headlineLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 32,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 40,
                            },
                            "headlineMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 28,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 36,
                            },
                            "headlineSmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 24,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 32,
                            },
                            "labelLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 14,
                              "fontWeight": "500",
                              "letterSpacing": 0.1,
                              "lineHeight": 20,
                            },
                            "labelMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 12,
                              "fontWeight": "500",
                              "letterSpacing": 0.5,
                              "lineHeight": 16,
                            },
                            "labelSmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 11,
                              "fontWeight": "500",
                              "letterSpacing": 0.5,
                              "lineHeight": 16,
                            },
                            "titleLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 22,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 28,
                            },
                            "titleMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 16,
                              "fontWeight": "500",
                              "letterSpacing": 0.15,
                              "lineHeight": 24,
                            },
                            "titleSmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 14,
                              "fontWeight": "500",
                              "letterSpacing": 0.1,
                              "lineHeight": 20,
                            },
                          },
                          "isV3": true,
                          "roundness": 2,
                          "version": 3,
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": true,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          [
                            false,
                            [
                              {
                                "paddingRight": 24,
                                "paddingVertical": 8,
                              },
                              undefined,
                            ],
                          ]
                        }
                      >
                        <View
                          style={
                            {
                              "flexDirection": "row",
                              "marginVertical": 6,
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            pointerEvents="box-none"
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {
                                  "alignSelf": "center",
                                  "marginLeft": 16,
                                  "marginRight": 0,
                                },
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "rgba(73, 69, 79, 1)",
                                    "fontSize": 24,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "Entypo",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <View
                            style={
                              [
                                {
                                  "paddingLeft": 16,
                                },
                                {
                                  "flex": 1,
                                  "justifyContent": "center",
                                },
                              ]
                            }
                          >
                            <Text
                              numberOfLines={1}
                              selectable={false}
                              style={
                                [
                                  {
                                    "textAlign": "left",
                                  },
                                  {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontWeight": "400",
                                    "letterSpacing": 0,
                                  },
                                  {
                                    "writingDirection": "ltr",
                                  },
                                  [
                                    {
                                      "fontSize": 16,
                                    },
                                    {
                                      "color": "rgba(28, 27, 31, 1)",
                                    },
                                    undefined,
                                  ],
                                ]
                              }
                            >
                              DNF
                            </Text>
                            <Text
                              numberOfLines={2}
                              onTextLayout={[Function]}
                              selectable={false}
                              style={
                                [
                                  {
                                    "textAlign": "left",
                                  },
                                  {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontWeight": "400",
                                    "letterSpacing": 0,
                                  },
                                  {
                                    "writingDirection": "ltr",
                                  },
                                  [
                                    {
                                      "fontSize": 14,
                                    },
                                    {
                                      "color": "rgba(73, 69, 79, 1)",
                                    },
                                    undefined,
                                  ],
                                ]
                              }
                            >
                              9/20/2022, 8:37:46 PM
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View>
                        <View
                          style={
                            {
                              "backgroundColor": "rgba(255, 251, 254, 1)",
                            }
                          }
                        >
                          <View
                            accessibilityRole="button"
                            accessibilityState={
                              {
                                "busy": undefined,
                                "checked": undefined,
                                "disabled": false,
                                "expanded": false,
                                "selected": undefined,
                              }
                            }
                            accessibilityValue={
                              {
                                "max": undefined,
                                "min": undefined,
                                "now": undefined,
                                "text": undefined,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              [
                                {
                                  "overflow": "hidden",
                                },
                                [
                                  {
                                    "paddingRight": 24,
                                    "paddingVertical": 8,
                                  },
                                  {
                                    "marginLeft": 10,
                                  },
                                ],
                              ]
                            }
                          >
                            <View
                              pointerEvents="none"
                              style={
                                {
                                  "flexDirection": "row",
                                  "marginVertical": 6,
                                }
                              }
                            >
                              <View
                                pointerEvents="box-none"
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "justifyContent": "center",
                                    },
                                    {
                                      "alignSelf": "center",
                                      "marginLeft": 16,
                                      "marginRight": 0,
                                      "marginVertical": 0,
                                    },
                                  ]
                                }
                              >
                                <Text
                                  allowFontScaling={false}
                                  selectable={false}
                                  style={
                                    [
                                      {
                                        "color": "rgba(73, 69, 79, 1)",
                                        "fontSize": 24,
                                      },
                                      undefined,
                                      {
                                        "fontFamily": "WCAEvent",
                                        "fontStyle": "normal",
                                        "fontWeight": "normal",
                                      },
                                      {},
                                    ]
                                  }
                                >
                                  
                                </Text>
                              </View>
                              <View
                                style={
                                  [
                                    {
                                      "paddingLeft": 16,
                                    },
                                    {
                                      "flex": 1,
                                      "justifyContent": "center",
                                    },
                                  ]
                                }
                              >
                                <Text
                                  numberOfLines={0}
                                  selectable={false}
                                  style={
                                    [
                                      {
                                        "textAlign": "left",
                                      },
                                      {
                                        "color": "rgba(28, 27, 31, 1)",
                                        "fontFamily": "Rubik-Regular",
                                        "fontWeight": "400",
                                        "letterSpacing": 0,
                                      },
                                      {
                                        "writingDirection": "ltr",
                                      },
                                      [
                                        {
                                          "fontSize": 16,
                                        },
                                        {
                                          "color": "rgba(28, 27, 31, 1)",
                                        },
                                        undefined,
                                      ],
                                    ]
                                  }
                                >
                                  R U R' U'
                                </Text>
                              </View>
                              <View
                                style={
                                  [
                                    {
                                      "marginVertical": 6,
                                      "paddingLeft": 8,
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <Text
                                  accessibilityElementsHidden={true}
                                  allowFontScaling={false}
                                  importantForAccessibility="no-hide-descendants"
                                  pointerEvents="none"
                                  selectable={false}
                                  style={
                                    [
                                      {
                                        "color": "rgba(73, 69, 79, 1)",
                                        "fontSize": 24,
                                      },
                                      [
                                        {
                                          "lineHeight": 24,
                                          "transform": [
                                            {
                                              "scaleX": 1,
                                            },
                                          ],
                                        },
                                        {
                                          "backgroundColor": "transparent",
                                        },
                                      ],
                                      {
                                        "fontFamily": "Material Design Icons",
                                        "fontStyle": "normal",
                                        "fontWeight": "normal",
                                      },
                                      {},
                                    ]
                                  }
                                >
                                  󰅀
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "borderBottomLeftRadius": 10,
                    "borderBottomRightRadius": 10,
                    "height": 15,
                    "marginTop": -15,
                    "opacity": 0.25,
                  },
                  {
                    "backgroundColor": "rgba(255, 251, 254, 1)",
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples attemptdetailsmodal's dns matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "transparent",
          "borderRadius": 10,
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
      testID="button-container-outer-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "transparent",
            "borderColor": "transparent",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 0,
            "flex": undefined,
            "minWidth": 64,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="button-container"
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "overflow": "hidden",
              },
              {
                "borderRadius": 10,
              },
            ]
          }
          testID="button"
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                [
                  {
                    "textAlign": "left",
                  },
                  {
                    "color": "rgba(28, 27, 31, 1)",
                    "writingDirection": "ltr",
                  },
                  [
                    {
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 14,
                      "fontWeight": "500",
                      "letterSpacing": 0.1,
                      "lineHeight": 20,
                    },
                    [
                      {
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      false,
                      {
                        "marginHorizontal": 12,
                      },
                      undefined,
                      false,
                      {
                        "color": "rgba(103, 80, 164, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      undefined,
                    ],
                  ],
                ]
              }
              testID="button-text"
            >
              Show Modal
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityLiveRegion="polite"
      accessibilityViewIsModal={true}
      collapsable={false}
      onAccessibilityEscape={[Function]}
      pointerEvents="auto"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="modal"
    >
      <View
        accessibilityLabel="Close modal"
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        importantForAccessibility="no"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "rgba(50, 47, 55, 0.4)",
            "flex": 1,
            "opacity": 1,
          }
        }
        testID="modal-backdrop"
      />
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "marginBottom": 0,
              "marginTop": 0,
            },
            undefined,
          ]
        }
        testID="modal-wrapper"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "rgba(255, 251, 254, 1)",
              "borderRadius": 10,
              "margin": 20,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.15,
              "shadowRadius": 3,
            }
          }
          testID="modal-surface-outer-layer"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "rgba(255, 251, 254, 1)",
                "borderRadius": 10,
                "flex": undefined,
                "justifyContent": "center",
                "maxHeight": 1067.2,
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 1,
              }
            }
            testID="modal-surface"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(243, 237, 246)",
                  "borderTopLeftRadius": 10,
                  "borderTopRightRadius": 10,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.15,
                  "shadowRadius": 6,
                }
              }
              testID="surface-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "rgb(243, 237, 246)",
                    "borderTopLeftRadius": 10,
                    "borderTopRightRadius": 10,
                    "flex": undefined,
                    "maxHeight": 160.08,
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 2,
                  }
                }
                testID="surface"
              >
                <Text
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "letterSpacing": 0.15,
                          "lineHeight": 24,
                        },
                        {
                          "padding": 10,
                        },
                      ],
                    ]
                  }
                >
                  dialogs.attempt_details
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "stretch",
                  "maxHeight": 907.12,
                }
              }
            >
              <View
                style={
                  {
                    "paddingBottom": 0,
                  }
                }
              >
                <RCTScrollView
                  style={{}}
                >
                  <View>
                    <View
                      style={
                        [
                          {
                            "marginVertical": 8,
                          },
                          undefined,
                        ]
                      }
                      theme={
                        {
                          "animation": {
                            "scale": 1,
                          },
                          "colors": {
                            "backdrop": "rgba(50, 47, 55, 0.4)",
                            "background": "rgba(255, 251, 254, 1)",
                            "border": "rgba(121, 116, 126, 1)",
                            "card": "rgb(243, 237, 246)",
                            "elevation": {
                              "level0": "transparent",
                              "level1": "rgb(247, 243, 249)",
                              "level2": "rgb(243, 237, 246)",
                              "level3": "rgb(238, 232, 244)",
                              "level4": "rgb(236, 230, 243)",
                              "level5": "rgb(233, 227, 241)",
                            },
                            "error": "rgba(179, 38, 30, 1)",
                            "errorContainer": "rgba(249, 222, 220, 1)",
                            "inverseOnSurface": "rgba(244, 239, 244, 1)",
                            "inversePrimary": "rgba(208, 188, 255, 1)",
                            "inverseSurface": "rgba(49, 48, 51, 1)",
                            "notification": "rgba(179, 38, 30, 1)",
                            "onBackground": "rgba(28, 27, 31, 1)",
                            "onError": "rgba(255, 255, 255, 1)",
                            "onErrorContainer": "rgba(65, 14, 11, 1)",
                            "onPrimary": "rgba(255, 255, 255, 1)",
                            "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                            "onSecondary": "rgba(255, 255, 255, 1)",
                            "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                            "onSurface": "rgba(28, 27, 31, 1)",
                            "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                            "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                            "onTertiary": "rgba(255, 255, 255, 1)",
                            "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                            "outline": "rgba(121, 116, 126, 1)",
                            "outlineVariant": "rgba(202, 196, 208, 1)",
                            "primary": "rgba(103, 80, 164, 1)",
                            "primaryContainer": "rgba(234, 221, 255, 1)",
                            "scrim": "rgba(0, 0, 0, 1)",
                            "secondary": "#1B5E20",
                            "secondaryContainer": "rgba(232, 222, 248, 1)",
                            "shadow": "rgba(0, 0, 0, 1)",
                            "surface": "rgba(255, 251, 254, 1)",
                            "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                            "surfaceVariant": "rgba(231, 224, 236, 1)",
                            "tertiary": "rgba(125, 82, 96, 1)",
                            "tertiaryContainer": "rgba(255, 216, 228, 1)",
                            "text": "rgba(28, 27, 31, 1)",
                          },
                          "dark": false,
                          "fonts": {
                            "bodyLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "letterSpacing": 0.15,
                              "lineHeight": 24,
                            },
                            "bodyMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 14,
                              "fontWeight": "400",
                              "letterSpacing": 0.25,
                              "lineHeight": 20,
                            },
                            "bodySmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 12,
                              "fontWeight": "400",
                              "letterSpacing": 0.4,
                              "lineHeight": 16,
                            },
                            "default": {
                              "fontFamily": "Rubik-Regular",
                              "fontWeight": "400",
                              "letterSpacing": 0,
                            },
                            "displayLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 57,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 64,
                            },
                            "displayMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 45,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 52,
                            },
                            "displaySmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 36,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 44,
                            },
                            "headlineLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 32,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 40,
                            },
                            "headlineMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 28,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 36,
                            },
                            "headlineSmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 24,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 32,
                            },
                            "labelLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 14,
                              "fontWeight": "500",
                              "letterSpacing": 0.1,
                              "lineHeight": 20,
                            },
                            "labelMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 12,
                              "fontWeight": "500",
                              "letterSpacing": 0.5,
                              "lineHeight": 16,
                            },
                            "labelSmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 11,
                              "fontWeight": "500",
                              "letterSpacing": 0.5,
                              "lineHeight": 16,
                            },
                            "titleLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 22,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 28,
                            },
                            "titleMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 16,
                              "fontWeight": "500",
                              "letterSpacing": 0.15,
                              "lineHeight": 24,
                            },
                            "titleSmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 14,
                              "fontWeight": "500",
                              "letterSpacing": 0.1,
                              "lineHeight": 20,
                            },
                          },
                          "isV3": true,
                          "roundness": 2,
                          "version": 3,
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": true,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          [
                            false,
                            [
                              {
                                "paddingRight": 24,
                                "paddingVertical": 8,
                              },
                              undefined,
                            ],
                          ]
                        }
                      >
                        <View
                          style={
                            {
                              "flexDirection": "row",
                              "marginVertical": 6,
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            pointerEvents="box-none"
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {
                                  "alignSelf": "center",
                                  "marginLeft": 16,
                                  "marginRight": 0,
                                },
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "rgba(73, 69, 79, 1)",
                                    "fontSize": 24,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "Entypo",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <View
                            style={
                              [
                                {
                                  "paddingLeft": 16,
                                },
                                {
                                  "flex": 1,
                                  "justifyContent": "center",
                                },
                              ]
                            }
                          >
                            <Text
                              numberOfLines={1}
                              selectable={false}
                              style={
                                [
                                  {
                                    "textAlign": "left",
                                  },
                                  {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontWeight": "400",
                                    "letterSpacing": 0,
                                  },
                                  {
                                    "writingDirection": "ltr",
                                  },
                                  [
                                    {
                                      "fontSize": 16,
                                    },
                                    {
                                      "color": "rgba(28, 27, 31, 1)",
                                    },
                                    undefined,
                                  ],
                                ]
                              }
                            >
                              DNS
                            </Text>
                            <Text
                              numberOfLines={2}
                              onTextLayout={[Function]}
                              selectable={false}
                              style={
                                [
                                  {
                                    "textAlign": "left",
                                  },
                                  {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontWeight": "400",
                                    "letterSpacing": 0,
                                  },
                                  {
                                    "writingDirection": "ltr",
                                  },
                                  [
                                    {
                                      "fontSize": 14,
                                    },
                                    {
                                      "color": "rgba(73, 69, 79, 1)",
                                    },
                                    undefined,
                                  ],
                                ]
                              }
                            >
                              9/20/2022, 8:37:46 PM
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View>
                        <View
                          style={
                            {
                              "backgroundColor": "rgba(255, 251, 254, 1)",
                            }
                          }
                        >
                          <View
                            accessibilityRole="button"
                            accessibilityState={
                              {
                                "busy": undefined,
                                "checked": undefined,
                                "disabled": false,
                                "expanded": false,
                                "selected": undefined,
                              }
                            }
                            accessibilityValue={
                              {
                                "max": undefined,
                                "min": undefined,
                                "now": undefined,
                                "text": undefined,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              [
                                {
                                  "overflow": "hidden",
                                },
                                [
                                  {
                                    "paddingRight": 24,
                                    "paddingVertical": 8,
                                  },
                                  {
                                    "marginLeft": 10,
                                  },
                                ],
                              ]
                            }
                          >
                            <View
                              pointerEvents="none"
                              style={
                                {
                                  "flexDirection": "row",
                                  "marginVertical": 6,
                                }
                              }
                            >
                              <View
                                pointerEvents="box-none"
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "justifyContent": "center",
                                    },
                                    {
                                      "alignSelf": "center",
                                      "marginLeft": 16,
                                      "marginRight": 0,
                                      "marginVertical": 0,
                                    },
                                  ]
                                }
                              >
                                <Text
                                  allowFontScaling={false}
                                  selectable={false}
                                  style={
                                    [
                                      {
                                        "color": "rgba(73, 69, 79, 1)",
                                        "fontSize": 24,
                                      },
                                      undefined,
                                      {
                                        "fontFamily": "WCAEvent",
                                        "fontStyle": "normal",
                                        "fontWeight": "normal",
                                      },
                                      {},
                                    ]
                                  }
                                >
                                  
                                </Text>
                              </View>
                              <View
                                style={
                                  [
                                    {
                                      "paddingLeft": 16,
                                    },
                                    {
                                      "flex": 1,
                                      "justifyContent": "center",
                                    },
                                  ]
                                }
                              >
                                <Text
                                  numberOfLines={0}
                                  selectable={false}
                                  style={
                                    [
                                      {
                                        "textAlign": "left",
                                      },
                                      {
                                        "color": "rgba(28, 27, 31, 1)",
                                        "fontFamily": "Rubik-Regular",
                                        "fontWeight": "400",
                                        "letterSpacing": 0,
                                      },
                                      {
                                        "writingDirection": "ltr",
                                      },
                                      [
                                        {
                                          "fontSize": 16,
                                        },
                                        {
                                          "color": "rgba(28, 27, 31, 1)",
                                        },
                                        undefined,
                                      ],
                                    ]
                                  }
                                >
                                  R U R' U'
                                </Text>
                              </View>
                              <View
                                style={
                                  [
                                    {
                                      "marginVertical": 6,
                                      "paddingLeft": 8,
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <Text
                                  accessibilityElementsHidden={true}
                                  allowFontScaling={false}
                                  importantForAccessibility="no-hide-descendants"
                                  pointerEvents="none"
                                  selectable={false}
                                  style={
                                    [
                                      {
                                        "color": "rgba(73, 69, 79, 1)",
                                        "fontSize": 24,
                                      },
                                      [
                                        {
                                          "lineHeight": 24,
                                          "transform": [
                                            {
                                              "scaleX": 1,
                                            },
                                          ],
                                        },
                                        {
                                          "backgroundColor": "transparent",
                                        },
                                      ],
                                      {
                                        "fontFamily": "Material Design Icons",
                                        "fontStyle": "normal",
                                        "fontWeight": "normal",
                                      },
                                      {},
                                    ]
                                  }
                                >
                                  󰅀
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "borderBottomLeftRadius": 10,
                    "borderBottomRightRadius": 10,
                    "height": 15,
                    "marginTop": -15,
                    "opacity": 0.25,
                  },
                  {
                    "backgroundColor": "rgba(255, 251, 254, 1)",
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples attemptdetailsmodal's infractions matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "transparent",
          "borderRadius": 10,
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
      testID="button-container-outer-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "transparent",
            "borderColor": "transparent",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 0,
            "flex": undefined,
            "minWidth": 64,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="button-container"
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "overflow": "hidden",
              },
              {
                "borderRadius": 10,
              },
            ]
          }
          testID="button"
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                [
                  {
                    "textAlign": "left",
                  },
                  {
                    "color": "rgba(28, 27, 31, 1)",
                    "writingDirection": "ltr",
                  },
                  [
                    {
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 14,
                      "fontWeight": "500",
                      "letterSpacing": 0.1,
                      "lineHeight": 20,
                    },
                    [
                      {
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      false,
                      {
                        "marginHorizontal": 12,
                      },
                      undefined,
                      false,
                      {
                        "color": "rgba(103, 80, 164, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      undefined,
                    ],
                  ],
                ]
              }
              testID="button-text"
            >
              Show Modal
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityLiveRegion="polite"
      accessibilityViewIsModal={true}
      collapsable={false}
      onAccessibilityEscape={[Function]}
      pointerEvents="auto"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="modal"
    >
      <View
        accessibilityLabel="Close modal"
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        importantForAccessibility="no"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "rgba(50, 47, 55, 0.4)",
            "flex": 1,
            "opacity": 1,
          }
        }
        testID="modal-backdrop"
      />
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "marginBottom": 0,
              "marginTop": 0,
            },
            undefined,
          ]
        }
        testID="modal-wrapper"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "rgba(255, 251, 254, 1)",
              "borderRadius": 10,
              "margin": 20,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.15,
              "shadowRadius": 3,
            }
          }
          testID="modal-surface-outer-layer"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "rgba(255, 251, 254, 1)",
                "borderRadius": 10,
                "flex": undefined,
                "justifyContent": "center",
                "maxHeight": 1067.2,
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 1,
              }
            }
            testID="modal-surface"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(243, 237, 246)",
                  "borderTopLeftRadius": 10,
                  "borderTopRightRadius": 10,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.15,
                  "shadowRadius": 6,
                }
              }
              testID="surface-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "rgb(243, 237, 246)",
                    "borderTopLeftRadius": 10,
                    "borderTopRightRadius": 10,
                    "flex": undefined,
                    "maxHeight": 160.08,
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 2,
                  }
                }
                testID="surface"
              >
                <Text
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "letterSpacing": 0.15,
                          "lineHeight": 24,
                        },
                        {
                          "padding": 10,
                        },
                      ],
                    ]
                  }
                >
                  dialogs.attempt_details
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "stretch",
                  "maxHeight": 907.12,
                }
              }
            >
              <View
                style={
                  {
                    "paddingBottom": 0,
                  }
                }
              >
                <RCTScrollView
                  style={{}}
                >
                  <View>
                    <View
                      style={
                        [
                          {
                            "marginVertical": 8,
                          },
                          undefined,
                        ]
                      }
                      theme={
                        {
                          "animation": {
                            "scale": 1,
                          },
                          "colors": {
                            "backdrop": "rgba(50, 47, 55, 0.4)",
                            "background": "rgba(255, 251, 254, 1)",
                            "border": "rgba(121, 116, 126, 1)",
                            "card": "rgb(243, 237, 246)",
                            "elevation": {
                              "level0": "transparent",
                              "level1": "rgb(247, 243, 249)",
                              "level2": "rgb(243, 237, 246)",
                              "level3": "rgb(238, 232, 244)",
                              "level4": "rgb(236, 230, 243)",
                              "level5": "rgb(233, 227, 241)",
                            },
                            "error": "rgba(179, 38, 30, 1)",
                            "errorContainer": "rgba(249, 222, 220, 1)",
                            "inverseOnSurface": "rgba(244, 239, 244, 1)",
                            "inversePrimary": "rgba(208, 188, 255, 1)",
                            "inverseSurface": "rgba(49, 48, 51, 1)",
                            "notification": "rgba(179, 38, 30, 1)",
                            "onBackground": "rgba(28, 27, 31, 1)",
                            "onError": "rgba(255, 255, 255, 1)",
                            "onErrorContainer": "rgba(65, 14, 11, 1)",
                            "onPrimary": "rgba(255, 255, 255, 1)",
                            "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                            "onSecondary": "rgba(255, 255, 255, 1)",
                            "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                            "onSurface": "rgba(28, 27, 31, 1)",
                            "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                            "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                            "onTertiary": "rgba(255, 255, 255, 1)",
                            "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                            "outline": "rgba(121, 116, 126, 1)",
                            "outlineVariant": "rgba(202, 196, 208, 1)",
                            "primary": "rgba(103, 80, 164, 1)",
                            "primaryContainer": "rgba(234, 221, 255, 1)",
                            "scrim": "rgba(0, 0, 0, 1)",
                            "secondary": "#1B5E20",
                            "secondaryContainer": "rgba(232, 222, 248, 1)",
                            "shadow": "rgba(0, 0, 0, 1)",
                            "surface": "rgba(255, 251, 254, 1)",
                            "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                            "surfaceVariant": "rgba(231, 224, 236, 1)",
                            "tertiary": "rgba(125, 82, 96, 1)",
                            "tertiaryContainer": "rgba(255, 216, 228, 1)",
                            "text": "rgba(28, 27, 31, 1)",
                          },
                          "dark": false,
                          "fonts": {
                            "bodyLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "letterSpacing": 0.15,
                              "lineHeight": 24,
                            },
                            "bodyMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 14,
                              "fontWeight": "400",
                              "letterSpacing": 0.25,
                              "lineHeight": 20,
                            },
                            "bodySmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 12,
                              "fontWeight": "400",
                              "letterSpacing": 0.4,
                              "lineHeight": 16,
                            },
                            "default": {
                              "fontFamily": "Rubik-Regular",
                              "fontWeight": "400",
                              "letterSpacing": 0,
                            },
                            "displayLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 57,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 64,
                            },
                            "displayMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 45,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 52,
                            },
                            "displaySmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 36,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 44,
                            },
                            "headlineLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 32,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 40,
                            },
                            "headlineMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 28,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 36,
                            },
                            "headlineSmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 24,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 32,
                            },
                            "labelLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 14,
                              "fontWeight": "500",
                              "letterSpacing": 0.1,
                              "lineHeight": 20,
                            },
                            "labelMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 12,
                              "fontWeight": "500",
                              "letterSpacing": 0.5,
                              "lineHeight": 16,
                            },
                            "labelSmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 11,
                              "fontWeight": "500",
                              "letterSpacing": 0.5,
                              "lineHeight": 16,
                            },
                            "titleLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 22,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 28,
                            },
                            "titleMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 16,
                              "fontWeight": "500",
                              "letterSpacing": 0.15,
                              "lineHeight": 24,
                            },
                            "titleSmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 14,
                              "fontWeight": "500",
                              "letterSpacing": 0.1,
                              "lineHeight": 20,
                            },
                          },
                          "isV3": true,
                          "roundness": 2,
                          "version": 3,
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": true,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          [
                            false,
                            [
                              {
                                "paddingRight": 24,
                                "paddingVertical": 8,
                              },
                              undefined,
                            ],
                          ]
                        }
                      >
                        <View
                          style={
                            {
                              "flexDirection": "row",
                              "marginVertical": 6,
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            pointerEvents="box-none"
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {
                                  "alignSelf": "center",
                                  "marginLeft": 16,
                                  "marginRight": 0,
                                },
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "rgba(73, 69, 79, 1)",
                                    "fontSize": 24,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "Entypo",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <View
                            style={
                              [
                                {
                                  "paddingLeft": 16,
                                },
                                {
                                  "flex": 1,
                                  "justifyContent": "center",
                                },
                              ]
                            }
                          >
                            <Text
                              numberOfLines={1}
                              selectable={false}
                              style={
                                [
                                  {
                                    "textAlign": "left",
                                  },
                                  {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontWeight": "400",
                                    "letterSpacing": 0,
                                  },
                                  {
                                    "writingDirection": "ltr",
                                  },
                                  [
                                    {
                                      "fontSize": 16,
                                    },
                                    {
                                      "color": "rgba(28, 27, 31, 1)",
                                    },
                                    undefined,
                                  ],
                                ]
                              }
                            >
                              12.000 (+2)
                            </Text>
                            <Text
                              numberOfLines={2}
                              onTextLayout={[Function]}
                              selectable={false}
                              style={
                                [
                                  {
                                    "textAlign": "left",
                                  },
                                  {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontWeight": "400",
                                    "letterSpacing": 0,
                                  },
                                  {
                                    "writingDirection": "ltr",
                                  },
                                  [
                                    {
                                      "fontSize": 14,
                                    },
                                    {
                                      "color": "rgba(73, 69, 79, 1)",
                                    },
                                    undefined,
                                  ],
                                ]
                              }
                            >
                              9/20/2022, 8:37:46 PM
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View>
                        <View
                          style={
                            {
                              "backgroundColor": "rgba(255, 251, 254, 1)",
                            }
                          }
                        >
                          <View
                            accessibilityRole="button"
                            accessibilityState={
                              {
                                "busy": undefined,
                                "checked": undefined,
                                "disabled": false,
                                "expanded": false,
                                "selected": undefined,
                              }
                            }
                            accessibilityValue={
                              {
                                "max": undefined,
                                "min": undefined,
                                "now": undefined,
                                "text": undefined,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              [
                                {
                                  "overflow": "hidden",
                                },
                                [
                                  {
                                    "paddingRight": 24,
                                    "paddingVertical": 8,
                                  },
                                  {
                                    "marginLeft": 10,
                                  },
                                ],
                              ]
                            }
                          >
                            <View
                              pointerEvents="none"
                              style={
                                {
                                  "flexDirection": "row",
                                  "marginVertical": 6,
                                }
                              }
                            >
                              <View
                                pointerEvents="box-none"
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "justifyContent": "center",
                                    },
                                    {
                                      "alignSelf": "center",
                                      "marginLeft": 16,
                                      "marginRight": 0,
                                      "marginVertical": 0,
                                    },
                                  ]
                                }
                              >
                                <Text
                                  allowFontScaling={false}
                                  selectable={false}
                                  style={
                                    [
                                      {
                                        "color": "rgba(73, 69, 79, 1)",
                                        "fontSize": 24,
                                      },
                                      undefined,
                                      {
                                        "fontFamily": "WCAEvent",
                                        "fontStyle": "normal",
                                        "fontWeight": "normal",
                                      },
                                      {},
                                    ]
                                  }
                                >
                                  
                                </Text>
                              </View>
                              <View
                                style={
                                  [
                                    {
                                      "paddingLeft": 16,
                                    },
                                    {
                                      "flex": 1,
                                      "justifyContent": "center",
                                    },
                                  ]
                                }
                              >
                                <Text
                                  numberOfLines={0}
                                  selectable={false}
                                  style={
                                    [
                                      {
                                        "textAlign": "left",
                                      },
                                      {
                                        "color": "rgba(28, 27, 31, 1)",
                                        "fontFamily": "Rubik-Regular",
                                        "fontWeight": "400",
                                        "letterSpacing": 0,
                                      },
                                      {
                                        "writingDirection": "ltr",
                                      },
                                      [
                                        {
                                          "fontSize": 16,
                                        },
                                        {
                                          "color": "rgba(28, 27, 31, 1)",
                                        },
                                        undefined,
                                      ],
                                    ]
                                  }
                                >
                                  R U R' U'
                                </Text>
                              </View>
                              <View
                                style={
                                  [
                                    {
                                      "marginVertical": 6,
                                      "paddingLeft": 8,
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <Text
                                  accessibilityElementsHidden={true}
                                  allowFontScaling={false}
                                  importantForAccessibility="no-hide-descendants"
                                  pointerEvents="none"
                                  selectable={false}
                                  style={
                                    [
                                      {
                                        "color": "rgba(73, 69, 79, 1)",
                                        "fontSize": 24,
                                      },
                                      [
                                        {
                                          "lineHeight": 24,
                                          "transform": [
                                            {
                                              "scaleX": 1,
                                            },
                                          ],
                                        },
                                        {
                                          "backgroundColor": "transparent",
                                        },
                                      ],
                                      {
                                        "fontFamily": "Material Design Icons",
                                        "fontStyle": "normal",
                                        "fontWeight": "normal",
                                      },
                                      {},
                                    ]
                                  }
                                >
                                  󰅀
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "borderBottomLeftRadius": 10,
                    "borderBottomRightRadius": 10,
                    "height": 15,
                    "marginTop": -15,
                    "opacity": 0.25,
                  },
                  {
                    "backgroundColor": "rgba(255, 251, 254, 1)",
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples attemptdetailsmodal's typical matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "transparent",
          "borderRadius": 10,
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
      testID="button-container-outer-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "transparent",
            "borderColor": "transparent",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 0,
            "flex": undefined,
            "minWidth": 64,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="button-container"
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "overflow": "hidden",
              },
              {
                "borderRadius": 10,
              },
            ]
          }
          testID="button"
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                [
                  {
                    "textAlign": "left",
                  },
                  {
                    "color": "rgba(28, 27, 31, 1)",
                    "writingDirection": "ltr",
                  },
                  [
                    {
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 14,
                      "fontWeight": "500",
                      "letterSpacing": 0.1,
                      "lineHeight": 20,
                    },
                    [
                      {
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      false,
                      {
                        "marginHorizontal": 12,
                      },
                      undefined,
                      false,
                      {
                        "color": "rgba(103, 80, 164, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      undefined,
                    ],
                  ],
                ]
              }
              testID="button-text"
            >
              Show Modal
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityLiveRegion="polite"
      accessibilityViewIsModal={true}
      collapsable={false}
      onAccessibilityEscape={[Function]}
      pointerEvents="auto"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="modal"
    >
      <View
        accessibilityLabel="Close modal"
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        importantForAccessibility="no"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "rgba(50, 47, 55, 0.4)",
            "flex": 1,
            "opacity": 1,
          }
        }
        testID="modal-backdrop"
      />
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "marginBottom": 0,
              "marginTop": 0,
            },
            undefined,
          ]
        }
        testID="modal-wrapper"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "rgba(255, 251, 254, 1)",
              "borderRadius": 10,
              "margin": 20,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.15,
              "shadowRadius": 3,
            }
          }
          testID="modal-surface-outer-layer"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "rgba(255, 251, 254, 1)",
                "borderRadius": 10,
                "flex": undefined,
                "justifyContent": "center",
                "maxHeight": 1067.2,
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 1,
              }
            }
            testID="modal-surface"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(243, 237, 246)",
                  "borderTopLeftRadius": 10,
                  "borderTopRightRadius": 10,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.15,
                  "shadowRadius": 6,
                }
              }
              testID="surface-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "rgb(243, 237, 246)",
                    "borderTopLeftRadius": 10,
                    "borderTopRightRadius": 10,
                    "flex": undefined,
                    "maxHeight": 160.08,
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 2,
                  }
                }
                testID="surface"
              >
                <Text
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "letterSpacing": 0.15,
                          "lineHeight": 24,
                        },
                        {
                          "padding": 10,
                        },
                      ],
                    ]
                  }
                >
                  dialogs.attempt_details
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "stretch",
                  "maxHeight": 907.12,
                }
              }
            >
              <View
                style={
                  {
                    "paddingBottom": 0,
                  }
                }
              >
                <RCTScrollView
                  style={{}}
                >
                  <View>
                    <View
                      style={
                        [
                          {
                            "marginVertical": 8,
                          },
                          undefined,
                        ]
                      }
                      theme={
                        {
                          "animation": {
                            "scale": 1,
                          },
                          "colors": {
                            "backdrop": "rgba(50, 47, 55, 0.4)",
                            "background": "rgba(255, 251, 254, 1)",
                            "border": "rgba(121, 116, 126, 1)",
                            "card": "rgb(243, 237, 246)",
                            "elevation": {
                              "level0": "transparent",
                              "level1": "rgb(247, 243, 249)",
                              "level2": "rgb(243, 237, 246)",
                              "level3": "rgb(238, 232, 244)",
                              "level4": "rgb(236, 230, 243)",
                              "level5": "rgb(233, 227, 241)",
                            },
                            "error": "rgba(179, 38, 30, 1)",
                            "errorContainer": "rgba(249, 222, 220, 1)",
                            "inverseOnSurface": "rgba(244, 239, 244, 1)",
                            "inversePrimary": "rgba(208, 188, 255, 1)",
                            "inverseSurface": "rgba(49, 48, 51, 1)",
                            "notification": "rgba(179, 38, 30, 1)",
                            "onBackground": "rgba(28, 27, 31, 1)",
                            "onError": "rgba(255, 255, 255, 1)",
                            "onErrorContainer": "rgba(65, 14, 11, 1)",
                            "onPrimary": "rgba(255, 255, 255, 1)",
                            "onPrimaryContainer": "rgba(33, 0, 93, 1)",
                            "onSecondary": "rgba(255, 255, 255, 1)",
                            "onSecondaryContainer": "rgba(29, 25, 43, 1)",
                            "onSurface": "rgba(28, 27, 31, 1)",
                            "onSurfaceDisabled": "rgba(28, 27, 31, 0.38)",
                            "onSurfaceVariant": "rgba(73, 69, 79, 1)",
                            "onTertiary": "rgba(255, 255, 255, 1)",
                            "onTertiaryContainer": "rgba(49, 17, 29, 1)",
                            "outline": "rgba(121, 116, 126, 1)",
                            "outlineVariant": "rgba(202, 196, 208, 1)",
                            "primary": "rgba(103, 80, 164, 1)",
                            "primaryContainer": "rgba(234, 221, 255, 1)",
                            "scrim": "rgba(0, 0, 0, 1)",
                            "secondary": "#1B5E20",
                            "secondaryContainer": "rgba(232, 222, 248, 1)",
                            "shadow": "rgba(0, 0, 0, 1)",
                            "surface": "rgba(255, 251, 254, 1)",
                            "surfaceDisabled": "rgba(28, 27, 31, 0.12)",
                            "surfaceVariant": "rgba(231, 224, 236, 1)",
                            "tertiary": "rgba(125, 82, 96, 1)",
                            "tertiaryContainer": "rgba(255, 216, 228, 1)",
                            "text": "rgba(28, 27, 31, 1)",
                          },
                          "dark": false,
                          "fonts": {
                            "bodyLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 16,
                              "fontWeight": "400",
                              "letterSpacing": 0.15,
                              "lineHeight": 24,
                            },
                            "bodyMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 14,
                              "fontWeight": "400",
                              "letterSpacing": 0.25,
                              "lineHeight": 20,
                            },
                            "bodySmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 12,
                              "fontWeight": "400",
                              "letterSpacing": 0.4,
                              "lineHeight": 16,
                            },
                            "default": {
                              "fontFamily": "Rubik-Regular",
                              "fontWeight": "400",
                              "letterSpacing": 0,
                            },
                            "displayLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 57,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 64,
                            },
                            "displayMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 45,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 52,
                            },
                            "displaySmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 36,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 44,
                            },
                            "headlineLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 32,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 40,
                            },
                            "headlineMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 28,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 36,
                            },
                            "headlineSmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 24,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 32,
                            },
                            "labelLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 14,
                              "fontWeight": "500",
                              "letterSpacing": 0.1,
                              "lineHeight": 20,
                            },
                            "labelMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 12,
                              "fontWeight": "500",
                              "letterSpacing": 0.5,
                              "lineHeight": 16,
                            },
                            "labelSmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 11,
                              "fontWeight": "500",
                              "letterSpacing": 0.5,
                              "lineHeight": 16,
                            },
                            "titleLarge": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 22,
                              "fontWeight": "400",
                              "letterSpacing": 0,
                              "lineHeight": 28,
                            },
                            "titleMedium": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 16,
                              "fontWeight": "500",
                              "letterSpacing": 0.15,
                              "lineHeight": 24,
                            },
                            "titleSmall": {
                              "fontFamily": "Rubik-Regular",
                              "fontSize": 14,
                              "fontWeight": "500",
                              "letterSpacing": 0.1,
                              "lineHeight": 20,
                            },
                          },
                          "isV3": true,
                          "roundness": 2,
                          "version": 3,
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": true,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          [
                            false,
                            [
                              {
                                "paddingRight": 24,
                                "paddingVertical": 8,
                              },
                              undefined,
                            ],
                          ]
                        }
                      >
                        <View
                          style={
                            {
                              "flexDirection": "row",
                              "marginVertical": 6,
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            pointerEvents="box-none"
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {
                                  "alignSelf": "center",
                                  "marginLeft": 16,
                                  "marginRight": 0,
                                },
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "rgba(73, 69, 79, 1)",
                                    "fontSize": 24,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "Entypo",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <View
                            style={
                              [
                                {
                                  "paddingLeft": 16,
                                },
                                {
                                  "flex": 1,
                                  "justifyContent": "center",
                                },
                              ]
                            }
                          >
                            <Text
                              numberOfLines={1}
                              selectable={false}
                              style={
                                [
                                  {
                                    "textAlign": "left",
                                  },
                                  {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontWeight": "400",
                                    "letterSpacing": 0,
                                  },
                                  {
                                    "writingDirection": "ltr",
                                  },
                                  [
                                    {
                                      "fontSize": 16,
                                    },
                                    {
                                      "color": "rgba(28, 27, 31, 1)",
                                    },
                                    undefined,
                                  ],
                                ]
                              }
                            >
                              10.000
                            </Text>
                            <Text
                              numberOfLines={2}
                              onTextLayout={[Function]}
                              selectable={false}
                              style={
                                [
                                  {
                                    "textAlign": "left",
                                  },
                                  {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontWeight": "400",
                                    "letterSpacing": 0,
                                  },
                                  {
                                    "writingDirection": "ltr",
                                  },
                                  [
                                    {
                                      "fontSize": 14,
                                    },
                                    {
                                      "color": "rgba(73, 69, 79, 1)",
                                    },
                                    undefined,
                                  ],
                                ]
                              }
                            >
                              9/20/2022, 8:37:46 PM
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": true,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          [
                            false,
                            [
                              {
                                "paddingRight": 24,
                                "paddingVertical": 8,
                              },
                              undefined,
                            ],
                          ]
                        }
                      >
                        <View
                          style={
                            {
                              "flexDirection": "row",
                              "marginVertical": 6,
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            pointerEvents="box-none"
                            style={
                              [
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {
                                  "alignSelf": "center",
                                  "marginLeft": 16,
                                  "marginRight": 0,
                                  "marginVertical": 0,
                                },
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "rgba(73, 69, 79, 1)",
                                    "fontSize": 24,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "Material Icons",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <View
                            style={
                              [
                                {
                                  "paddingLeft": 16,
                                },
                                {
                                  "flex": 1,
                                  "justifyContent": "center",
                                },
                              ]
                            }
                          >
                            <Text
                              numberOfLines={0}
                              selectable={false}
                              style={
                                [
                                  {
                                    "textAlign": "left",
                                  },
                                  {
                                    "color": "rgba(28, 27, 31, 1)",
                                    "fontFamily": "Rubik-Regular",
                                    "fontWeight": "400",
                                    "letterSpacing": 0,
                                  },
                                  {
                                    "writingDirection": "ltr",
                                  },
                                  [
                                    {
                                      "fontSize": 16,
                                    },
                                    {
                                      "color": "rgba(28, 27, 31, 1)",
                                    },
                                    undefined,
                                  ],
                                ]
                              }
                            >
                              What a neat solve!
                            </Text>
                          </View>
                        </View>
                      </View>
                      <View>
                        <View
                          style={
                            {
                              "backgroundColor": "rgba(255, 251, 254, 1)",
                            }
                          }
                        >
                          <View
                            accessibilityRole="button"
                            accessibilityState={
                              {
                                "busy": undefined,
                                "checked": undefined,
                                "disabled": false,
                                "expanded": false,
                                "selected": undefined,
                              }
                            }
                            accessibilityValue={
                              {
                                "max": undefined,
                                "min": undefined,
                                "now": undefined,
                                "text": undefined,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              [
                                {
                                  "overflow": "hidden",
                                },
                                [
                                  {
                                    "paddingRight": 24,
                                    "paddingVertical": 8,
                                  },
                                  {
                                    "marginLeft": 10,
                                  },
                                ],
                              ]
                            }
                          >
                            <View
                              pointerEvents="none"
                              style={
                                {
                                  "flexDirection": "row",
                                  "marginVertical": 6,
                                }
                              }
                            >
                              <View
                                pointerEvents="box-none"
                                style={
                                  [
                                    {
                                      "alignItems": "center",
                                      "justifyContent": "center",
                                    },
                                    {
                                      "alignSelf": "center",
                                      "marginLeft": 16,
                                      "marginRight": 0,
                                      "marginVertical": 0,
                                    },
                                  ]
                                }
                              >
                                <Text
                                  allowFontScaling={false}
                                  selectable={false}
                                  style={
                                    [
                                      {
                                        "color": "rgba(73, 69, 79, 1)",
                                        "fontSize": 24,
                                      },
                                      undefined,
                                      {
                                        "fontFamily": "WCAEvent",
                                        "fontStyle": "normal",
                                        "fontWeight": "normal",
                                      },
                                      {},
                                    ]
                                  }
                                >
                                  
                                </Text>
                              </View>
                              <View
                                style={
                                  [
                                    {
                                      "paddingLeft": 16,
                                    },
                                    {
                                      "flex": 1,
                                      "justifyContent": "center",
                                    },
                                  ]
                                }
                              >
                                <Text
                                  numberOfLines={0}
                                  selectable={false}
                                  style={
                                    [
                                      {
                                        "textAlign": "left",
                                      },
                                      {
                                        "color": "rgba(28, 27, 31, 1)",
                                        "fontFamily": "Rubik-Regular",
                                        "fontWeight": "400",
                                        "letterSpacing": 0,
                                      },
                                      {
                                        "writingDirection": "ltr",
                                      },
                                      [
                                        {
                                          "fontSize": 16,
                                        },
                                        {
                                          "color": "rgba(28, 27, 31, 1)",
                                        },
                                        undefined,
                                      ],
                                    ]
                                  }
                                >
                                  R U
                                </Text>
                              </View>
                              <View
                                style={
                                  [
                                    {
                                      "marginVertical": 6,
                                      "paddingLeft": 8,
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <Text
                                  accessibilityElementsHidden={true}
                                  allowFontScaling={false}
                                  importantForAccessibility="no-hide-descendants"
                                  pointerEvents="none"
                                  selectable={false}
                                  style={
                                    [
                                      {
                                        "color": "rgba(73, 69, 79, 1)",
                                        "fontSize": 24,
                                      },
                                      [
                                        {
                                          "lineHeight": 24,
                                          "transform": [
                                            {
                                              "scaleX": 1,
                                            },
                                          ],
                                        },
                                        {
                                          "backgroundColor": "transparent",
                                        },
                                      ],
                                      {
                                        "fontFamily": "Material Design Icons",
                                        "fontStyle": "normal",
                                        "fontWeight": "normal",
                                      },
                                      {},
                                    ]
                                  }
                                >
                                  󰅀
                                </Text>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "borderBottomLeftRadius": 10,
                    "borderBottomRightRadius": 10,
                    "height": 15,
                    "marginTop": -15,
                    "opacity": 0.25,
                  },
                  {
                    "backgroundColor": "rgba(255, 251, 254, 1)",
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples centered-between-sidebars's custom-weights matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          {
            "flex": 2,
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "red",
              "height": 1334,
            }
          }
        />
      </View>
      <View
        style={
          {
            "flex": 2,
            "zIndex": 1,
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "green",
              "height": 1334,
            }
          }
        />
      </View>
      <View
        style={
          {
            "flex": 2,
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "red",
              "height": 1334,
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples centered-between-sidebars's default matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          {
            "flex": 1,
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "red",
              "height": 1334,
            }
          }
        />
      </View>
      <View
        style={
          {
            "flex": 4,
            "zIndex": 1,
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "green",
              "height": 1334,
            }
          }
        />
      </View>
      <View
        style={
          {
            "flex": 1,
          }
        }
      >
        <View
          style={
            {
              "backgroundColor": "red",
              "height": 1334,
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples event-selector's default matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={{}}
    >
      <RCTScrollView
        data={
          [
            {
              "id": "222",
              "puzzle": {
                "id": "222",
              },
              "type": "WCA",
            },
            {
              "id": "333",
              "puzzle": {
                "id": "333",
              },
              "type": "WCA",
            },
            {
              "id": "333bf",
              "puzzle": {
                "id": "333",
              },
              "type": "WCA",
            },
            {
              "id": "333oh",
              "puzzle": {
                "id": "333",
              },
              "type": "WCA",
            },
            {
              "id": "333ft",
              "puzzle": {
                "id": "333",
              },
              "type": "WCA_OLD",
            },
            {
              "id": "444",
              "puzzle": {
                "id": "444",
              },
              "type": "WCA",
            },
            {
              "id": "444bf",
              "puzzle": {
                "id": "444",
              },
              "type": "WCA",
            },
            {
              "id": "555",
              "puzzle": {
                "id": "555",
              },
              "type": "WCA",
            },
            {
              "id": "555bf",
              "puzzle": {
                "id": "555",
              },
              "type": "WCA",
            },
            {
              "id": "666",
              "puzzle": {
                "id": "666",
              },
              "type": "WCA",
            },
            {
              "id": "777",
              "puzzle": {
                "id": "777",
              },
              "type": "WCA",
            },
            {
              "id": "clock",
              "puzzle": {
                "id": "clock",
              },
              "type": "WCA",
            },
            {
              "id": "pyram",
              "puzzle": {
                "id": "pyram",
              },
              "type": "WCA",
            },
            {
              "id": "minx",
              "puzzle": {
                "id": "minx",
              },
              "type": "WCA",
            },
            {
              "id": "sq1",
              "puzzle": {
                "id": "sq1",
              },
              "type": "WCA",
            },
            {
              "id": "skewb",
              "puzzle": {
                "id": "skewb",
              },
              "type": "WCA",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={[]}
        viewabilityConfigCallbackPairs={[]}
      >
        <View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                [
                  {
                    "flexDirection": "row",
                  },
                  {
                    "alignItems": "center",
                    "justifyContent": "space-evenly",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.222
                </Text>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.333
                </Text>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.333bf
                </Text>
              </View>
            </View>
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                [
                  {
                    "flexDirection": "row",
                  },
                  {
                    "alignItems": "center",
                    "justifyContent": "space-evenly",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.333oh
                </Text>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.333ft
                </Text>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.444
                </Text>
              </View>
            </View>
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                [
                  {
                    "flexDirection": "row",
                  },
                  {
                    "alignItems": "center",
                    "justifyContent": "space-evenly",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.444bf
                </Text>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.555
                </Text>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.555bf
                </Text>
              </View>
            </View>
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                [
                  {
                    "flexDirection": "row",
                  },
                  {
                    "alignItems": "center",
                    "justifyContent": "space-evenly",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.666
                </Text>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.777
                </Text>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.clock
                </Text>
              </View>
            </View>
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                [
                  {
                    "flexDirection": "row",
                  },
                  {
                    "alignItems": "center",
                    "justifyContent": "space-evenly",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.pyram
                </Text>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.minx
                </Text>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.sq1
                </Text>
              </View>
            </View>
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                [
                  {
                    "flexDirection": "row",
                  },
                  {
                    "alignItems": "center",
                    "justifyContent": "space-evenly",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "padding": 10,
                    "width": 187.5,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "rgba(103, 80, 164, 1)",
                        "borderRadius": 30,
                        "height": 60,
                        "width": 60,
                      },
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {},
                    ]
                  }
                >
                  <Text
                    allowFontScaling={false}
                    selectable={false}
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontSize": 36,
                        },
                        undefined,
                        {
                          "fontFamily": "WCAEvent",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        {},
                      ]
                    }
                  >
                    
                  </Text>
                </View>
                <Text
                  numberOfLines={1}
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 11,
                          "fontWeight": "500",
                          "letterSpacing": 0.5,
                          "lineHeight": 16,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  events.skewb
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples event-selector-modal's default matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "transparent",
          "borderRadius": 10,
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
      testID="button-container-outer-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "transparent",
            "borderColor": "transparent",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 0,
            "flex": undefined,
            "minWidth": 64,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="button-container"
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "overflow": "hidden",
              },
              {
                "borderRadius": 10,
              },
            ]
          }
          testID="button"
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                [
                  {
                    "textAlign": "left",
                  },
                  {
                    "color": "rgba(28, 27, 31, 1)",
                    "writingDirection": "ltr",
                  },
                  [
                    {
                      "fontFamily": "Rubik-Regular",
                      "fontSize": 14,
                      "fontWeight": "500",
                      "letterSpacing": 0.1,
                      "lineHeight": 20,
                    },
                    [
                      {
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      false,
                      {
                        "marginHorizontal": 12,
                      },
                      undefined,
                      false,
                      {
                        "color": "rgba(103, 80, 164, 1)",
                        "fontFamily": "Rubik-Regular",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      undefined,
                    ],
                  ],
                ]
              }
              testID="button-text"
            >
              Show Modal
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityLiveRegion="polite"
      accessibilityViewIsModal={true}
      collapsable={false}
      onAccessibilityEscape={[Function]}
      pointerEvents="auto"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="modal"
    >
      <View
        accessibilityLabel="Close modal"
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        importantForAccessibility="no"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "rgba(50, 47, 55, 0.4)",
            "flex": 1,
            "opacity": 1,
          }
        }
        testID="modal-backdrop"
      />
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "marginBottom": 0,
              "marginTop": 0,
            },
            undefined,
          ]
        }
        testID="modal-wrapper"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "rgba(255, 251, 254, 1)",
              "borderRadius": 10,
              "margin": 20,
              "opacity": 1,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.15,
              "shadowRadius": 3,
            }
          }
          testID="modal-surface-outer-layer"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "rgba(255, 251, 254, 1)",
                "borderRadius": 10,
                "flex": undefined,
                "justifyContent": "center",
                "maxHeight": 1067.2,
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 1,
              }
            }
            testID="modal-surface"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "rgb(243, 237, 246)",
                  "borderTopLeftRadius": 10,
                  "borderTopRightRadius": 10,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.15,
                  "shadowRadius": 6,
                }
              }
              testID="surface-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "rgb(243, 237, 246)",
                    "borderTopLeftRadius": 10,
                    "borderTopRightRadius": 10,
                    "flex": undefined,
                    "maxHeight": 160.08,
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 2,
                  }
                }
                testID="surface"
              >
                <Text
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Rubik-Regular",
                          "fontSize": 16,
                          "fontWeight": "500",
                          "letterSpacing": 0.15,
                          "lineHeight": 24,
                        },
                        {
                          "padding": 10,
                        },
                      ],
                    ]
                  }
                >
                  dialogs.select_event
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "stretch",
                  "maxHeight": 907.12,
                }
              }
            >
              <View
                style={{}}
              >
                <RCTScrollView
                  data={
                    [
                      {
                        "id": "222",
                        "puzzle": {
                          "id": "222",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "333",
                        "puzzle": {
                          "id": "333",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "333bf",
                        "puzzle": {
                          "id": "333",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "333oh",
                        "puzzle": {
                          "id": "333",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "333ft",
                        "puzzle": {
                          "id": "333",
                        },
                        "type": "WCA_OLD",
                      },
                      {
                        "id": "444",
                        "puzzle": {
                          "id": "444",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "444bf",
                        "puzzle": {
                          "id": "444",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "555",
                        "puzzle": {
                          "id": "555",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "555bf",
                        "puzzle": {
                          "id": "555",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "666",
                        "puzzle": {
                          "id": "666",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "777",
                        "puzzle": {
                          "id": "777",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "clock",
                        "puzzle": {
                          "id": "clock",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "pyram",
                        "puzzle": {
                          "id": "pyram",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "minx",
                        "puzzle": {
                          "id": "minx",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "sq1",
                        "puzzle": {
                          "id": "sq1",
                        },
                        "type": "WCA",
                      },
                      {
                        "id": "skewb",
                        "puzzle": {
                          "id": "skewb",
                        },
                        "type": "WCA",
                      },
                    ]
                  }
                  getItem={[Function]}
                  getItemCount={[Function]}
                  keyExtractor={[Function]}
                  onContentSizeChange={[Function]}
                  onLayout={[Function]}
                  onMomentumScrollBegin={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  removeClippedSubviews={false}
                  renderItem={[Function]}
                  scrollEventThrottle={50}
                  stickyHeaderIndices={[]}
                  viewabilityConfigCallbackPairs={[]}
                >
                  <View>
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        style={
                          [
                            {
                              "flexDirection": "row",
                            },
                            {
                              "alignItems": "center",
                              "justifyContent": "space-evenly",
                            },
                          ]
                        }
                      >
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.222
                          </Text>
                        </View>
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.333
                          </Text>
                        </View>
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.333bf
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        style={
                          [
                            {
                              "flexDirection": "row",
                            },
                            {
                              "alignItems": "center",
                              "justifyContent": "space-evenly",
                            },
                          ]
                        }
                      >
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.333oh
                          </Text>
                        </View>
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.333ft
                          </Text>
                        </View>
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.444
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        style={
                          [
                            {
                              "flexDirection": "row",
                            },
                            {
                              "alignItems": "center",
                              "justifyContent": "space-evenly",
                            },
                          ]
                        }
                      >
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.444bf
                          </Text>
                        </View>
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.555
                          </Text>
                        </View>
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.555bf
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        style={
                          [
                            {
                              "flexDirection": "row",
                            },
                            {
                              "alignItems": "center",
                              "justifyContent": "space-evenly",
                            },
                          ]
                        }
                      >
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.666
                          </Text>
                        </View>
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.777
                          </Text>
                        </View>
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.clock
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        style={
                          [
                            {
                              "flexDirection": "row",
                            },
                            {
                              "alignItems": "center",
                              "justifyContent": "space-evenly",
                            },
                          ]
                        }
                      >
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.pyram
                          </Text>
                        </View>
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.minx
                          </Text>
                        </View>
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.sq1
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      onFocusCapture={[Function]}
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        style={
                          [
                            {
                              "flexDirection": "row",
                            },
                            {
                              "alignItems": "center",
                              "justifyContent": "space-evenly",
                            },
                          ]
                        }
                      >
                        <View
                          accessibilityState={
                            {
                              "busy": undefined,
                              "checked": undefined,
                              "disabled": undefined,
                              "expanded": undefined,
                              "selected": undefined,
                            }
                          }
                          accessibilityValue={
                            {
                              "max": undefined,
                              "min": undefined,
                              "now": undefined,
                              "text": undefined,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            {
                              "alignItems": "center",
                              "padding": 10,
                              "width": 187.5,
                            }
                          }
                        >
                          <View
                            style={
                              [
                                {
                                  "backgroundColor": "rgba(103, 80, 164, 1)",
                                  "borderRadius": 30,
                                  "height": 60,
                                  "width": 60,
                                },
                                {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                },
                                {},
                              ]
                            }
                          >
                            <Text
                              allowFontScaling={false}
                              selectable={false}
                              style={
                                [
                                  {
                                    "color": "#ffffff",
                                    "fontSize": 36,
                                  },
                                  undefined,
                                  {
                                    "fontFamily": "WCAEvent",
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  },
                                  {},
                                ]
                              }
                            >
                              
                            </Text>
                          </View>
                          <Text
                            numberOfLines={1}
                            style={
                              [
                                {
                                  "textAlign": "left",
                                },
                                {
                                  "color": "rgba(28, 27, 31, 1)",
                                  "writingDirection": "ltr",
                                },
                                [
                                  {
                                    "fontFamily": "Rubik-Regular",
                                    "fontSize": 11,
                                    "fontWeight": "500",
                                    "letterSpacing": 0.5,
                                    "lineHeight": 16,
                                  },
                                  undefined,
                                ],
                              ]
                            }
                          >
                            events.skewb
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </View>
            <View
              style={
                [
                  {
                    "borderBottomLeftRadius": 10,
                    "borderBottomRightRadius": 10,
                    "height": 15,
                    "marginTop": -15,
                    "opacity": 0.25,
                  },
                  {
                    "backgroundColor": "rgba(255, 251, 254, 1)",
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples inspection-time's almost-done matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            [
              {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": [
                  "tabular-nums",
                ],
              },
              {
                "color": "rgba(179, 38, 30, 1)",
                "fontSize": 80,
              },
            ],
          ]
        }
      >
        0
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples inspection-time's default matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            [
              {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": [
                  "tabular-nums",
                ],
              },
            ],
          ]
        }
      >
        15
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples inspection-time's first-warning matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            [
              {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": [
                  "tabular-nums",
                ],
              },
            ],
          ]
        }
      >
        7
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples inspection-time's overtime-2 matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            [
              {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": [
                  "tabular-nums",
                ],
              },
              {
                "color": "rgba(179, 38, 30, 1)",
                "fontSize": 80,
              },
            ],
          ]
        }
      >
        +2
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples inspection-time's overtime-dnf matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            [
              {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": [
                  "tabular-nums",
                ],
              },
              {
                "color": "rgba(179, 38, 30, 1)",
                "fontSize": 80,
              },
            ],
          ]
        }
      >
        DNF
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples inspection-time's ready matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            [
              {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": [
                  "tabular-nums",
                ],
              },
              {
                "color": "#1B5E20",
                "fontSize": 100,
              },
            ],
          ]
        }
      >
        11
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples inspection-time's ready-2 matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            [
              {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": [
                  "tabular-nums",
                ],
              },
              {
                "color": "rgba(179, 38, 30, 1)",
                "fontSize": 80,
              },
              {
                "color": "#1B5E20",
                "fontSize": 100,
              },
            ],
          ]
        }
      >
        +2
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples inspection-time's ready-late matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            [
              {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": [
                  "tabular-nums",
                ],
              },
              {
                "color": "rgba(179, 38, 30, 1)",
                "fontSize": 80,
              },
              {
                "color": "#1B5E20",
                "fontSize": 100,
              },
            ],
          ]
        }
      >
        2
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples inspection-time's second-warning matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            {
              "fontSize": 16,
              "paddingBottom": 10,
            },
          ]
        }
      >
        INSPECTION:
      </Text>
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "fontFamily": "Rubik-Regular",
              "fontWeight": "400",
              "letterSpacing": 0,
            },
            {
              "writingDirection": "ltr",
            },
            [
              {
                "color": "rgba(33, 0, 93, 1)",
                "fontSize": 80,
                "fontVariant": [
                  "tabular-nums",
                ],
              },
              {
                "color": "rgba(179, 38, 30, 1)",
                "fontSize": 80,
              },
            ],
          ]
        }
      >
        3
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples player-controls's default matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-around",
        }
      }
    >
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "writingDirection": "ltr",
            },
            [
              {
                "fontFamily": "Rubik-Regular",
                "fontSize": 11,
                "fontWeight": "500",
                "letterSpacing": 0.5,
                "lineHeight": 16,
              },
              {
                "flex": 1,
                "fontVariant": [
                  "tabular-nums",
                ],
                "textAlign": "center",
              },
            ],
          ]
        }
      >
        0.000
      </Text>
      <RNCSlider
        disabled={false}
        inverted={false}
        lowerLimit={-9007199254740991}
        maximumTrackTintColor="rgba(28, 27, 31, 1)"
        maximumValue={15000}
        minimumTrackTintColor="rgba(103, 80, 164, 1)"
        minimumValue={0}
        onChange={[Function]}
        onRNCSliderAccessibilityAction={null}
        onRNCSliderSlidingComplete={[Function]}
        onRNCSliderSlidingStart={[Function]}
        onRNCSliderValueChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        step={0}
        style={
          [
            {
              "flex": 4,
            },
            {
              "height": 40,
            },
          ]
        }
        tapToSeek={false}
        thumbTintColor="rgba(103, 80, 164, 1)"
        upperLimit={9007199254740991}
        value={0}
      />
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "writingDirection": "ltr",
            },
            [
              {
                "fontFamily": "Rubik-Regular",
                "fontSize": 11,
                "fontWeight": "500",
                "letterSpacing": 0.5,
                "lineHeight": 16,
              },
              {
                "flex": 1,
                "fontVariant": [
                  "tabular-nums",
                ],
                "textAlign": "center",
              },
            ],
          ]
        }
      >
        15.000
      </Text>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        style={
          {
            "flex": 1,
          }
        }
      >
        <View />
      </View>
      <View
        style={
          {
            "flex": 4,
            "zIndex": 1,
          }
        }
      >
        <View
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "transparent",
                "borderRadius": 20,
                "height": 40,
                "margin": 6,
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 0,
                  "width": 0,
                },
                "shadowOpacity": 0,
                "shadowRadius": 0,
                "width": 40,
              }
            }
            testID="icon-button-container-outer-layer"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderColor": "rgba(121, 116, 126, 1)",
                  "borderRadius": 20,
                  "borderWidth": 0,
                  "elevation": 0,
                  "flex": 1,
                  "overflow": "hidden",
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                }
              }
              testID="icon-button-container"
            >
              <View
                accessibilityComponentType="button"
                accessibilityRole="button"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityTraits="button"
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                centered={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 6,
                    "left": 6,
                    "right": 6,
                    "top": 6,
                  }
                }
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    [
                      {
                        "alignItems": "center",
                        "flexGrow": 1,
                        "justifyContent": "center",
                      },
                      {
                        "borderRadius": 20,
                      },
                    ],
                  ]
                }
                testID="icon-button"
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      {
                        "fontFamily": "Entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "transparent",
                "borderRadius": 20,
                "height": 40,
                "margin": 6,
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 0,
                  "width": 0,
                },
                "shadowOpacity": 0,
                "shadowRadius": 0,
                "width": 40,
              }
            }
            testID="icon-button-container-outer-layer"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderColor": "rgba(121, 116, 126, 1)",
                  "borderRadius": 20,
                  "borderWidth": 0,
                  "elevation": 0,
                  "flex": 1,
                  "overflow": "hidden",
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                }
              }
              testID="icon-button-container"
            >
              <View
                accessibilityComponentType="button"
                accessibilityRole="button"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityTraits="button"
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                centered={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 6,
                    "left": 6,
                    "right": 6,
                    "top": 6,
                  }
                }
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    [
                      {
                        "alignItems": "center",
                        "flexGrow": 1,
                        "justifyContent": "center",
                      },
                      {
                        "borderRadius": 20,
                      },
                    ],
                  ]
                }
                testID="icon-button"
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      {
                        "fontFamily": "Entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "transparent",
                "borderRadius": 20,
                "height": 40,
                "margin": 6,
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 0,
                  "width": 0,
                },
                "shadowOpacity": 0,
                "shadowRadius": 0,
                "width": 40,
              }
            }
            testID="icon-button-container-outer-layer"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderColor": "rgba(121, 116, 126, 1)",
                  "borderRadius": 20,
                  "borderWidth": 0,
                  "elevation": 0,
                  "flex": 1,
                  "overflow": "hidden",
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                }
              }
              testID="icon-button-container"
            >
              <View
                accessibilityComponentType="button"
                accessibilityRole="button"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityTraits="button"
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                centered={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 6,
                    "left": 6,
                    "right": 6,
                    "top": 6,
                  }
                }
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    [
                      {
                        "alignItems": "center",
                        "flexGrow": 1,
                        "justifyContent": "center",
                      },
                      {
                        "borderRadius": 20,
                      },
                    ],
                  ]
                }
                testID="icon-button"
              >
                <View
                  style={
                    [
                      {
                        "alignItems": "center",
                        "justifyContent": "center",
                      },
                      {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      {
                        "bottom": 0,
                        "left": 0,
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                        "transform": [
                          {
                            "rotate": "0deg",
                          },
                        ],
                      }
                    }
                    testID="cross-fade-icon-current"
                  >
                    <Text
                      allowFontScaling={false}
                      selectable={false}
                      style={
                        [
                          {
                            "color": "rgba(73, 69, 79, 1)",
                            "fontSize": 24,
                          },
                          undefined,
                          {
                            "fontFamily": "Entypo",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          {},
                        ]
                      }
                    >
                      
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "transparent",
                "borderRadius": 20,
                "height": 40,
                "margin": 6,
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 0,
                  "width": 0,
                },
                "shadowOpacity": 0,
                "shadowRadius": 0,
                "width": 40,
              }
            }
            testID="icon-button-container-outer-layer"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderColor": "rgba(121, 116, 126, 1)",
                  "borderRadius": 20,
                  "borderWidth": 0,
                  "elevation": 0,
                  "flex": 1,
                  "overflow": "hidden",
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                }
              }
              testID="icon-button-container"
            >
              <View
                accessibilityComponentType="button"
                accessibilityRole="button"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityTraits="button"
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                centered={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 6,
                    "left": 6,
                    "right": 6,
                    "top": 6,
                  }
                }
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    [
                      {
                        "alignItems": "center",
                        "flexGrow": 1,
                        "justifyContent": "center",
                      },
                      {
                        "borderRadius": 20,
                      },
                    ],
                  ]
                }
                testID="icon-button"
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      {
                        "fontFamily": "Entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "transparent",
                "borderRadius": 20,
                "height": 40,
                "margin": 6,
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 0,
                  "width": 0,
                },
                "shadowOpacity": 0,
                "shadowRadius": 0,
                "width": 40,
              }
            }
            testID="icon-button-container-outer-layer"
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderColor": "rgba(121, 116, 126, 1)",
                  "borderRadius": 20,
                  "borderWidth": 0,
                  "elevation": 0,
                  "flex": 1,
                  "overflow": "hidden",
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                }
              }
              testID="icon-button-container"
            >
              <View
                accessibilityComponentType="button"
                accessibilityRole="button"
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityTraits="button"
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                centered={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  {
                    "bottom": 6,
                    "left": 6,
                    "right": 6,
                    "top": 6,
                  }
                }
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    {
                      "overflow": "hidden",
                    },
                    [
                      {
                        "alignItems": "center",
                        "flexGrow": 1,
                        "justifyContent": "center",
                      },
                      {
                        "borderRadius": 20,
                      },
                    ],
                  ]
                }
                testID="icon-button"
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "rgba(73, 69, 79, 1)",
                        "fontSize": 24,
                      },
                      undefined,
                      {
                        "fontFamily": "Entypo",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          {
            "flex": 1,
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              [
                {
                  "textAlign": "left",
                },
                {
                  "color": "rgba(28, 27, 31, 1)",
                  "writingDirection": "ltr",
                },
                [
                  {
                    "fontFamily": "Rubik-Regular",
                    "fontSize": 12,
                    "fontWeight": "400",
                    "letterSpacing": 0.4,
                    "lineHeight": 16,
                  },
                  {
                    "color": "rgba(103, 80, 164, 1)",
                  },
                ],
              ]
            }
          >
            1x
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples tps-chart's 2x2x2 matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
          "padding": 10,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "#F5FCFF",
            "flex": 1,
          }
        }
      >
        <RNLineChart
          chartBackgroundColor={4294966270}
          chartDescription={
            {
              "text": "",
            }
          }
          data={
            {
              "dataSets": [
                {
                  "config": {
                    "color": 4284960932,
                    "drawCircles": false,
                    "drawFilled": true,
                    "drawValues": false,
                    "fillAlpha": 100,
                    "fillGradient": {
                      "angle": 90,
                      "colors": [
                        4294966270,
                        4284960932,
                      ],
                      "orientation": "BOTTOM_TOP",
                      "positions": [
                        0,
                        1,
                      ],
                    },
                    "mode": "HORIZONTAL_BEZIER",
                  },
                  "label": "analytics.tps",
                  "values": [
                    {
                      "x": 0,
                      "y": 0,
                    },
                    {
                      "x": 1,
                      "y": 2,
                    },
                    {
                      "x": 1.2520333333333333,
                      "y": 2,
                    },
                    {
                      "x": 1.5040666666666667,
                      "y": 3,
                    },
                    {
                      "x": 1.7561,
                      "y": 2,
                    },
                    {
                      "x": 2.0081333333333333,
                      "y": 4,
                    },
                    {
                      "x": 2.2601666666666667,
                      "y": 6,
                    },
                    {
                      "x": 2.5122,
                      "y": 5,
                    },
                    {
                      "x": 2.7642333333333333,
                      "y": 7,
                    },
                    {
                      "x": 3.016266666666666,
                      "y": 8,
                    },
                    {
                      "x": 3.2682999999999995,
                      "y": 5,
                    },
                    {
                      "x": 3.520333333333333,
                      "y": 5,
                    },
                    {
                      "x": 3.772366666666666,
                      "y": 2,
                    },
                    {
                      "x": 4.0244,
                      "y": 0,
                    },
                    {
                      "x": 4.276433333333333,
                      "y": 0,
                    },
                    {
                      "x": 4.5284666666666675,
                      "y": 1,
                    },
                    {
                      "x": 4.780500000000001,
                      "y": 2,
                    },
                    {
                      "x": 5.032533333333335,
                      "y": 2,
                    },
                    {
                      "x": 5.284566666666668,
                      "y": 3,
                    },
                    {
                      "x": 5.536600000000002,
                      "y": 4,
                    },
                    {
                      "x": 5.788633333333336,
                      "y": 5,
                    },
                    {
                      "x": 6.040666666666669,
                      "y": 7,
                    },
                    {
                      "x": 6.2927000000000035,
                      "y": 6,
                    },
                    {
                      "x": 6.544733333333337,
                      "y": 4,
                    },
                    {
                      "x": 6.796766666666671,
                      "y": 4,
                    },
                    {
                      "x": 7.048800000000004,
                      "y": 5,
                    },
                    {
                      "x": 7.300833333333339,
                      "y": 6,
                    },
                    {
                      "x": 7.552866666666672,
                      "y": 6,
                    },
                    {
                      "x": 7.561,
                      "y": 0,
                    },
                  ],
                },
                {
                  "config": {
                    "color": 4279983648,
                    "drawCircles": false,
                    "drawValues": false,
                    "mode": "LINEAR",
                  },
                  "label": "analytics.tps",
                  "values": [],
                },
              ],
            }
          }
          legend={
            {
              "enabled": false,
              "fontFamily": "Rubik",
              "form": "CIRCLE",
              "textColor": 4280032031,
            }
          }
          marker={
            {
              "enabled": true,
            }
          }
          style={
            {
              "flex": 1,
            }
          }
          xAxis={
            {
              "enabled": false,
              "fontFamily": "Rubik",
              "position": "BOTTOM",
              "textColor": 4280032031,
            }
          }
          yAxis={
            {
              "left": {
                "fontFamily": "Rubik",
                "textColor": 4280032031,
              },
              "right": {
                "enabled": false,
              },
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples tps-chart's 3x3x3 matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
          "padding": 10,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "#F5FCFF",
            "flex": 1,
          }
        }
      >
        <RNLineChart
          chartBackgroundColor={4294966270}
          chartDescription={
            {
              "text": "",
            }
          }
          data={
            {
              "dataSets": [
                {
                  "config": {
                    "color": 4284960932,
                    "drawCircles": false,
                    "drawFilled": true,
                    "drawValues": false,
                    "fillAlpha": 100,
                    "fillGradient": {
                      "angle": 90,
                      "colors": [
                        4294966270,
                        4284960932,
                      ],
                      "orientation": "BOTTOM_TOP",
                      "positions": [
                        0,
                        1,
                      ],
                    },
                    "mode": "HORIZONTAL_BEZIER",
                  },
                  "label": "analytics.tps",
                  "values": [
                    {
                      "x": 0,
                      "y": 0,
                    },
                    {
                      "x": 1,
                      "y": 2,
                    },
                    {
                      "x": 1.4945,
                      "y": 4,
                    },
                    {
                      "x": 1.989,
                      "y": 4,
                    },
                    {
                      "x": 2.4835,
                      "y": 2,
                    },
                    {
                      "x": 2.978,
                      "y": 1,
                    },
                    {
                      "x": 3.4725,
                      "y": 3,
                    },
                    {
                      "x": 3.967,
                      "y": 3,
                    },
                    {
                      "x": 4.4615,
                      "y": 3,
                    },
                    {
                      "x": 4.956,
                      "y": 2,
                    },
                    {
                      "x": 5.4505,
                      "y": 3,
                    },
                    {
                      "x": 5.945,
                      "y": 6,
                    },
                    {
                      "x": 6.4395,
                      "y": 6,
                    },
                    {
                      "x": 6.934,
                      "y": 5,
                    },
                    {
                      "x": 7.4285,
                      "y": 5,
                    },
                    {
                      "x": 7.923,
                      "y": 6,
                    },
                    {
                      "x": 8.4175,
                      "y": 6,
                    },
                    {
                      "x": 8.912,
                      "y": 5,
                    },
                    {
                      "x": 9.4065,
                      "y": 7,
                    },
                    {
                      "x": 9.901,
                      "y": 5,
                    },
                    {
                      "x": 10.3955,
                      "y": 2,
                    },
                    {
                      "x": 10.89,
                      "y": 3,
                    },
                    {
                      "x": 11.3845,
                      "y": 6,
                    },
                    {
                      "x": 11.879,
                      "y": 6,
                    },
                    {
                      "x": 12.3735,
                      "y": 7,
                    },
                    {
                      "x": 12.868,
                      "y": 6,
                    },
                    {
                      "x": 13.3625,
                      "y": 4,
                    },
                    {
                      "x": 13.857,
                      "y": 6,
                    },
                    {
                      "x": 14.3515,
                      "y": 8,
                    },
                    {
                      "x": 14.835,
                      "y": 0,
                    },
                  ],
                },
                {
                  "config": {
                    "color": 4279983648,
                    "drawCircles": false,
                    "drawValues": false,
                    "mode": "LINEAR",
                  },
                  "label": "analytics.tps",
                  "values": [],
                },
              ],
            }
          }
          legend={
            {
              "enabled": false,
              "fontFamily": "Rubik",
              "form": "CIRCLE",
              "textColor": 4280032031,
            }
          }
          marker={
            {
              "enabled": true,
            }
          }
          style={
            {
              "flex": 1,
            }
          }
          xAxis={
            {
              "enabled": false,
              "fontFamily": "Rubik",
              "position": "BOTTOM",
              "textColor": 4280032031,
            }
          }
          yAxis={
            {
              "left": {
                "fontFamily": "Rubik",
                "textColor": 4280032031,
              },
              "right": {
                "enabled": false,
              },
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples tps-chart's 3x3x3-gyro matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
          "padding": 10,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "#F5FCFF",
            "flex": 1,
          }
        }
      >
        <RNLineChart
          chartBackgroundColor={4294966270}
          chartDescription={
            {
              "text": "",
            }
          }
          data={
            {
              "dataSets": [
                {
                  "config": {
                    "color": 4284960932,
                    "drawCircles": false,
                    "drawFilled": true,
                    "drawValues": false,
                    "fillAlpha": 100,
                    "fillGradient": {
                      "angle": 90,
                      "colors": [
                        4294966270,
                        4284960932,
                      ],
                      "orientation": "BOTTOM_TOP",
                      "positions": [
                        0,
                        1,
                      ],
                    },
                    "mode": "HORIZONTAL_BEZIER",
                  },
                  "label": "analytics.tps",
                  "values": [
                    {
                      "x": 0,
                      "y": 0,
                    },
                    {
                      "x": 1,
                      "y": 4,
                    },
                    {
                      "x": 1.3944333333333334,
                      "y": 4,
                    },
                    {
                      "x": 1.7888666666666668,
                      "y": 3,
                    },
                    {
                      "x": 2.1833,
                      "y": 3,
                    },
                    {
                      "x": 2.5777333333333337,
                      "y": 3,
                    },
                    {
                      "x": 2.972166666666667,
                      "y": 4,
                    },
                    {
                      "x": 3.3666000000000005,
                      "y": 6,
                    },
                    {
                      "x": 3.7610333333333337,
                      "y": 7,
                    },
                    {
                      "x": 4.155466666666667,
                      "y": 6,
                    },
                    {
                      "x": 4.549900000000001,
                      "y": 6,
                    },
                    {
                      "x": 4.944333333333334,
                      "y": 7,
                    },
                    {
                      "x": 5.338766666666667,
                      "y": 8,
                    },
                    {
                      "x": 5.733200000000001,
                      "y": 7,
                    },
                    {
                      "x": 6.127633333333334,
                      "y": 7,
                    },
                    {
                      "x": 6.522066666666667,
                      "y": 4,
                    },
                    {
                      "x": 6.916500000000001,
                      "y": 3,
                    },
                    {
                      "x": 7.310933333333335,
                      "y": 7,
                    },
                    {
                      "x": 7.705366666666667,
                      "y": 9,
                    },
                    {
                      "x": 8.099800000000002,
                      "y": 6,
                    },
                    {
                      "x": 8.494233333333334,
                      "y": 2,
                    },
                    {
                      "x": 8.888666666666666,
                      "y": 6,
                    },
                    {
                      "x": 9.2831,
                      "y": 10,
                    },
                    {
                      "x": 9.677533333333331,
                      "y": 9,
                    },
                    {
                      "x": 10.071966666666663,
                      "y": 5,
                    },
                    {
                      "x": 10.466399999999997,
                      "y": 5,
                    },
                    {
                      "x": 10.860833333333328,
                      "y": 10,
                    },
                    {
                      "x": 11.25526666666666,
                      "y": 10,
                    },
                    {
                      "x": 11.649699999999994,
                      "y": 8,
                    },
                    {
                      "x": 11.833,
                      "y": 0,
                    },
                  ],
                },
                {
                  "config": {
                    "color": 4279983648,
                    "drawCircles": false,
                    "drawValues": false,
                    "mode": "LINEAR",
                  },
                  "label": "analytics.tps",
                  "values": [],
                },
              ],
            }
          }
          legend={
            {
              "enabled": false,
              "fontFamily": "Rubik",
              "form": "CIRCLE",
              "textColor": 4280032031,
            }
          }
          marker={
            {
              "enabled": true,
            }
          }
          style={
            {
              "flex": 1,
            }
          }
          xAxis={
            {
              "enabled": false,
              "fontFamily": "Rubik",
              "position": "BOTTOM",
              "textColor": 4280032031,
            }
          }
          yAxis={
            {
              "left": {
                "fontFamily": "Rubik",
                "textColor": 4280032031,
              },
              "right": {
                "enabled": false,
              },
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's 2D matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "3x3x3",
                visualization: "2D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's 2x2x2 matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "2x2x2",
                visualization: "3D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's 3x3x3 matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "3x3x3",
                visualization: "3D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's 4x4x4 matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "4x4x4",
                visualization: "3D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's 5x5x5 matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "5x5x5",
                visualization: "3D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's 6x6x6 matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "6x6x6",
                visualization: "3D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's 7x7x7 matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "7x7x7",
                visualization: "3D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's back-view-side-by-side matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "3x3x3",
                visualization: "3D",
                hintFacelets: "none",
                backView: "side-by-side",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's back-view-top-right matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "3x3x3",
                visualization: "3D",
                hintFacelets: "none",
                backView: "top-right",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's clock matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "clock",
                visualization: "3D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's custom-scramble matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "3x3x3",
                visualization: "3D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "R U R' U'",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's default matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "3x3x3",
                visualization: "3D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's hint-facelets-floating matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "3x3x3",
                visualization: "3D",
                hintFacelets: "floating",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's megaminx matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "megaminx",
                visualization: "3D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's pyraminx matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "pyraminx",
                visualization: "3D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's skewb matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "skewb",
                visualization: "3D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Examples twisty-player's square-1 matches snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      originWhitelist={
        [
          "*",
        ]
      }
      scrollEnabled={false}
      setBuiltInZoomControls={false}
      setDisplayZoomControls={false}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      source={
        {
          "html": "
            <script type="module">
              import { TwistyPlayer } from "https://cdn.cubing.net/js/cubing/twisty";
              import { Move } from "https://cdn.cubing.net/js/cubing/alg";

              const player = new TwistyPlayer({
                puzzle: "square1",
                visualization: "3D",
                hintFacelets: "none",
                backView: "none",
                background: "none",
                controlPanel: "none",
              });
              player.style = "width: 768; height: 512;"
              player.alg = "",
              document.body.appendChild(player);
              document.getElementById("add-move").addEventListener("click", () => {
                var move = document.getElementById("add-move").innerHTML
                player.experimentalAddAlgLeaf(new Move(move));
              })
              document.getElementById("set-algorithm").addEventListener("click", () => {
                var alg = document.getElementById("set-algorithm").innerHTML
                player.alg = alg;
              })
            </script>

            <body
              style="width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; background-color: black">
              <button hidden id="add-move">U</button>
              <button hidden id="set-algorithm"></button>
            </body>
          ",
        }
      }
      style={
        {
          "flex": 1,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;
